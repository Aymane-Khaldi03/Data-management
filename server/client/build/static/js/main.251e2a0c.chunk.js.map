{"version":3,"sources":["assets/bp.avif","pages/Home.js","hooks/useAuth.js","assets/loginpageimage.jpg","components/Auth/Login.js","components/Auth/Signup.js","pages/AdminDashboard.js","pages/ConsultantDashboard.js","assets/logo.png","components/Shared/Navbar.js","components/Shared/Sidebar.js","components/Dashboard/ExcelEditor.js","components/Dashboard/ITEquipmentLanding.js","components/Dashboard/ITEquipmentView.js","components/Dashboard/ITEquipment.js","components/Dashboard/TelecomPack.js","components/Dashboard/TelecomPackLanding.js","components/Dashboard/TelecomPackView.js","components/Dashboard/TelephoneLine.js","components/Dashboard/TelephoneLineLanding.js","components/Dashboard/TelephoneLineView.js","App.js","index.js"],"names":["Home","console","log","_jsxs","className","children","_jsx","src","backgroundImage","alt","AuthContext","createContext","AuthProvider","_ref","auth","useProvideAuth","Provider","value","useAuth","useContext","user","setUser","useState","loading","setLoading","history","useHistory","useEffect","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","loggedInUser","email","role","fullName","error","removeItem","login","async","password","response","fetch","method","headers","body","stringify","ok","data","json","setItem","Error","msg","message","signup","logout","push","Container","styled","div","_templateObject","_taggedTemplateLiteral","Background","_templateObject2","loginpageimage","Title","h2","_templateObject3","Form","form","_templateObject4","FormGroup","_templateObject5","Label","label","_templateObject6","Input","input","_templateObject7","PasswordInput","_templateObject8","EyeIcon","_templateObject9","Button","button","_templateObject10","props","isHovering","AdditionalOptions","_templateObject11","StyledLink","Link","_templateObject12","Footer","footer","_templateObject13","Message","p","_templateObject14","spin","keyframes","_templateObject15","Spinner","FaSpinner","_templateObject16","Login","setEmail","setPassword","showPassword","setShowPassword","setMessage","setIsHovering","rememberMe","setRememberMe","isLoading","setIsLoading","savedEmail","onSubmit","e","preventDefault","setTimeout","type","onChange","target","required","onClick","FaEyeSlash","FaEye","checked","to","onMouseEnter","onMouseLeave","signupBackgroundImage","a","Signup","setFullName","length","errorMessage","href","AdminDashboard","userHistory","setUserHistory","modificationHistory","setModificationHistory","telecomModificationHistory","setTelecomModificationHistory","telephoneLineModificationHistory","setTelephoneLineModificationHistory","Authorization","concat","fetchUserHistory","filteredData","filter","mod","field","fetchModificationHistory","fetchTelecomModificationHistory","forEach","status","fetchTelephoneLineModificationHistory","handleDropTable","Swal","fire","title","table","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","requestUrl","axios","delete","statusText","formatDate","dateString","date","Date","toLocaleDateString","toLocaleTimeString","map","index","lastLogin","modification","User","modifiedAt","oldValue","newValue","ConsultantDashboard","handleNavigation","path","Redirect","Navbar","isAuthenticated","logo","_Fragment","Sidebar","isActive","setIsActive","toggleSidebar","NavLink","activeClassName","handleLogout","socket","io","ExcelEditor","selectedFile","setSelectedFile","setTable","schema","setSchema","matchingColumns","setMatchingColumns","uploadProgress","setUploadProgress","get","fetchSchema","on","uploadId","progress","off","reader","FileReader","onload","workbook","XLSX","result","sheetName","SheetNames","record","Object","fromEntries","entries","_ref2","key","includes","filterColumns","sheet_to_json","Sheets","column","keys","countMatchingColumns","readAsBinaryString","event","files","FaFileExcel","name","alert","formData","FormData","append","post","style","width","Modal","setAppElement","ITEquipmentLanding","modalIsOpen","setModalIsOpen","closeModal","handleModifyClick","isOpen","onRequestClose","contentLabel","overlayClassName","SelectColumnFilter","_ref3","filterValue","setFilter","id","uniqueValues","globalSetFilters","originalData","setITEquipments","applyFilters","selectedOptions","setSelectedOptions","val","Select","selected","values","option","undefined","prev","updatedFilters","options","isMulti","placeholder","ITEquipmentView","itEquipments","setOriginalData","columns","setColumns","setUniqueValues","filters","setFilters","fetchITEquipments","item","every","Array","isArray","equipments","createdAt","updatedAt","rest","defaultValue","arguments","defaultNumber","updatedData","setDefaultValues","header","Set","cols","Header","accessor","row","i","disableFilters","disableSortBy","replace","Filter","toast","Table","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","state","pageIndex","pageSize","gotoPage","nextPage","previousPage","setPageSize","useTable","defaultColumn","minWidth","maxWidth","initialState","useFilters","useSortBy","usePagination","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","disabled","Number","ToastContainer","filterKey","handleDelete","ws","json_to_sheet","wb","book_new","book_append_sheet","exportToExcel","toISOString","rows","CustomDropdown","_ref4","setIsOpen","inputValue","setInputValue","filteredOptions","toLowerCase","handleSelect","ITEquipment","setOptions","newEquipment","setNewEquipment","categorie","marque","model","code_materiel","serie","code_localisation","code_entite","date_installation","fin_garantie","statut","type_acquisition","date_achat","date_livraison","fournisseur","numero_facture","prix_achat","numero_appel_offre","numero_livraison","cout_maintenance","emploi_principal","niveau_criticite","sla","date_sortie","commentaire","isEditing","setIsEditing","currentEquipment","setCurrentEquipment","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","sortBy","setSortBy","allITEquipments","setAllITEquipments","selectedFilters","setSelectedFilters","handleChange","prevState","filteredAndSortedData","React","useMemo","rowValue","toString","sortByField","sort","b","aValue","bValue","desc","currentRows","indexOfLastRow","indexOfFirstRow","slice","equipment","rowNumber","actions","handleModifyEquipment","prevEquipments","handleDeleteEquipment","handleFilterChange","prevFilters","prevSelected","handlePageNumberClick","pageNumber","goBack","filteredEquipment","put","formattedEquipment","handleDeleteFilter","updatedSelected","Math","ceil","subfieldOptionsMap","formatTelecomPackData","pack","formattedPack","dateAbonnement","dateReengagement","dateEtat","_ref15","handleRemoveSelectedValue","filterOptions","classNamePrefix","_ref16","_ref17","TelecomPack","telecomPacks","setTelecomPacks","setFilteredData","entite","operateur","produit","etatAbonnement","produit2","numero","observation","typePoste","numeroDeSerie","dateAffectation","newPack","setNewPack","currentPack","setCurrentPack","subfieldOptions","setSubfieldOptions","subfield","setSubfield","totalPages","setTotalPages","paginate","match","fetchTelecomPacks","fetchDropdownOptions","fields","fetchedOptions","from","appliedFilters","columnId","updatedValues","Cell","handleModifyPack","original","handleDeletePack","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","paginatedData","startIndex","endIndex","colSpan","updatedPack","addedPack","handleRemoveFilter","parseInt","TelecomPackLanding","updatedOptions","TelecomPackView","params","getCustomHeaderName","numero_de_gsm","full_name","direction","fonction","poste_GSM","disableMultiSort","TelephoneLine","telephoneLines","setTelephoneLines","newLine","setNewLine","currentLine","setCurrentLine","line","fetchTelephoneLines","handleModifyLine","handleDeleteLine","innerKey","startsWith","formattedLine","updatedLine","addedLine","TelephoneLineLanding","TelephoneLineView","AppContent","location","useLocation","showSidebar","pathname","Switch","Route","exact","component","getDashboardComponent","App","Router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.251e2a0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bp.7bb0c3d4.avif\";","import React from 'react';\r\nimport './Home.css';\r\nimport backgroundImage from '../assets/bp.avif'; // Adjust the path as necessary\r\n\r\nconst Home = () => {\r\n  console.log('Home component rendered');\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home-content\">\r\n        <h1>Bienvenue sur le site de la Banque Populaire</h1>\r\n        <p>Ceci est la page d'accueil de notre application.</p>\r\n        <p>Nous vous offrons les meilleurs services bancaires pour répondre à vos besoins financiers.</p>\r\n        <img src={backgroundImage} alt=\"Banque Populaire\" />\r\n      </div>\r\n      <div className=\"footer\">\r\n        <footer>&copy; 2024 Banque Populaire. Tous droits réservés.</footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useContext, createContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const auth = useProvideAuth();\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nconst useProvideAuth = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n        const loggedInUser = { email: decodedToken.user.email, role: decodedToken.user.role, fullName: decodedToken.user.fullName };\r\n        setUser(loggedInUser);\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\r\n        localStorage.setItem('token', data.token);\r\n        const loggedInUser = { email, role: decodedToken.user.role, fullName: decodedToken.user.fullName };\r\n        setUser(loggedInUser);\r\n        return loggedInUser;\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.msg || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      throw new Error('Server error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const signup = async (fullName, email, password, role) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ fullName, email, password, role }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\r\n        localStorage.setItem('token', data.token);\r\n        setUser({ email, role: decodedToken.user.role, fullName: decodedToken.user.fullName });\r\n        setLoading(false);\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.msg || 'Signup failed');\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      throw new Error('Server error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    history.push('/login');\r\n  };\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading,\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/loginpageimage.38fb181b.jpg\";","import React, { useState, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport loginpageimage from '../../assets/loginpageimage.jpg';\nimport { FaEye, FaEyeSlash, FaSpinner } from 'react-icons/fa';\nimport styled, { keyframes } from 'styled-components';\n\nconst Login = () => {\n  const { login } = useAuth();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('rememberMeEmail');\n    const savedPassword = localStorage.getItem('rememberMePassword');\n    if (savedEmail) {\n      setEmail(savedEmail);\n      setRememberMe(true);\n    }\n    /* not saving the password\n    if (savedPassword) {\n      setPassword(savedPassword);\n    }\n      */\n\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const user = await login(email, password);\n      setMessage('Login successful! Redirecting to dashboard...');\n      if (rememberMe) {\n        localStorage.setItem('rememberMeEmail', email);\n        //localStorage.setItem('rememberMePassword', password); // Optional: save password\n      } else {\n        localStorage.removeItem('rememberMeEmail');\n        //localStorage.removeItem('rememberMePassword');\n      }\n\n      // Redirect based on role\n      setTimeout(() => {\n        setIsLoading(false);\n        switch (user.role) {\n          case 'admin':\n            history.push('/dashboard');\n            break;\n          case 'consultant':\n            history.push('/dashboard');\n            break;\n          default:\n            history.push('/edit-excel');\n            break;\n        }\n      }, 2000);\n    } catch (error) {\n      setIsLoading(false);\n      setMessage('Login failed: ' + error.message);\n    }\n  };\n\n  return (\n    <Container>\n      <Background />\n      <Title>Login</Title>\n      {message && <Message>{message} {isLoading && <Spinner />}</Message>}\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label>Email</Label>\n          <Input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n        </FormGroup>\n        <FormGroup>\n          <Label>Password</Label>\n          <PasswordInput>\n            <Input\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <EyeIcon onClick={() => setShowPassword(!showPassword)}>\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\n            </EyeIcon>\n          </PasswordInput>\n        </FormGroup>\n        <AdditionalOptions>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(e.target.checked)}\n            /> Remember me\n          </label>\n          <StyledLink to=\"/forgot-password\" onClick={() => console.log('Forgot Password link clicked')}>Forgot password?</StyledLink>\n        </AdditionalOptions>\n        <Button\n          type=\"submit\"\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n          isHovering={isHovering}\n        >\n          Login\n        </Button>\n        <Footer>\n          Not a member? <StyledLink to=\"/signup\">Signup Now</StyledLink>\n        </Footer>\n      </Form>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  text-align: center;\n  overflow: hidden;\n  margin: -10px;\n  flex: 1;\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${loginpageimage}) no-repeat center center fixed;\n  background-size: cover;\n  filter: blur(4px);\n  z-index: -1;\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 20px;\n  font-weight: bold;\n  font-size: 50px;\n`;\n\nconst Form = styled.form`\n  background: rgba(255, 255, 255, 0.9);\n  padding: 70px 50px;\n  border-radius: 10px;\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\n  text-align: left;\n  width: 100%;\n  max-width: 450px;\n  z-index: 1;\n  position: relative;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #555;\n  font-size: 14px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nconst PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst EyeIcon = styled.div`\n  position: absolute;\n  right: 10px;\n  cursor: pointer;\n  margin-top: 13px;\n  font-size: 16px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: ${props => (props.isHovering ? 'black' : '#ef6108')};\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst AdditionalOptions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 15px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: #ef6108;\n  text-decoration: none;\n  font-size: 14px;\n`;\n\nconst Footer = styled.footer`\n  margin-top: 20px;\n  font-size: 14px;\n  color: #777;\n  font-weight: bold;\n  position: absolute;\n  bottom: 20px;\n  width: 100%;\n  text-align: center;\n  align-items: center;\n`;\n\nconst Message = styled.p`\n  color: red;\n  font-style: italic;\n  font-weight: bold;\n`;\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;\n\nconst Spinner = styled(FaSpinner)`\n  margin-left: 10px;\n  animation: ${spin} 1s linear infinite;\n`;\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport signupBackgroundImage from '../../assets/loginpageimage.jpg';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nconst Signup = () => {\n  const { signup } = useAuth();\n  const history = useHistory();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [message, setMessage] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password.length < 6) {\n      setMessage('Password must be at least 6 characters long');\n      return;\n    }\n    try {\n      await signup(fullName, email, password);\n      setMessage('Signup successful! Redirecting to login...');\n      setTimeout(() => {\n        history.push('/login');\n      }, 2000);\n    } catch (error) {\n      const errorMessage = error.response && error.response.data ? error.response.data.msg : error.message;\n      setMessage('Signup failed: ' + errorMessage);\n    }\n  };\n\n  return (\n    <Container>\n      <Background />\n      <Title>Signup</Title>\n      {message && <Message>{message}</Message>}\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label>Full Name</Label>\n          <Input type=\"text\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\n        </FormGroup>\n        <FormGroup>\n          <Label>Email</Label>\n          <Input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n        </FormGroup>\n        <FormGroup>\n          <Label>Password</Label>\n          <PasswordInput>\n            <Input\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n            <EyeIcon onClick={() => setShowPassword(!showPassword)}>\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\n            </EyeIcon>\n          </PasswordInput>\n        </FormGroup>\n        <Button\n          type=\"submit\"\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n          isHovering={isHovering}\n        >\n          Signup\n        </Button>\n        <Footer>\n          Already a member? <Link href=\"/login\">Login Now</Link>\n        </Footer>\n      </Form>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  text-align: center;\n  overflow: hidden;\n  margin: -10px;\n  flex: 1;\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: url(${signupBackgroundImage}) no-repeat center center fixed;\n  background-size: cover;\n  filter: blur(4px);\n  z-index: -1;\n`;\n\nconst Title = styled.h2`\n  color: #333;\n  margin-bottom: 20px;\n  font-weight: bold;\n  font-size: 50px;\n`;\n\nconst Form = styled.form`\n  background: rgba(255, 255, 255, 0.9);\n  padding: 50px 50px;\n  border-radius: 10px;\n  box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);\n  text-align: left;\n  width: 100%;\n  max-width: 450px;\n  z-index: 1;\n  position: relative;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #555;\n    font-size: 14px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 16px;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n`;\n\nconst PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst EyeIcon = styled.div`\n  position: absolute;\n  right: 10px;\n  cursor: pointer;\n  margin-top: -6px;\n  font-size: 16px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: ${props => (props.isHovering ? 'black' : '#ef6108')};\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst Link = styled.a`\n  color: #ef6108;\n  text-decoration: none;\n  font-size: 14px;\n`;\n\nconst Footer = styled.footer`\n  margin-top: 10px;\n  font-size: 14px;\n  color: #777;\n  font-weight: bold;\n  position: absolute;\n  bottom: 10px;\n  width: calc(100% - 100px);\n  text-align: center;\n`;\n\nconst Message = styled.p`\n  color: red;\n  font-style: italic;\n`;\n\nexport default Signup;\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport axios from 'axios';\r\n////\r\nimport Swal from 'sweetalert2';\r\n////\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n  const { user, loading } = useAuth();\r\n  const history = useHistory();\r\n  const [userHistory, setUserHistory] = useState([]);\r\n  const [modificationHistory, setModificationHistory] = useState([]);\r\n  const [telecomModificationHistory, setTelecomModificationHistory] = useState([]);\r\n  const [telephoneLineModificationHistory, setTelephoneLineModificationHistory] = useState([]);\r\n\r\n  const handleNavigation = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  const fetchUserHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/admin/user-history', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Fetched User History:', data);\r\n        setUserHistory(data);\r\n      } else {\r\n        console.error('Failed to fetch user history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/it-equipments/admin/it-equipment-modifications', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const filteredData = data.filter(mod => mod.field !== 'createdAt' && mod.field !== 'updatedAt');\r\n        setModificationHistory(filteredData);\r\n      } else {\r\n        console.error('Failed to fetch modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching modification history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTelecomModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telecom-packs/admin/telecom-pack-modifications', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Fetched Telecom Modifications:', data);\r\n        setTelecomModificationHistory(data);\r\n      } else {\r\n        console.error('Failed to fetch telecom modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching telecom modification history:', error);\r\n    }\r\n  };\r\n\r\n// Fetch Telephone Line modification history\r\nconst fetchTelephoneLineModificationHistory = async () => {\r\n  try {\r\n    console.log('Fetching Telephone Line modification history...'); // Debugging statement\r\n    const response = await fetch('http://localhost:5000/api/telephone-lines/admin/telephone-line-modifications', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('Fetched Telephone Line Modifications:', data); // Debugging statement\r\n      if (data.length === 0) {\r\n        console.log('No modification records found'); // Debugging statement\r\n      } else {\r\n        data.forEach(mod => {\r\n          console.log('Modification Record:', JSON.stringify(mod, null, 2)); // Debugging statement for each record\r\n        });\r\n      }\r\n      setTelephoneLineModificationHistory(data);\r\n    } else {\r\n      console.error('Failed to fetch telephone line modification history, status:', response.status); // Debugging statement\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching telephone line modification history:', error); // Debugging statement\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        history.push('/login');\r\n      }\r\n    }\r\n  }, [loading, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchUserHistory();\r\n      fetchModificationHistory();\r\n      fetchTelecomModificationHistory();\r\n      fetchTelephoneLineModificationHistory();\r\n    }\r\n  }, [user]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n  const handleResetModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/it-equipments/admin/it-equipment-modifications', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setModificationHistory([]); // Clear the modification history in the state\r\n        console.log('Modification history reset successfully');\r\n      } else {\r\n        console.error('Failed to reset modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting modification history:', error);\r\n    }\r\n  };\r\n\r\n  const handleResetTelecomModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telecom-packs/admin/telecom-pack-modifications', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        setTelecomModificationHistory([]);\r\n        console.log('Telecom Pack modification history reset successfully');\r\n      } else {\r\n        console.error('Failed to reset Telecom Pack modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting Telecom Pack modification history:', error);\r\n    }\r\n  };\r\n\r\n  const handleResetTelephoneLineModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telephone-lines/admin/telephone-line-modifications', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        setTelephoneLineModificationHistory([]);\r\n        console.log('Telephone Line modification history reset successfully');\r\n      } else {\r\n        console.error('Failed to reset Telephone Line modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting Telephone Line modification history:', error);\r\n    }\r\n  };\r\n\r\n  const handleDropTable = async (table) => {\r\n    const result = await Swal.fire({\r\n      title: `Êtes-vous sûr de vouloir supprimer la table ${table}?`,\r\n      text: \"Cette action ne peut pas être annulée.\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Oui, supprimez-la !'\r\n    });\r\n\r\n    if (result.isConfirmed) {\r\n      try {\r\n        let requestUrl = '';\r\n        if (table === 'it-equipments') {\r\n          requestUrl = 'http://localhost:5000/api/it-equipments/admin/drop-it-equipments-table';\r\n        } else if (table === 'telecom-pack') {\r\n          requestUrl = 'http://localhost:5000/api/telecom-packs/admin/drop-telecom-packs-table';\r\n        } else if (table === 'telephone-lines') {\r\n          requestUrl = 'http://localhost:5000/api/telephone-lines/admin/drop-telephone-lines-table';\r\n        }\r\n\r\n        console.log(`Request URL: ${requestUrl}`);\r\n\r\n        const response = await axios.delete(requestUrl, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        console.log(\"Response:\", response);\r\n\r\n        if (response.status === 204) {\r\n          Swal.fire(\r\n            'Supprimée !',\r\n            `La table ${table} a été supprimée.`,\r\n            'success'\r\n          );\r\n        } else {\r\n          console.error(`Échec de la suppression de la table ${table} : ${response.statusText}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Erreur lors de la suppression de la table ${table} :`, error.message);\r\n        Swal.fire(\r\n          'Error!',\r\n          `Erreur lors de la suppression de la table ${table} : ${error.message}`,\r\n          'error'\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"admin-dashboard-content\">\r\n        <h1 className=\"admin-dashboard-title\">Admin Dashboard</h1>\r\n        <div className=\"admin-user-history-section\">\r\n          <h2>Historique de connexion utilisateur</h2>\r\n          {userHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Email</th>\r\n                    <th>Nom et Prénom</th>\r\n                    <th>Dernière connexion</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {userHistory.map((user, index) => (\r\n                    <tr key={index}>\r\n                      <td>{user.email}</td>\r\n                      <td>{user.fullName}</td>\r\n                      <td>{formatDate(user.lastLogin)}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de connexion utilisateur disponible.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"admin-modification-history-section\">\r\n          <h2>Historique des modifications de Matériel informatique</h2>\r\n          <button onClick={handleResetModificationHistory} className=\"reset-button\">Réinitialiser</button>\r\n          {user.role === 'admin' && (\r\n            <button onClick={() => handleDropTable('it-equipments')} className=\"drop-button\">\r\n              Supprimer la table\r\n            </button>\r\n          )}\r\n          {modificationHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Utilisateur</th>\r\n                    <th>Email</th>\r\n                    <th>Temps de Modification</th>\r\n                    <th>Champ</th>\r\n                    <th>Ancienne Valeur</th>\r\n                    <th>Nouvelle valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {modificationHistory.map((modification, index) => (\r\n                    <tr key={index}>\r\n                      <td>{modification.User.fullName}</td>\r\n                      <td>{modification.User.email}</td>\r\n                      <td>{formatDate(modification.modifiedAt)}</td>\r\n                      <td>{modification.field}</td>\r\n                      <td>{modification.oldValue}</td>\r\n                      <td>{modification.newValue}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de modification de Matériel Informatique disponible.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"admin-modification-history-section\">\r\n          <h2>Historique des modifications du Parc Télécom</h2>\r\n          <button onClick={handleResetTelecomModificationHistory} className=\"reset-button\">Réinitialiser</button>\r\n          {user.role === 'admin' && (\r\n            <button onClick={() => handleDropTable('telecom-pack')} className=\"drop-button\">\r\n              Supprimer la table\r\n            </button>\r\n          )}\r\n          {telecomModificationHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Utilisateur</th>\r\n                    <th>Email</th>\r\n                    <th>Temps de Modification</th>\r\n                    <th>Champ</th>\r\n                    <th>Ancienne Valeur</th>\r\n                    <th>Nouvelle valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {telecomModificationHistory.map((modification, index) => (\r\n                    <tr key={index}>\r\n                      <td>{modification.User.fullName}</td>\r\n                      <td>{modification.User.email}</td>\r\n                      <td>{formatDate(modification.modifiedAt)}</td>\r\n                      <td>{modification.field}</td>\r\n                      <td>{modification.oldValue ? modification.oldValue : 'N/A'}</td>\r\n                      <td>{modification.newValue ? modification.newValue : 'N/A'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de modification du Parc Télécom disponible.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"admin-modification-history-section\">\r\n          <h2>Historique des modifications des Lignes Téléphoniques</h2>\r\n          <button onClick={handleResetTelephoneLineModificationHistory} className=\"reset-button\">Réinitialiser</button>\r\n          {user.role === 'admin' && (\r\n            <button onClick={() => handleDropTable('telephone-lines')} className=\"drop-button\">\r\n              Supprimer la table\r\n            </button>\r\n          )}\r\n          {telephoneLineModificationHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Utilisateur</th>\r\n                    <th>Email</th>\r\n                    <th>Temps de Modification</th>\r\n                    <th>Champ</th>\r\n                    <th>Ancienne Valeur</th>\r\n                    <th>Nouvelle valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {telephoneLineModificationHistory.map((modification, index) => (\r\n                    <tr key={index}>\r\n                      <td>{modification.User.fullName}</td>\r\n                      <td>{modification.User.email}</td>\r\n                      <td>{formatDate(modification.modifiedAt)}</td>\r\n                      <td>{modification.field}</td>\r\n                      <td>{modification.oldValue ? modification.oldValue : 'N/A'}</td>\r\n                      <td>{modification.newValue ? modification.newValue : 'N/A'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de modification de Ligne Téléphonique disponible.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport './Dashboard.css';\r\n\r\nconst ConsultantDashboard = () => {\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const handleNavigation = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  if (!user) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"sidebar-item\" onClick={() => handleNavigation('/dashboard')}>\r\n          Dashboard\r\n        </div>\r\n        <div className=\"sidebar-item\" onClick={() => handleNavigation('/telecom-packs')}>\r\n          Telecom Packs\r\n        </div>\r\n        <div className=\"sidebar-item\" onClick={() => handleNavigation('/telephone-lines')}>\r\n          Telephone Lines\r\n        </div>\r\n        <div className=\"sidebar-item\" onClick={() => handleNavigation('/it-equipments')}>\r\n          IT Equipments\r\n        </div>\r\n      </aside>\r\n      <div className=\"dashboard-content\">\r\n        <h1>Consultant Dashboard</h1>\r\n        <p>Welcome, {user.fullName}!</p>\r\n        <div className=\"profile-section\">\r\n          <h2>Your Profile</h2>\r\n          <p><strong>Email:</strong> {user.email}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConsultantDashboard;\r\n","export default __webpack_public_path__ + \"static/media/logo.f09c1534.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth'; // Correct import\r\nimport logo from '../../assets/logo.png'; // Adjust the path as necessary\r\nimport './Navbar.css'; // Import the CSS file\r\n\r\nconst Navbar = () => {\r\n  const { user } = useAuth();\r\n  const isAuthenticated = !!user; // Determine if the user is authenticated\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <img src={logo} alt=\"App Logo\" className=\"logo\" />\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n        </li>\r\n        {isAuthenticated ? (\r\n          <>\r\n            <li>\r\n              <Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\r\n            </li>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <li>\r\n              <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\r\n            </li>\r\n          </>\r\n        )}\r\n      </ul>\r\n      {isAuthenticated && (\r\n        <div className=\"user-info\">\r\n          <span className=\"user-icon\">👤</span>\r\n          {user.fullName}\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const { user, logout } = useAuth();\r\n\r\n  const toggleSidebar = () => {\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div className={`sidebar-container ${isActive ? 'active' : 'minimized'}`}>\r\n      <button className=\"sidebar-toggle\" onClick={toggleSidebar}>\r\n        ☰\r\n      </button>\r\n      <div className={`sidebar ${isActive ? 'active' : 'minimized'}`}>\r\n        <nav>\r\n          <ul>\r\n            {user && user.role === 'admin' && (\r\n              <li>\r\n                <NavLink to=\"/dashboard\" activeClassName=\"active\">\r\n                  <span className=\"icon\">🏠</span>\r\n                  <span className=\"text\">Dashboard</span>\r\n                </NavLink>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <NavLink to=\"/telecom-packs\" activeClassName=\"active\">\r\n                <span className=\"icon\">📦</span>\r\n                <span className=\"text\">Parc Telecom</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/telephone-lines\" activeClassName=\"active\">\r\n                <span className=\"icon\">📞</span>\r\n                <span className=\"text\">Ligne Téléphonique</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/it-equipment\" activeClassName=\"active\">\r\n                <span className=\"icon\">💻</span>\r\n                <span className=\"text\">Matériel informatique</span>\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/edit-excel\" activeClassName=\"active\">\r\n                <span className=\"icon\">📂</span>\r\n                <span className=\"text\">Importer Excel</span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"logout-container\">\r\n          <button onClick={handleLogout} className=\"logout-button\">\r\n            <span className=\"icon\">🔒</span>\r\n            <span className=\"text\">Logout</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\nimport { FaFileExcel } from 'react-icons/fa';\r\nimport io from 'socket.io-client';\r\nimport './ExcelEditor.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ExcelEditor = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [table, setTable] = useState('');\r\n  const [schema, setSchema] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [matchingColumns, setMatchingColumns] = useState(0);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (table) {\r\n      const fetchSchema = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/schema/${table}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          setSchema(response.data);\r\n        } catch (error) {\r\n          setMessage('Erreur lors de la récupération du schéma');\r\n          console.error('Error fetching schema:', error);\r\n        }\r\n      };\r\n      fetchSchema();\r\n    }\r\n  }, [table]);\r\n\r\n  useEffect(() => {\r\n    socket.on('uploadProgress', ({ uploadId, progress }) => {\r\n      setUploadProgress(progress);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('uploadProgress');\r\n    };\r\n  }, []);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !table) {\r\n        alert('Veuillez sélectionner un tableau et un fichier.');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      console.log('File uploaded successfully:', response.data);\r\n      setMessage('Fichier téléchargé avec succès');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Erreur lors du téléchargement du fichier: ' + error.message);\r\n      setMessage('Erreur lors du téléchargement du fichier: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const filterColumns = (data) => {\r\n    if (schema.length === 0) return data;\r\n    return data.map(record => {\r\n      return Object.fromEntries(\r\n        Object.entries(record).filter(([key]) => schema.includes(key))\r\n      );\r\n    });\r\n  };\r\n\r\n  const countMatchingColumns = (data) => {\r\n    if (schema.length === 0 || data.length === 0) return 0;\r\n    return schema.filter(column => Object.keys(data[0]).includes(column)).length;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const workbook = XLSX.read(e.target.result, { type: 'binary' });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const data = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n        const filteredData = filterColumns(data);\r\n        setMatchingColumns(countMatchingColumns(filteredData));\r\n      };\r\n      reader.readAsBinaryString(selectedFile);\r\n    }\r\n  }, [selectedFile, schema]);\r\n\r\n  return (\r\n    <div className=\"excel-editor\">\r\n      <h2>Téléchargement de fichier Excel</h2>\r\n      <div className=\"form-group\">\r\n        <label>Sélectionnez le fichier Excel</label>\r\n        <div className=\"file-upload\">\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <div className=\"file-upload-text\">\r\n            {selectedFile ? (\r\n              <>\r\n                <FaFileExcel className=\"file-icon\" />\r\n                {selectedFile.name}\r\n              </>\r\n            ) : (\r\n              <>Déposez vos fichiers ici ou <span className=\"browse-files\">Parcourir les fichiers</span></>\r\n            )}\r\n          </div>\r\n          <div className=\"file-type-text\">Types de fichiers acceptés : .xlsx</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Sélectionnez un tableau</label>\r\n        <select value={table} onChange={(e) => setTable(e.target.value)}>\r\n          <option value=\"\">Sélectionnez un tableau</option>\r\n          <option value=\"it_equipments\">Équipements informatiques</option>\r\n          <option value=\"telecom_pack\">Parc Télécom</option>\r\n          <option value=\"telephone_lines\">Lignes téléphoniques</option>\r\n        </select>\r\n      </div>\r\n      <button onClick={handleUpload}>Télécharger</button>\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress\">\r\n          <div className=\"bar\" style={{ width: `${uploadProgress}%` }}>\r\n            <p className=\"counter\">{uploadProgress}%</p>\r\n          </div>\r\n        </div>\r\n        {uploadProgress === 100 && (\r\n          <div className=\"success-container\">\r\n            <p className=\"success\">Téléchargement terminé!</p>\r\n            <p className=\"success-message\">Fichier téléchargé avec succès</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {message && <p>{message}</p>}\r\n      {schema.length > 0 && (\r\n        <div className=\"schema-container\">\r\n          <h3>Schéma du tableau</h3>\r\n          <p>Nombre de colonnes correspondantes : {matchingColumns}</p>\r\n          <div className=\"schema-table\">\r\n            {schema.map((column) => (\r\n              <div key={column} className=\"schema-column\">\r\n                {column}\r\n                <div className=\"placeholder\">\r\n                  {column === 'numero_de_gsm' && 'Ex: 212XXXXXXXXX'}\r\n                  {column.includes('date') && 'Format: yyyy-mm-dd ou mm/dd/yyyy'}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport { useAuth } from '../../hooks/useAuth'; // Ensure you have this hook to get user info\r\nimport './ITEquipmentLanding.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ITEquipmentLanding = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth(); // Get the user info including the role\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const handleModifyClick = () => {\r\n    if (user && user.role === 'admin') {\r\n      history.push('/it-equipment-manager'); // Change this path to the modify page path\r\n    } else {\r\n      openModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <div className=\"card view-card\" onClick={() => history.push('/it-equipment-view')}>\r\n        <div className=\"card-content\">\r\n          <h3>Afficher IT Equipments</h3>\r\n          <p>⦿Voir tableau <br />⦿Exporter Excel</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"card modify-card\" onClick={handleModifyClick}>\r\n        <div className=\"card-content\">\r\n          <h3>Modifier IT Equipments</h3>\r\n          <p>⦿Plus d'infos</p>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Access Denied\"\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Access Denied</h2>\r\n        <p>You do not have permission to modify this page.</p>\r\n        <button onClick={closeModal}>Close</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentLanding;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters, usePagination } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa';\r\n\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [uniqueValues, setUniqueValues] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\r\n    const updatedData = { ...data };\r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          updatedData[key] = null;\r\n        } else if (key === 'prix_achat') {\r\n          updatedData[key] = defaultNumber;\r\n        } else {\r\n          updatedData[key] = defaultValue;\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };\r\n\r\n  const applyFilters = (data, filters) => {\r\n    return data.filter(item => {\r\n      return Object.keys(filters).every(key => {\r\n        if (!filters[key].length) return true;\r\n        return filters[key].includes(item[key]);\r\n      });\r\n    });\r\n  };\r\n\r\n  const fetchITEquipments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.data && Array.isArray(response.data.equipments)) {\r\n        const data = response.data.equipments.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n        setOriginalData(data);  // Save original data for filtering\r\n\r\n        const headers = Object.keys(data[0] || {});\r\n        const uniqueValues = {};\r\n\r\n        headers.forEach(header => {\r\n          uniqueValues[header] = [...new Set(data.map(item => item[header]))].map(value => ({ value, label: value }));\r\n        });\r\n\r\n        const cols = [\r\n          {\r\n            Header: '#',\r\n            accessor: (row, i) => i + 1,\r\n            disableFilters: true,\r\n            disableSortBy: true,\r\n            width: 50,\r\n          },\r\n          ...headers.map((header) => ({\r\n            Header: header.replace(/_/g, ' '),\r\n            accessor: header,\r\n            Filter: props => (\r\n              <SelectColumnFilter\r\n                {...props}\r\n                uniqueValues={uniqueValues[header]}\r\n                globalSetFilters={setFilters}\r\n                originalData={data}\r\n                setITEquipments={setITEquipments}\r\n                applyFilters={applyFilters}\r\n              />\r\n            ),\r\n          })),\r\n        ];\r\n\r\n        setColumns(cols);\r\n        setUniqueValues(uniqueValues);\r\n        setITEquipments(applyFilters(data, filters));  // Apply filters to the data\r\n      } else {\r\n        toast.error('Error fetching IT equipments');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error fetching IT equipments: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (originalData.length) {\r\n      setITEquipments(applyFilters(originalData, filters));\r\n    }\r\n  }, [filters, originalData]);\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    setFilters(prev => {\r\n      const updatedFilters = { ...prev };\r\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\r\n      if (updatedFilters[filterKey].length === 0) {\r\n        delete updatedFilters[filterKey];\r\n      }\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      prepareRow,\r\n      page,\r\n      canPreviousPage,\r\n      canNextPage,\r\n      pageOptions,\r\n      state: { pageIndex, pageSize },\r\n      gotoPage,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n        initialState: { pageIndex: 0 },\r\n      },\r\n      useFilters,\r\n      useSortBy,\r\n      usePagination\r\n    );\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"pagination-controls\">\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>{'Précédent'}</button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>{'Suivant'}</button>\r\n          <button onClick={() => gotoPage(pageOptions.length - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 25, 50, 100].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <ToastContainer />\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <div className=\"itequipment-view-selected-filters-container\">\r\n        <h3>Filtres Sélectionnés:</h3>\r\n        {Object.keys(filters).map((filterKey) => (\r\n          filters[filterKey].map((filterValue, index) => (\r\n            <span key={`${filterKey}-${index}`} className=\"itequipment-view-filter-chip\">\r\n              {`${filterKey}: ${filterValue}`} <button onClick={() => handleDelete(filterKey, filterValue)}>x</button>\r\n            </span>\r\n          ))\r\n        ))}\r\n      </div>\r\n      <div className=\"itequipment-view-filters-container\">\r\n        {columns.map(column => (\r\n          column.canFilter ? (\r\n            <div key={column.id} className=\"itequipment-view-filter\">\r\n              <label>{column.render('Header')}</label>\r\n              {column.render('Filter')}\r\n            </div>\r\n          ) : null\r\n        ))}\r\n      </div>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columns}\r\n          data={itEquipments}  // Use filtered data\r\n        />\r\n      )}\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(itEquipments)}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({\r\n  column: { filterValue = [], setFilter, id },\r\n  uniqueValues,\r\n  globalSetFilters,\r\n  originalData,  // Receive originalData as a prop\r\n  setITEquipments,\r\n  applyFilters,\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState(() =>\r\n    filterValue.map(val => ({ value: val, label: val }))\r\n  );\r\n\r\n  const handleChange = (selected) => {\r\n    const values = selected ? selected.map(option => option.value) : [];\r\n    setSelectedOptions(selected);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n    globalSetFilters(prev => {\r\n      const updatedFilters = { ...prev, [id]: values };\r\n      setITEquipments(applyFilters(originalData, updatedFilters));  // Apply filters to the data\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-filter-container\">\r\n      <Select\r\n        value={selectedOptions}\r\n        onChange={handleChange}\r\n        options={uniqueValues}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './ITEquipment.css';\r\n\r\n// Helper function to set default values\r\nconst setDefaultValues = (data, defaultValue = '------') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          return [key, null];  // Set date fields to null if empty\r\n        } else {\r\n          return [key, defaultValue];  // Set other fields to default value\r\n        }\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString || dateString === '------') return '';\r\n  const date = new Date(dateString);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst ITEquipment = () => {\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [options, setOptions] = useState({});\r\n  const [newEquipment, setNewEquipment] = useState({\r\n    categorie: '',\r\n    marque: '',\r\n    model: '',\r\n    code_materiel: '',\r\n    serie: '',\r\n    code_localisation: '',\r\n    code_entite: '',\r\n    date_installation: '',\r\n    fin_garantie: '',\r\n    statut: '',\r\n    type_acquisition: '',\r\n    date_achat: '',\r\n    date_livraison: '',\r\n    fournisseur: '',\r\n    numero_facture: '',\r\n    prix_achat: '',\r\n    numero_appel_offre: '',\r\n    numero_livraison: '',\r\n    cout_maintenance: '',\r\n    emploi_principal: '',\r\n    niveau_criticite: '',\r\n    sla: '',\r\n    date_sortie: '',\r\n    commentaire: '',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentEquipment, setCurrentEquipment] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const [filters, setFilters] = useState({});\r\n  const [sortBy, setSortBy] = useState([]);\r\n  const [allITEquipments, setAllITEquipments] = useState([]);\r\n  const [selectedFilters, setSelectedFilters] = useState({});\r\n\r\n  const fetchITEquipments = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log('Response from server:', response.data);\r\n      setITEquipments(response.data.equipments);\r\n      setAllITEquipments(response.data.equipments);\r\n      setOptions(response.data.uniqueValues);\r\n    } catch (error) {\r\n      console.error('Error fetching IT Equipments:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  const handleAddEquipment = async () => {\r\n    if (newEquipment.statut === 'REFORME' && !newEquipment.date_sortie) {\r\n      alert('Le champ \"date sortie\" doit être rempli, si le statut est \"REFORME\".');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedEquipment = setDefaultValues(newEquipment);\r\n      console.log('Adding equipment:', formattedEquipment);\r\n      const response = await axios.post('http://localhost:5000/api/it-equipments', formattedEquipment, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      console.log('Response from server:', response.data);\r\n\r\n      fetchITEquipments();\r\n      setNewEquipment({\r\n        categorie: '',\r\n        marque: '',\r\n        model: '',\r\n        code_materiel: '',\r\n        serie: '',\r\n        code_localisation: '',\r\n        code_entite: '',\r\n        date_installation: '',\r\n        fin_garantie: '',\r\n        statut: '',\r\n        type_acquisition: '',\r\n        date_achat: '',\r\n        date_livraison: '',\r\n        fournisseur: '',\r\n        numero_facture: '',\r\n        prix_achat: '',\r\n        numero_appel_offre: '',\r\n        numero_livraison: '',\r\n        cout_maintenance: '',\r\n        emploi_principal: '',\r\n        niveau_criticite: '',\r\n        sla: '',\r\n        date_sortie: '',\r\n        commentaire: '',\r\n      });\r\n      console.log('Equipment added successfully');\r\n    } catch (error) {\r\n      console.error('Error adding IT Equipment:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteEquipment = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      console.log('Token:', token);\r\n\r\n      await axios.delete(`http://localhost:5000/api/it-equipments/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setITEquipments((prevEquipments) => prevEquipments.filter(equipment => equipment.id !== id));\r\n      console.log('Equipment deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting IT Equipment:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyEquipment = (equipment) => {\r\n    setIsEditing(true);\r\n    setCurrentEquipment({\r\n      ...equipment,\r\n      date_installation: formatDate(equipment.date_installation),\r\n      fin_garantie: formatDate(equipment.fin_garantie),\r\n      date_achat: formatDate(equipment.date_achat),\r\n      date_livraison: formatDate(equipment.date_livraison),\r\n      date_sortie: formatDate(equipment.date_sortie),\r\n    });\r\n  };\r\n\r\n  const handleUpdateEquipment = async () => {\r\n    if (currentEquipment.statut === 'REFORME' && !currentEquipment.date_sortie) {\r\n      alert('The \"date sortie\" field must be filled if the statut is \"reforme\".');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        return;\r\n      }\r\n\r\n      console.log('Token:', token);\r\n\r\n      const filteredEquipment = setDefaultValues(currentEquipment);\r\n      console.log('Updating equipment:', filteredEquipment);\r\n      const response = await axios.put(`http://localhost:5000/api/it-equipments/${currentEquipment.id}`, filteredEquipment, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      console.log('Response from server:', response.data);\r\n      fetchITEquipments();\r\n      setIsEditing(false);\r\n      setCurrentEquipment(null);\r\n      console.log('Equipment updated successfully');\r\n    } catch (error) {\r\n      console.error('Error updating IT Equipment:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentEquipment(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewEquipment(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (id, value) => {\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      [id]: value,\r\n    }));\r\n    setSelectedFilters(prevSelected => ({\r\n      ...prevSelected,\r\n      [id]: value.map(val => val.label),\r\n    }));\r\n  };\r\n\r\n  const filteredAndSortedData = React.useMemo(() => {\r\n    let filteredData = itEquipments;\r\n\r\n    Object.keys(filters).forEach(id => {\r\n      if (filters[id] && filters[id].length > 0) {\r\n        filteredData = filteredData.filter(row => {\r\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\r\n          const filterValue = Array.isArray(filters[id]) ? filters[id][0].value : filters[id].value;\r\n\r\n          if (filterValue != null) {\r\n            return rowValue.includes(filterValue.toString().toLowerCase());\r\n          }\r\n          return true;\r\n        });\r\n      }\r\n    });\r\n\r\n    if (sortBy.length) {\r\n      const sortByField = sortBy[0];\r\n      filteredData = filteredData.sort((a, b) => {\r\n        const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\r\n        const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\r\n        if (aValue < bValue) {\r\n          return sortByField.desc ? 1 : -1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return sortByField.desc ? -1 : 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filteredData;\r\n  }, [itEquipments, filters, sortBy, currentPage, rowsPerPage]);\r\n\r\n  const currentRows = React.useMemo(() => {\r\n    const indexOfLastRow = currentPage * rowsPerPage;\r\n    const indexOfFirstRow = indexOfLastRow - rowsPerPage;\r\n    return filteredAndSortedData.slice(indexOfFirstRow, indexOfLastRow);\r\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\r\n\r\n  const data = React.useMemo(() => currentRows.map((equipment, index) => ({\r\n    rowNumber: (currentPage - 1) * rowsPerPage + index + 1,\r\n    actions: (\r\n      <div>\r\n        <button className=\"modify-button\" onClick={() => handleModifyEquipment(equipment)}>Modify</button>\r\n        <button className=\"delete-button\" onClick={() => handleDeleteEquipment(equipment.id)}>Delete</button>\r\n      </div>\r\n    ),\r\n    ...equipment,\r\n  })), [currentRows, currentPage, rowsPerPage]);\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n    },\r\n    ...Object.keys(newEquipment).map((key) => ({\r\n      Header: key.replace(/_/g, ' '),\r\n      accessor: key,\r\n      Filter: ({ column: { filterValue, setFilter, id } }) => (\r\n        <Select\r\n          value={filterValue || ''}\r\n          onChange={(value) => handleFilterChange(id, value)}\r\n          options={options[id] ? options[id].map(option => ({ label: option.label, value: option.value })) : []}\r\n          isMulti\r\n          placeholder={`Filter by ${key.replace(/_/g, ' ')}`}\r\n          className=\"filter-select\"\r\n        />\r\n      ),\r\n    })),\r\n  ], [newEquipment, currentPage, rowsPerPage, options, selectedFilters]);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleDeleteFilter = (filterKey, value) => {\r\n    setFilters(prev => {\r\n      const updatedFilters = { ...prev };\r\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val.label !== value);\r\n      if (updatedFilters[filterKey].length === 0) {\r\n        delete updatedFilters[filterKey];\r\n      }\r\n      return updatedFilters;\r\n    });\r\n\r\n    setSelectedFilters(prevSelected => {\r\n      const updatedSelected = { ...prevSelected };\r\n      updatedSelected[filterKey] = updatedSelected[filterKey].filter(val => val !== value);\r\n      if (updatedSelected[filterKey].length === 0) {\r\n        delete updatedSelected[filterKey];\r\n      }\r\n      return updatedSelected;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"it-equipment-manager\">\r\n      <button className=\"itequipment-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>IT Equipment Manager</h1>\r\n      <div className=\"add-equipment\">\r\n        <table className=\"form-table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <label>categorie</label>\r\n                <CustomDropdown\r\n                  name=\"categorie\"\r\n                  value={isEditing ? currentEquipment.categorie : newEquipment.categorie}\r\n                  options={options.categorie || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner la categorie\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>marque</label>\r\n                <CustomDropdown\r\n                  name=\"marque\"\r\n                  value={isEditing ? currentEquipment.marque : newEquipment.marque}\r\n                  options={options.marque || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner la marque\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>model</label>\r\n                <CustomDropdown\r\n                  name=\"model\"\r\n                  value={isEditing ? currentEquipment.model : newEquipment.model}\r\n                  options={options.model || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le model\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>code materiel</label>\r\n                <CustomDropdown\r\n                  name=\"code_materiel\"\r\n                  value={isEditing ? currentEquipment.code_materiel : newEquipment.code_materiel}\r\n                  options={options.code_materiel || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le code de materiel\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>serie</label>\r\n                <CustomDropdown\r\n                  name=\"serie\"\r\n                  value={isEditing ? currentEquipment.serie : newEquipment.serie}\r\n                  options={options.serie || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner la serie\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>code localisation</label>\r\n                <CustomDropdown\r\n                  name=\"code_localisation\"\r\n                  value={isEditing ? currentEquipment.code_localisation : newEquipment.code_localisation}\r\n                  options={options.code_localisation || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le code de localisation\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>code entite</label>\r\n                <CustomDropdown\r\n                  name=\"code_entite\"\r\n                  value={isEditing ? currentEquipment.code_entite : newEquipment.code_entite}\r\n                  options={options.code_entite || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le code d'entite\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>date installation</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date_installation\"\r\n                  value={isEditing ? formatDate(currentEquipment.date_installation) : newEquipment.date_installation}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>fin garantie</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"fin_garantie\"\r\n                  value={isEditing ? formatDate(currentEquipment.fin_garantie) : newEquipment.fin_garantie}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>statut</label>\r\n                <CustomDropdown\r\n                  name=\"statut\"\r\n                  value={isEditing ? currentEquipment.statut : newEquipment.statut}\r\n                  options={options.statut || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le status\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>type acquisition</label>\r\n                <CustomDropdown\r\n                  name=\"type_acquisition\"\r\n                  value={isEditing ? currentEquipment.type_acquisition : newEquipment.type_acquisition}\r\n                  options={options.type_acquisition || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le type d'acquisition\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>date achat</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date_achat\"\r\n                  value={isEditing ? formatDate(currentEquipment.date_achat) : newEquipment.date_achat}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>date livraison</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date_livraison\"\r\n                  value={isEditing ? formatDate(currentEquipment.date_livraison) : newEquipment.date_livraison}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>fournisseur</label>\r\n                <CustomDropdown\r\n                  name=\"fournisseur\"\r\n                  value={isEditing ? currentEquipment.fournisseur : newEquipment.fournisseur}\r\n                  options={options.fournisseur || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le fournisseur\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>numero facture</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"numero_facture\"\r\n                  value={isEditing ? currentEquipment.numero_facture : newEquipment.numero_facture}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer le numero de facture\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>prix achat</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"prix_achat\"\r\n                  value={isEditing ? currentEquipment.prix_achat : newEquipment.prix_achat}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer le prix achat\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>numero appel offre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"numero_appel_offre\"\r\n                  value={isEditing ? currentEquipment.numero_appel_offre : newEquipment.numero_appel_offre}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer le numero d'appel offre\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>numero livraison</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"numero_livraison\"\r\n                  value={isEditing ? currentEquipment.numero_livraison : newEquipment.numero_livraison}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer le numero de livraison\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>cout maintenance</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"cout_maintenance\"\r\n                  value={isEditing ? currentEquipment.cout_maintenance : newEquipment.cout_maintenance}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer le cout de maintenance\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>emploi principal</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"emploi_principal\"\r\n                  value={isEditing ? currentEquipment.emploi_principal : newEquipment.emploi_principal}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer l'emploi principale\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label>niveau criticite</label>\r\n                <CustomDropdown\r\n                  name=\"niveau_criticite\"\r\n                  value={isEditing ? currentEquipment.niveau_criticite : newEquipment.niveau_criticite}\r\n                  options={options.niveau_criticite || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le niveau de criticité\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>sla</label>\r\n                <CustomDropdown\r\n                  name=\"sla\"\r\n                  value={isEditing ? currentEquipment.sla : newEquipment.sla}\r\n                  options={options.sla || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Entrer/Selectionner le SLA\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>date sortie</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date_sortie\"\r\n                  value={isEditing ? formatDate(currentEquipment.date_sortie) : newEquipment.date_sortie}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"YYYY-MM-DD\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label>commentaire</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"commentaire\"\r\n                  value={isEditing ? currentEquipment.commentaire : newEquipment.commentaire}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer un commentaire\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {isEditing ? (\r\n          <button onClick={handleUpdateEquipment}>Update Equipment</button>\r\n        ) : (\r\n          <button onClick={handleAddEquipment}>Add Equipment</button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"itequipment-view-selected-filters-container\">\r\n        <h3>Filtres Sélectionnés:</h3>\r\n        {Object.keys(selectedFilters).map((filterKey) => (\r\n          selectedFilters[filterKey].map((filterValue, index) => (\r\n            <span key={`${filterKey}-${index}`} className=\"itequipment-view-filter-chip\">\r\n              {`${filterKey}: ${filterValue}`} <button onClick={() => handleDeleteFilter(filterKey, filterValue)}>x</button>\r\n            </span>\r\n          ))\r\n        ))}\r\n      </div>\r\n      <div className=\"itequipment-view-table-container\">\r\n      <Table columns={columns} data={data} />\r\n    </div>\r\n    <div className=\"pagination-controls\">\r\n      <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n      <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n      <span>\r\n        Page {currentPage} of {Math.ceil(filteredAndSortedData.length / rowsPerPage)}\r\n      </span>\r\n      <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === Math.ceil(filteredAndSortedData.length / rowsPerPage)}>{'Suivant'}</button>\r\n      <button onClick={() => handlePageNumberClick(Math.ceil(filteredAndSortedData.length / rowsPerPage))} disabled={currentPage === Math.ceil(filteredAndSortedData.length / rowsPerPage)}>{'>>'}</button>\r\n      <select value={rowsPerPage} onChange={(e) => setRowsPerPage(Number(e.target.value))}>\r\n        <option value={10}>Show 10</option>\r\n        <option value={25}>Show 25</option>\r\n        <option value={50}>Show 50</option>\r\n        <option value={100}>Show 100</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n);\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table itequipment-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"itequipment-view-row-even\" : \"itequipment-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [inputValue, setInputValue] = useState(value);\r\n\r\n  const handleSelect = (option) => {\r\n    setInputValue(option.label);\r\n    onChange({ target: { name, value: option.value } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n    onChange({ target: { name, value: e.target.value } });\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const filteredOptions = options.filter(option =>\r\n    option.label.toLowerCase().includes(inputValue.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder={placeholder}\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {filteredOptions.length === 0 ? (\r\n            <div className=\"dropdown-option\">No options available</div>\r\n          ) : (\r\n            filteredOptions.map((option, index) => (\r\n              <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n                {option.label}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelecomPack.css';\r\n\r\nconst subfieldOptionsMap = {\r\n  'DATA': ['VPNLL', 'VPLS', 'VPNADSL', 'ADSLSECOURS'],\r\n  'VOIX': ['RTC', 'MARNIS'],\r\n  'MOBILE': ['GSM'],\r\n  'INTERNET': ['ADSL', '4G']\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString || dateString === '------') return '';\r\n  const date = new Date(dateString);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst formatTelecomPackData = (pack) => {\r\n  const formattedPack = setDefaultValues(pack);\r\n  return {\r\n    ...formattedPack,\r\n    dateAbonnement: formatDate(formattedPack.dateAbonnement),\r\n    dateReengagement: formatDate(formattedPack.dateReengagement),\r\n    dateEtat: formatDate(formattedPack.dateEtat),\r\n  };\r\n};\r\n\r\nconst setDefaultValues = (data, defaultValue = '') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst TelecomPack = () => {\r\n  const [telecomPacks, setTelecomPacks] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [options, setOptions] = useState({\r\n    entite: [],\r\n    operateur: [],\r\n    produit: ['DATA', 'VOIX', 'MOBILE', 'INTERNET'],\r\n    etatAbonnement: [],\r\n    produit2: [],\r\n    numero: [],\r\n    dateAbonnement: [],\r\n    dateReengagement: [],\r\n    dateEtat: [],\r\n    observation: [],\r\n    typePoste: [],\r\n    numeroDeSerie: [],\r\n    dateAffectation: []\r\n  });\r\n  const [filters, setFilters] = useState({});\r\n  const [newPack, setNewPack] = useState({\r\n    entite: '',\r\n    operateur: '',\r\n    produit: '',\r\n    produit2: '',\r\n    numero: '',\r\n    etatAbonnement: '',\r\n    dateAbonnement: '',\r\n    dateReengagement: '',\r\n    dateEtat: '',\r\n    observation: '',\r\n    typePoste: '',\r\n    numeroDeSerie: '',\r\n    dateAffectation: ''\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentPack, setCurrentPack] = useState(null);\r\n  const history = useHistory();\r\n  const [subfieldOptions, setSubfieldOptions] = useState([]);\r\n  const [subfield, setSubfield] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTelecomPacks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telecom-packs', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = response.data.map(formatTelecomPackData);\r\n        data.sort((a, b) => {\r\n          const entiteA = a.entite.match(/\\d+/);\r\n          const entiteB = b.entite.match(/\\d+/);\r\n          return entiteA - entiteB;\r\n        });\r\n        setOriginalData(data);\r\n        applyFilters(data, filters); // Apply filters on initial load\r\n      } catch (error) {\r\n        console.error('Error fetching Telecom Packs:', error.message);\r\n        alert('Failed to fetch telecom packs: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchTelecomPacks();\r\n    fetchDropdownOptions();\r\n  }, []);\r\n\r\n  const fetchDropdownOptions = async () => {\r\n    try {\r\n      const fields = ['entite', 'operateur', 'etatAbonnement', 'produit2', 'numero', 'dateAbonnement', 'dateReengagement', 'dateEtat', 'observation', 'typePoste', 'numeroDeSerie', 'dateAffectation'];\r\n      const fetchedOptions = {};\r\n      for (const field of fields) {\r\n        const response = await axios.get(`http://localhost:5000/api/telecom-packs/dropdown/${field}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '')));\r\n        fetchedOptions[field] = uniqueValues;\r\n      }\r\n\r\n      fetchedOptions.produit = ['DATA', 'VOIX', 'MOBILE', 'INTERNET'];\r\n\r\n      setOptions(fetchedOptions);\r\n    } catch (error) {\r\n      console.error('Error fetching dropdown options:', error.message);\r\n      alert('Failed to fetch dropdown options: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const applyFilters = (data, appliedFilters) => {\r\n    let filteredData = data;\r\n\r\n    Object.keys(appliedFilters).forEach(filterKey => {\r\n      if (appliedFilters[filterKey].length > 0) {\r\n        filteredData = filteredData.filter(item => appliedFilters[filterKey].includes(item[filterKey]));\r\n      }\r\n    });\r\n\r\n    setFilteredData(filteredData);\r\n    setTotalPages(Math.ceil(filteredData.length / rowsPerPage));\r\n    setCurrentPage(1); // Reset to the first page after applying filters\r\n  };\r\n\r\n  const handleFilterChange = (field, selectedOptions) => {\r\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    setFilters(prevFilters => {\r\n      const updatedFilters = {\r\n        ...prevFilters,\r\n        [field]: values\r\n      };\r\n      applyFilters(originalData, updatedFilters);\r\n      return updatedFilters;\r\n    });\r\n  };\r\n  const handleRemoveSelectedValue = (columnId, value) => {\r\n    const updatedValues = filters[columnId].filter(item => item !== value);\r\n    const updatedFilters = { ...filters, [columnId]: updatedValues };\r\n    setFilters(updatedFilters);\r\n    applyFilters(originalData, updatedFilters);\r\n  };\r\n  \r\n  const handleRemoveFilter = (field, value) => {\r\n    const updatedValues = filters[field].filter(item => item !== value);\r\n    const updatedFilters = { ...filters, [field]: updatedValues };\r\n    setFilters(updatedFilters);\r\n    applyFilters(originalData, updatedFilters);\r\n  };\r\n\r\n  const handleAddPack = async () => {\r\n    if (!newPack.entite) {\r\n      alert('The \"entite\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { produit, ...formattedPack } = setDefaultValues({ ...newPack });\r\n      const response = await axios.post('http://localhost:5000/api/telecom-packs', formattedPack, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedPack = response.data;\r\n      const updatedData = [...originalData, addedPack];\r\n      setOriginalData(updatedData);\r\n      applyFilters(updatedData, filters);\r\n      setNewPack({\r\n        entite: '',\r\n        operateur: '',\r\n        produit: '', // Keep this for frontend use\r\n        produit2: '',\r\n        numero: '',\r\n        etatAbonnement: '',\r\n        dateAbonnement: '',\r\n        dateReengagement: '',\r\n        dateEtat: '',\r\n        observation: '',\r\n        typePoste: '',\r\n        numeroDeSerie: '',\r\n        dateAffectation: ''\r\n      });\r\n      setSubfield('');\r\n      setSubfieldOptions([]);\r\n    } catch (error) {\r\n      console.error('Error adding Telecom Pack:', error.message);\r\n      alert('Failed to add telecom pack: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyPack = (pack) => {\r\n    setIsEditing(true);\r\n    setCurrentPack({\r\n      ...pack,\r\n      dateAbonnement: formatDate(pack.dateAbonnement),\r\n      dateReengagement: formatDate(pack.dateReengagement),\r\n      dateEtat: formatDate(pack.dateEtat),\r\n    });\r\n    const options = subfieldOptionsMap[pack.produit] || [];\r\n    setSubfieldOptions(options);\r\n    setSubfield(pack.produit2);\r\n  };\r\n\r\n  const handleUpdatePack = async () => {\r\n    try {\r\n      const { produit, ...formattedPack } = setDefaultValues({ ...currentPack }); // Exclude 'produit' from being sent\r\n      const response = await axios.put(`http://localhost:5000/api/telecom-packs/${currentPack.id}`, formattedPack, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedPack = response.data;\r\n      const updatedData = originalData.map(pack => pack.id === updatedPack.id ? updatedPack : pack);\r\n      setOriginalData(updatedData);\r\n      applyFilters(updatedData, filters);\r\n      setIsEditing(false);\r\n      setCurrentPack(null);\r\n      setSubfield('');\r\n      setSubfieldOptions([]);\r\n    } catch (error) {\r\n      console.error('Error updating Telecom Pack:', error.message);\r\n      alert('Failed to update telecom pack: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentPack(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewPack(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleProduitChange = (e) => {\r\n    const { value } = e.target;\r\n    const options = subfieldOptionsMap[value] || [];\r\n    setSubfieldOptions(options);\r\n    setSubfield(''); // Reset subfield when produit changes\r\n\r\n    if (isEditing) {\r\n      setCurrentPack(prevState => ({\r\n        ...prevState,\r\n        produit: value, // Keep produit here\r\n        produit2: '' // Reset produit2 when produit changes\r\n      }));\r\n    } else {\r\n      setNewPack(prevState => ({\r\n        ...prevState,\r\n        produit: value, // Keep produit here\r\n        produit2: '' // Reset produit2 when produit changes\r\n      }));\r\n    }\r\n  };\r\n\r\n\r\n  const handleSubfieldChange = (e) => {\r\n    const { value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentPack(prevState => ({\r\n        ...prevState,\r\n        produit2: value,\r\n      }));\r\n    } else {\r\n      setNewPack(prevState => ({\r\n        ...prevState,\r\n        produit2: value,\r\n      }));\r\n    }\r\n    setSubfield(value);\r\n  };\r\n\r\n  const handleDeletePack = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telecom-packs/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      const updatedData = originalData.filter(pack => pack.id !== id);\r\n      setOriginalData(updatedData);\r\n      applyFilters(updatedData, filters);\r\n    } catch (error) {\r\n      console.error('Error deleting Telecom Pack:', error.message);\r\n      alert('Failed to delete telecom pack: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      Cell: ({ row }) => (\r\n        <div>\r\n          <button className=\"modify-button\" onClick={() => handleModifyPack(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeletePack(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      Header: 'Entite',\r\n      accessor: 'entite',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.entite}\r\n          placeholder=\"Filtrer par Entite\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Operateur',\r\n      accessor: 'operateur',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.operateur}\r\n          placeholder=\"Filtrer par Operateur\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Sous-Produit',\r\n      accessor: 'produit2',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.produit2}\r\n          placeholder=\"Filtrer par Sous-Produit\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Numero',\r\n      accessor: 'numero',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.numero}\r\n          placeholder=\"Filtrer par Numero\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Etat d\\'Abonnement',\r\n      accessor: 'etatAbonnement',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.etatAbonnement}\r\n          placeholder=\"Filtrer par Etat d'Abonnement\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Date d\\'Abonnement',\r\n      accessor: 'dateAbonnement',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.dateAbonnement}\r\n          placeholder=\"Filtrer par Date d'Abonnement\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Date de Reengagement',\r\n      accessor: 'dateReengagement',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.dateReengagement}\r\n          placeholder=\"Filtrer par Date de Reengagement\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Date d\\'Etat',\r\n      accessor: 'dateEtat',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.dateEtat}\r\n          placeholder=\"Filtrer par Date d'Etat\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Observation',\r\n      accessor: 'observation',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.observation}\r\n          placeholder=\"Filtrer par Observation\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Type de Poste',\r\n      accessor: 'typePoste',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.typePoste}\r\n          placeholder=\"Filtrer par Type de Poste\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Numero de Serie',\r\n      accessor: 'numeroDeSerie',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.numeroDeSerie}\r\n          placeholder=\"Filtrer par Numero de Serie\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      Header: 'Date d\\'Affectation',\r\n      accessor: 'dateAffectation',\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options.dateAffectation}\r\n          placeholder=\"Filtrer par Date d'Affectation\"\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      )\r\n    }\r\n  ], [currentPage, rowsPerPage, options, filters]);\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredData.slice(startIndex, endIndex);\r\n  }, [filteredData, currentPage, rowsPerPage]);\r\n\r\n  return (\r\n    <div className=\"telecom-pack-manager\">\r\n      <button className=\"telecompack-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Telecom Pack Manager</h1>\r\n\r\n      <div className=\"add-pack\">\r\n        <table className=\"form-table telecom-pack-form-table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Entite</label>\r\n                <CustomDropdown\r\n                  name=\"entite\"\r\n                  value={isEditing ? currentPack.entite : newPack.entite}\r\n                  options={options.entite || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Selectionner Entite\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Operateur</label>\r\n                <CustomDropdown\r\n                  name=\"operateur\"\r\n                  value={isEditing ? currentPack.operateur : newPack.operateur}\r\n                  options={options.operateur || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Selectionner Operateur\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Produit</label>\r\n                <CustomDropdown\r\n                  name=\"produit\"\r\n                  value={isEditing ? currentPack.produit : newPack.produit}\r\n                  options={options.produit || []}\r\n                  onChange={handleProduitChange}\r\n                  placeholder=\"Selectionner Produit\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            {(isEditing ? currentPack.produit : newPack.produit) && subfieldOptions.length > 0 && (\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  <label className=\"telecom-pack-form-label\">Sous-Produit</label>\r\n                  <CustomDropdown\r\n                    name=\"produit2\"\r\n                    value={isEditing ? currentPack.produit2 : subfield}\r\n                    options={subfieldOptions}\r\n                    onChange={handleSubfieldChange}\r\n                    placeholder=\"Selectionner Produit2\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Numero de GSM</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"numero\"\r\n                  value={isEditing ? currentPack.numero : newPack.numero}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"eg: 212XXXXXXXXX\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Etat d'abonnement</label>\r\n                <CustomDropdown\r\n                  name=\"etatAbonnement\"\r\n                  value={isEditing ? currentPack.etatAbonnement : newPack.etatAbonnement}\r\n                  options={options.etatAbonnement || []}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Selectionner Etat Abonnement\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Date d'abonnement</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dateAbonnement\"\r\n                  value={isEditing ? currentPack.dateAbonnement : newPack.dateAbonnement}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer dateAbonnement\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Date de reengagement</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dateReengagement\"\r\n                  value={isEditing ? currentPack.dateReengagement : newPack.dateReengagement}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer dateReengagement\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Date d'etat</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dateEtat\"\r\n                  value={isEditing ? currentPack.dateEtat : newPack.dateEtat}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer date d'etat\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Observation</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"observation\"\r\n                  value={isEditing ? currentPack.observation : newPack.observation}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer une observation\"\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Type de Poste</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"typePoste\"\r\n                  value={isEditing ? currentPack.typePoste : newPack.typePoste}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer Type de Poste\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Numero de Serie</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"numeroDeSerie\"\r\n                  value={isEditing ? currentPack.numeroDeSerie : newPack.numeroDeSerie}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer Numero de Serie\"\r\n                />\r\n              </td>\r\n              <td>\r\n                <label className=\"telecom-pack-form-label\">Date d'Affectation</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dateAffectation\"\r\n                  value={isEditing ? currentPack.dateAffectation : newPack.dateAffectation}\r\n                  onChange={handleChange}\r\n                  className=\"input-field\"\r\n                  placeholder=\"Entrer Date d'Affectation\"\r\n                />\r\n              </td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n        <button className=\"add-pack\" onClick={isEditing ? handleUpdatePack : handleAddPack}>\r\n          {isEditing ? 'Update Pack' : 'Add Pack'}\r\n        </button>\r\n      </div>\r\n      <div className=\"selected-filters\">\r\n        <h3>Filtres Sélectionnés:</h3>\r\n        <div>\r\n          {Object.keys(filters).map((key) => (\r\n            filters[key].length > 0 && (\r\n              <div key={key}>\r\n                <strong>{key}:</strong> {filters[key].map((value) => (\r\n                  <span key={value} className=\"filter-badge\">\r\n                    {value} <button onClick={() => handleRemoveFilter(key, value)}>x</button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => paginate(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => paginate(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => paginate(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({ column: { filterValue, setFilter, id }, options = [], placeholder, handleFilterChange, handleRemoveSelectedValue }) => {\r\n  const filterOptions = options.map(option => ({ value: option, label: option }));\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    handleFilterChange(id, selectedOptions); // Call handleFilterChange to update filters\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        value={filterOptions.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={filterOptions}\r\n        isMulti\r\n        placeholder={placeholder || 'Filter...'}\r\n        className=\"filter-select\"\r\n        classNamePrefix=\"filter-select\"\r\n      />\r\n      <div className=\"selected-values\">\r\n        {filterValue && filterValue.map(value => (\r\n          <span key={value} className=\"filter-badge\">\r\n            {value} <button onClick={() => handleRemoveSelectedValue(id, value)}>x</button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table telecompack-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"telecompack-view-row-even\" : \"telecompack-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (option) => {\r\n    onChange({ target: { name, value: option } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPack;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport { useAuth } from '../../hooks/useAuth'; // Ensure you have this hook to get user info\r\nimport './TelecomPackLanding.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst TelecomPackLanding = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth(); // Get the user info including the role\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const handleModifyClick = () => {\r\n    if (user && user.role === 'admin') {\r\n      history.push('/telecom-pack-manager'); // Change this path to the modify page path\r\n    } else {\r\n      openModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"telecom-landing-container\">\r\n      <div className=\"telecom-card telecom-view-card\" onClick={() => history.push('/telecom-pack-view')}>\r\n        <div className=\"telecom-card-content\">\r\n          <h3>Afficher Parc Telecom</h3>\r\n          <p>⦿Voir tableau <br />⦿Exporter Excel</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"telecom-card telecom-modify-card\" onClick={handleModifyClick}>\r\n        <div className=\"telecom-card-content\">\r\n          <h3>Modifier Parc Telecom</h3>\r\n          <p>⦿Plus d'infos</p>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Access Denied\"\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Access Denied</h2>\r\n        <p>You do not have permission to modify this page.</p>\r\n        <button onClick={closeModal}>Close</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPackLanding;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters, usePagination } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\r\nimport './TelecomPackView.css';\r\n\r\nconst TelecomPackView = () => {\r\n  const [telecomPacks, setTelecomPacks] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [uniqueValues, setUniqueValues] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const history = useHistory();\r\n\r\n  const fetchTelecomPacks = async (appliedFilters = {}) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/telecom-packs', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        params: appliedFilters, // Send filters as query params\r\n      });\r\n\r\n      const data = response.data.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n      setTelecomPacks(data);\r\n      setOriginalData(data);\r\n\r\n      const headers = Object.keys(data[0] || {});\r\n      const uniqueValues = {};\r\n\r\n      headers.forEach(header => {\r\n        uniqueValues[header] = [...new Set(data.map(item => item[header]))].map(value => ({ value, label: value }));\r\n      });\r\n\r\n      const cols = [\r\n        {\r\n          Header: '#',\r\n          accessor: (row, i) => i + 1,\r\n          disableFilters: true,\r\n          disableSortBy: true,\r\n          width: 50,\r\n        },\r\n        ...headers.map((header) => ({\r\n          Header: header.replace(/_/g, ' '),\r\n          accessor: header,\r\n          Filter: props => <SelectColumnFilter {...props} originalData={data} uniqueValues={uniqueValues[header]} />,\r\n        })),\r\n      ];\r\n\r\n      setColumns(cols);\r\n      setUniqueValues(uniqueValues);\r\n    } catch (error) {\r\n      console.error('Error fetching Telecom Packs:', error);\r\n      alert('Error fetching Telecom Packs: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTelecomPacks(filters);\r\n  }, [filters]);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------') => {\r\n    return Object.fromEntries(\r\n      Object.entries(data).map(([key, value]) => {\r\n        if (value === '' || value === null) {\r\n          return [key, defaultValue];\r\n        }\r\n        return [key, value];\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    setFilters(prev => {\r\n      const updatedFilters = { ...prev };\r\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\r\n      if (updatedFilters[filterKey].length === 0) {\r\n        delete updatedFilters[filterKey];\r\n      }\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      prepareRow,\r\n      page,\r\n      canPreviousPage,\r\n      canNextPage,\r\n      pageOptions,\r\n      state: { pageIndex, pageSize },\r\n      gotoPage,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n        initialState: { pageIndex: 0 },\r\n      },\r\n      useFilters,\r\n      useSortBy,\r\n      usePagination\r\n    );\r\n\r\n    return (\r\n      <div className=\"telecompack-view-table-container\">\r\n        <table {...getTableProps()} className=\"telecompack-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'telecompack-view-row-even' : 'telecompack-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"pagination-controls\">\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>{'Précédent'}</button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>{'Suivant'}</button>\r\n          <button onClick={() => gotoPage(pageOptions.length - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 25, 50, 100].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"TelecomPacks\");\r\n    XLSX.writeFile(wb, \"TelecomPacks.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"telecompack-view-container\">\r\n      <button className=\"telecompack-view-back-button\" onClick={() => history.push('/telecom-packs')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"telecompack-view-title\">Afficher Parc Telecom</h1>\r\n      <div className=\"telecompack-view-selected-filters-container\">\r\n        {Object.keys(filters).map((filterKey) => (\r\n          filters[filterKey].map((filterValue, index) => (\r\n            <span key={`${filterKey}-${index}`} className=\"telecompack-view-filter-chip\">\r\n              {`${filterKey}: ${filterValue}`} <button onClick={() => handleDelete(filterKey, filterValue)}>x</button>\r\n            </span>\r\n          ))\r\n        ))}\r\n      </div>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columns}\r\n          data={originalData}\r\n        />\r\n      )}\r\n      <div className=\"telecompack-view-footer\">\r\n        <button\r\n          className=\"telecompack-view-export-button\"\r\n          onClick={() => exportToExcel(originalData)}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({\r\n  column: { filterValue = [], setFilter, id },\r\n  uniqueValues\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState(() => \r\n    filterValue.map(val => ({ value: val, label: val }))\r\n  );\r\n\r\n  const handleChange = (selected) => {\r\n    const values = selected ? selected.map(option => option.value) : [];\r\n    setSelectedOptions(selected);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    const updatedOptions = selectedOptions.filter(option => option.value !== value);\r\n    const values = updatedOptions.map(option => option.value);\r\n    setSelectedOptions(updatedOptions);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n  };\r\n\r\n  return (\r\n    <div className=\"telecompack-view-filter-container\">\r\n      <Select\r\n        value={selectedOptions}\r\n        onChange={handleChange}\r\n        options={uniqueValues}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"telecompack-view-filter-select\"\r\n      />\r\n      {selectedOptions.length > 0 && (\r\n        <div className=\"telecompack-view-selected-filters\">\r\n          {selectedOptions.map((option, index) => (\r\n            <span key={index} className=\"telecompack-view-filter-chip\">\r\n              {option.value} <button onClick={() => handleDelete(id, option.value)}>x</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPackView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelephoneLine.css';\r\n\r\nconst setDefaultValues = (data, defaultValue = '------') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst getCustomHeaderName = (header) => {\r\n  const customNames = {\r\n    numero_de_gsm: 'Numero de GSM',\r\n    full_name: 'Nom et Prénom',\r\n    code_entite: 'Code Entité',\r\n    direction: 'Direction',\r\n    fonction: 'Fonction',\r\n    operateur: 'Opérateur',\r\n    categorie: 'Catégorie',\r\n    poste_GSM: 'Poste GSM',\r\n  };\r\n  return customNames[header] || header.replace(/_/g, ' ');\r\n};\r\n\r\nconst TelephoneLine = () => {\r\n  const [telephoneLines, setTelephoneLines] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [options, setOptions] = useState({\r\n    code_entite: [],\r\n    direction: [],\r\n    fonction: [],\r\n    operateur: [],\r\n    categorie: [],\r\n    poste_GSM: [],\r\n  });\r\n  const [filters, setFilters] = useState({});\r\n  const [newLine, setNewLine] = useState({\r\n    numero_de_gsm: '',\r\n    full_name: '',\r\n    code_entite: '',\r\n    direction: '',\r\n    fonction: '',\r\n    operateur: '',\r\n    categorie: '',\r\n    poste_GSM: '',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10); // Define the page size\r\n  const totalPages = Math.ceil(filteredData.length / rowsPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  \r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTelephoneLines = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = response.data.map(line => setDefaultValues(line));\r\n        setOriginalData(data);\r\n        applyFilters(data, filters); // Apply filters on initial load\r\n      } catch (error) {\r\n        console.error('Error fetching Telephone Lines:', error.message);\r\n        alert('Failed to fetch telephone lines: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchTelephoneLines();\r\n    fetchDropdownOptions();\r\n  }, []);\r\n\r\n  const fetchDropdownOptions = async () => {\r\n    try {\r\n      const fields = ['code_entite', 'direction', 'fonction', 'operateur', 'categorie', 'poste_GSM', 'numero_de_gsm', 'full_name'];\r\n      const fetchedOptions = {};\r\n      for (const field of fields) {\r\n        const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '')));\r\n        fetchedOptions[field] = uniqueValues.map(value => ({ value, label: value }));\r\n      }\r\n      setOptions(fetchedOptions);\r\n    } catch (error) {\r\n      console.error('Error fetching dropdown options:', error.message);\r\n      alert('Failed to fetch dropdown options: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const applyFilters = (data, appliedFilters) => {\r\n    let filteredData = data;\r\n\r\n    Object.keys(appliedFilters).forEach(filterKey => {\r\n      if (appliedFilters[filterKey].length > 0) {\r\n        filteredData = filteredData.filter(item => appliedFilters[filterKey].includes(item[filterKey]));\r\n      }\r\n    });\r\n\r\n    setFilteredData(filteredData);\r\n    setCurrentPage(1); // Reset to the first page after applying filters\r\n  };\r\n\r\n  const handleFilterChange = (field, selectedOptions) => {\r\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    setFilters(prevFilters => {\r\n      const updatedFilters = {\r\n        ...prevFilters,\r\n        [field]: values\r\n      };\r\n      applyFilters(originalData, updatedFilters);\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFilter = (field, value) => {\r\n    const updatedValues = filters[field].filter(item => item !== value);\r\n    const updatedFilters = { ...filters, [field]: updatedValues };\r\n    setFilters(updatedFilters);\r\n    applyFilters(originalData, updatedFilters);\r\n  };\r\n\r\n  const handleAddLine = async () => {\r\n    if (!newLine.numero_de_gsm) {\r\n      alert('The \"numero_de_gsm\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedLine = setDefaultValues(newLine);\r\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedLine = response.data;\r\n      const updatedData = [...originalData, addedLine];\r\n      setOriginalData(updatedData);\r\n      applyFilters(updatedData, filters);\r\n      setNewLine({\r\n        numero_de_gsm: '',\r\n        full_name: '',\r\n        code_entite: '',\r\n        direction: '',\r\n        fonction: '',\r\n        operateur: '',\r\n        categorie: '',\r\n        poste_GSM: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding Telephone Line:', error.message);\r\n      alert('Failed to add telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyLine = (line) => {\r\n    setIsEditing(true);\r\n    setCurrentLine(line);\r\n  };\r\n\r\n  const handleUpdateLine = async () => {\r\n    try {\r\n      const formattedLine = setDefaultValues(currentLine);\r\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedLine = response.data;\r\n      const updatedData = originalData.map(line => line.id === updatedLine.id ? updatedLine : line);\r\n      setOriginalData(updatedData);\r\n      applyFilters(updatedData, filters);\r\n      setIsEditing(false);\r\n      setCurrentLine(null);\r\n    } catch (error) {\r\n      console.error('Error updating Telephone Line:', error.message);\r\n      alert('Failed to update telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleDeleteLine = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedData = originalData.filter(line => line.id !== id);\r\n      setOriginalData(updatedData);\r\n      applyFilters(updatedData, filters);\r\n    } catch (error) {\r\n      console.error('Error deleting Telephone Line:', error.message);\r\n      alert('Failed to delete telephone line: ' + error.message);\r\n    }\r\n  };\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50, // Set a specific width if needed\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 120, // Set a specific width for the Actions column\r\n      Cell: ({ row }) => (\r\n        <div className=\"actions-column\">\r\n          <button className=\"modify-button\" onClick={() => handleModifyLine(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeleteLine(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    ...Object.keys(newLine).map((key) => ({\r\n      Header: getCustomHeaderName(key),\r\n      accessor: key,\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={options[key]}\r\n          placeholder={`Filter by ${getCustomHeaderName(key)}`}\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveFilter={handleRemoveFilter}\r\n        />\r\n      ),\r\n    })),\r\n  ], [newLine, currentPage, rowsPerPage, options, filters]);\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredData.slice(startIndex, endIndex);\r\n  }, [filteredData, currentPage, rowsPerPage]);\r\n\r\n  return (\r\n    <div className=\"telephone-line-manager\">\r\n      <button className=\"telephone-line-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Line Téléphonique Manager</h1>\r\n      <div className=\"add-line\">\r\n        <table className=\"form-table telephone-line-form-table\">\r\n          <tbody>\r\n            {Object.keys(newLine).map((key, index) => (\r\n              index % 3 === 0 && (\r\n                <tr key={index}>\r\n                  {Object.keys(newLine).slice(index, index + 3).map(innerKey => (\r\n                    <td key={innerKey}>\r\n                      <label className=\"telephone-line-form-label\">{getCustomHeaderName(innerKey)}</label>\r\n                      {['code_entite', 'direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? (\r\n                        <CustomDropdown\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          options={options[innerKey] || []}\r\n                          onChange={handleChange}\r\n                          placeholder={`Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type={innerKey.startsWith('date') ? 'date' : 'text'}\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          onChange={handleChange}\r\n                          className=\"input-field\"\r\n                          placeholder={innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {isEditing ? (\r\n          <button className=\"update-button\" onClick={handleUpdateLine}>Update Line</button>\r\n        ) : (\r\n          <button className=\"add-button\" onClick={handleAddLine}>Add Line</button>\r\n        )}\r\n      </div>\r\n      <div className=\"selected-filters\">\r\n        <h3>Selected Filters:</h3>\r\n        <div>\r\n          {Object.keys(filters).map((key) => (\r\n            filters[key].length > 0 && (\r\n              <div key={key}>\r\n                <strong>{getCustomHeaderName(key)}:</strong> {filters[key].map((value) => (\r\n                  <span key={value} className=\"filter-badge\">\r\n                    {value} <button onClick={() => handleRemoveFilter(key, value)}>x</button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => paginate(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => paginate(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => paginate(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({ column: { filterValue, setFilter, id }, options = [], placeholder, handleFilterChange, handleRemoveFilter }) => {\r\n  const filterOptions = options.map(option => ({ value: option.value, label: option.label }));\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    handleFilterChange(id, selectedOptions); // Call handleFilterChange to update filters\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        value={filterOptions.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={filterOptions}\r\n        isMulti\r\n        placeholder={placeholder || 'Filter...'}\r\n        className=\"filter-select\"\r\n        classNamePrefix=\"filter-select\"\r\n      />\r\n      <div className=\"selected-values\">\r\n        {filterValue && filterValue.map(value => (\r\n          <span key={value} className=\"filter-badge\">\r\n            {value} <button onClick={() => handleRemoveFilter(id, value)}>x</button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      disableMultiSort: false\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table telephone-line-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (option) => {\r\n    onChange({ target: { name, value: option.value } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n              {option.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLine;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport { useAuth } from '../../hooks/useAuth'; // Ensure you have this hook to get user info\r\nimport './TelephoneLineLanding.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst TelephoneLineLanding = () => {\r\n  const history = useHistory();\r\n  const { user } = useAuth(); // Get the user info including the role\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const handleModifyClick = () => {\r\n    if (user && user.role === 'admin') {\r\n      history.push('/telephone-line-manager'); // Change this path to the modify page path\r\n    } else {\r\n      openModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"telephone-landing-container\">\r\n      <div className=\"telephone-card telephone-view-card\" onClick={() => history.push('/telephone-line-view')}>\r\n        <div className=\"telephone-card-content\">\r\n          <h3>Afficher Line Téléphonique</h3>\r\n          <p>⦿Voir tableau <br />⦿Exporter Excel</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"telephone-card telephone-modify-card\" onClick={handleModifyClick}>\r\n        <div className=\"telephone-card-content\">\r\n          <h3>Modifier Line Téléphonique</h3>\r\n          <p>⦿Plus d'infos</p>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Access Denied\"\r\n        className=\"modal\"\r\n        overlayClassName=\"overlay\"\r\n      >\r\n        <h2>Access Denied</h2>\r\n        <p>You do not have permission to modify this page.</p>\r\n        <button onClick={closeModal}>Close</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLineLanding;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters, usePagination } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\r\nimport './TelephoneLineView.css';\r\n\r\nconst TelephoneLineView = () => {\r\n  const [telephoneLines, setTelephoneLines] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [uniqueValues, setUniqueValues] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const history = useHistory();\r\n\r\n  const fetchTelephoneLines = async (appliedFilters = {}) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/telephone-lines', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        params: appliedFilters, // Send filters as query params\r\n      });\r\n\r\n      const data = response.data.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n      setTelephoneLines(data);\r\n      setOriginalData(data);\r\n\r\n      const headers = Object.keys(data[0] || {});\r\n      const uniqueValues = {};\r\n\r\n      headers.forEach(header => {\r\n        uniqueValues[header] = [...new Set(data.map(item => item[header]))].map(value => ({ value, label: value }));\r\n      });\r\n\r\n      const cols = [\r\n        {\r\n          Header: '#',\r\n          accessor: (row, i) => i + 1,\r\n          disableFilters: true,\r\n          disableSortBy: true,\r\n          width: 50,\r\n        },\r\n        ...headers.map((header) => ({\r\n          Header: getCustomHeaderName(header),\r\n          accessor: header,\r\n          Filter: props => <SelectColumnFilter {...props} originalData={data} uniqueValues={uniqueValues[header]} />,\r\n        })),\r\n      ];\r\n\r\n      setColumns(cols);\r\n      setUniqueValues(uniqueValues);\r\n    } catch (error) {\r\n      console.error('Error fetching Telephone Lines:', error);\r\n      alert('Error fetching Telephone Lines: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTelephoneLines(filters);\r\n  }, [filters]);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------') => {\r\n    return Object.fromEntries(\r\n      Object.entries(data).map(([key, value]) => {\r\n        if (value === '' || value === null) {\r\n          return [key, defaultValue];\r\n        }\r\n        return [key, value];\r\n      })\r\n    );\r\n  };\r\n\r\n  const getCustomHeaderName = (header) => {\r\n    const customNames = {\r\n      numero_de_gsm: 'Numero de GSM',\r\n      full_name: 'Nom et Prénom',\r\n      code_entite: 'Code Entite',\r\n      direction: 'Direction',\r\n      fonction: 'Fonction',\r\n      operateur: 'Opérateur',\r\n      categorie: 'Catégorie',\r\n      poste_GSM: 'Poste GSM',\r\n      // Add more mappings as needed\r\n    };\r\n    return customNames[header] || header.replace(/_/g, ' ');\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    setFilters(prev => {\r\n      const updatedFilters = { ...prev };\r\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\r\n      if (updatedFilters[filterKey].length === 0) {\r\n        delete updatedFilters[filterKey];\r\n      }\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      prepareRow,\r\n      page,\r\n      canPreviousPage,\r\n      canNextPage,\r\n      pageOptions,\r\n      state: { pageIndex, pageSize },\r\n      gotoPage,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n        initialState: { pageIndex: 0 },\r\n      },\r\n      useFilters,\r\n      useSortBy,\r\n      usePagination\r\n    );\r\n\r\n    return (\r\n      <div className=\"telephoneline-view-table-container\">\r\n        <table {...getTableProps()} className=\"telephoneline-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'telephoneline-view-row-even' : 'telephoneline-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"pagination-controls\">\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>{'Précédent'}</button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>{'Suivant'}</button>\r\n          <button onClick={() => gotoPage(pageOptions.length - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 25, 50, 100].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"TelephoneLines\");\r\n    XLSX.writeFile(wb, \"TelephoneLines.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"telephoneline-view-container\">\r\n      <button className=\"telephoneline-view-back-button\" onClick={() => history.push('/telephone-lines')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"telephoneline-view-title\">Afficher Line Téléphonique</h1>\r\n      <div className=\"telephoneline-view-selected-filters-container\">\r\n        {Object.keys(filters).map((filterKey) => (\r\n          filters[filterKey].map((filterValue, index) => (\r\n            <span key={`${filterKey}-${index}`} className=\"telephoneline-view-filter-chip\">\r\n              {`${filterKey}: ${filterValue}`} <button onClick={() => handleDelete(filterKey, filterValue)}>x</button>\r\n            </span>\r\n          ))\r\n        ))}\r\n      </div>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columns}\r\n          data={originalData}\r\n        />\r\n      )}\r\n      <div className=\"telephoneline-view-footer\">\r\n        <button\r\n          className=\"telephoneline-view-export-button\"\r\n          onClick={() => exportToExcel(originalData)}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({\r\n  column: { filterValue = [], setFilter, id },\r\n  uniqueValues\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState(() => \r\n    filterValue.map(val => ({ value: val, label: val }))\r\n  );\r\n\r\n  const handleChange = (selected) => {\r\n    const values = selected ? selected.map(option => option.value) : [];\r\n    setSelectedOptions(selected);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    const updatedOptions = selectedOptions.filter(option => option.value !== value);\r\n    const values = updatedOptions.map(option => option.value);\r\n    setSelectedOptions(updatedOptions);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n  };\r\n\r\n  return (\r\n    <div className=\"telephoneline-view-filter-container\">\r\n      <Select\r\n        value={selectedOptions}\r\n        onChange={handleChange}\r\n        options={uniqueValues}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"telephoneline-view-filter-select\"\r\n      />\r\n      {selectedOptions.length > 0 && (\r\n        <div className=\"telephoneline-view-selected-filters\">\r\n          {selectedOptions.map((option, index) => (\r\n            <span key={index} className=\"telephoneline-view-filter-chip\">\r\n              {option.value} <button onClick={() => handleDelete(id, option.value)}>x</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLineView;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect, useLocation, BrowserRouter as Router } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Login from './components/Auth/Login';\r\nimport Signup from './components/Auth/Signup';\r\nimport AdminDashboard from './pages/AdminDashboard';\r\nimport ConsultantDashboard from './pages/ConsultantDashboard';\r\nimport Navbar from './components/Shared/Navbar';\r\nimport Sidebar from './components/Shared/Sidebar';\r\nimport { AuthProvider, useAuth } from './hooks/useAuth';\r\nimport ExcelEditor from './components/Dashboard/ExcelEditor';\r\nimport ITEquipmentLanding from './components/Dashboard/ITEquipmentLanding';\r\nimport ITEquipmentView from './components/Dashboard/ITEquipmentView';\r\nimport ITEquipment from './components/Dashboard/ITEquipment';\r\nimport TelecomPack from './components/Dashboard/TelecomPack';\r\nimport TelecomPackLanding from './components/Dashboard/TelecomPackLanding';\r\nimport TelecomPackView from './components/Dashboard/TelecomPackView';\r\nimport TelephoneLine from './components/Dashboard/TelephoneLine';\r\nimport TelephoneLineLanding from './components/Dashboard/TelephoneLineLanding';\r\nimport TelephoneLineView from './components/Dashboard/TelephoneLineView';\r\n\r\nimport './App.css';\r\n\r\nconst AppContent = () => {\r\n  const { user, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  const showSidebar = !['/', '/signup', '/login'].includes(location.pathname);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!user && location.pathname !== '/login' && location.pathname !== '/signup' && location.pathname !== '/') {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  const getDashboardComponent = () => {\r\n    switch (user?.role) {\r\n      case 'admin':\r\n        return <AdminDashboard />;\r\n      case 'consultant':\r\n        return <ConsultantDashboard />;\r\n      default:\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <div className={`main-content ${showSidebar ? 'with-sidebar' : ''}`}>\r\n        {showSidebar && <Sidebar />}\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/dashboard\" render={getDashboardComponent} />\r\n          \r\n          <Route path=\"/it-equipment\" exact component={ITEquipmentLanding} />\r\n          <Route path=\"/it-equipment-manager\" component={ITEquipment} />\r\n          <Route path=\"/it-equipment-view\" component={ITEquipmentView} />\r\n\r\n          <Route path=\"/telecom-packs\" exact component={TelecomPackLanding} />\r\n          <Route path=\"/telecom-pack-manager\" component={TelecomPack} />\r\n          <Route path=\"/telecom-pack-view\" component={TelecomPackView} />\r\n\r\n          <Route path=\"/telephone-lines\" exact component={TelephoneLineLanding} />\r\n          <Route path=\"/telephone-line-manager\" component={TelephoneLine} />\r\n          <Route path=\"/telephone-line-view\" component={TelephoneLineView} />\r\n\r\n          <Route path=\"/edit-excel\" component={ExcelEditor} />\r\n\r\n          {/* Redirect to login if trying to access other routes without authentication */}\r\n          <Route path=\"*\">\r\n            {user ? <Redirect to=\"/dashboard\" /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => (\r\n  <AuthProvider>\r\n    <Router>\r\n      <AppContent />\r\n    </Router>\r\n  </AuthProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}