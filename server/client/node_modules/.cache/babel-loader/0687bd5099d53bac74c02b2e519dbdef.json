{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelephoneLine.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport './TelephoneLine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setDefaultValues = (data, defaultValue = '------') => {\n  return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n    if (value === '' || value === null) {\n      return [key, defaultValue];\n    }\n    return [key, value];\n  }));\n};\nconst getCustomHeaderName = header => {\n  const customNames = {\n    numero_de_gsm: 'Numero de GSM',\n    full_name: 'Nom et Prénom',\n    code_entite: 'Code Entité',\n    direction: 'Direction',\n    fonction: 'Fonction',\n    operateur: 'Opérateur',\n    categorie: 'Catégorie',\n    poste_GSM: 'Poste GSM'\n    // Add more mappings as needed\n  };\n  return customNames[header] || header.replace(/_/g, ' ');\n};\nconst TelephoneLine = () => {\n  _s();\n  const [telephoneLines, setTelephoneLines] = useState([]);\n  const [options, setOptions] = useState({\n    code_entite: [],\n    direction: [],\n    fonction: [],\n    operateur: [],\n    categorie: []\n  });\n  const [newLine, setNewLine] = useState({\n    numero_de_gsm: '',\n    full_name: '',\n    code_entite: '',\n    direction: '',\n    fonction: '',\n    operateur: '',\n    categorie: '',\n    poste_GSM: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10); // Define the page size\n  const totalPages = Math.ceil(telephoneLines.length / rowsPerPage);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page\n  };\n  useEffect(() => {\n    const fetchTelephoneLines = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = response.data.map(line => setDefaultValues(line));\n        setTelephoneLines(data);\n      } catch (error) {\n        console.error('Error fetching Telephone Lines:', error.message);\n        alert('Failed to fetch telephone lines: ' + error.message);\n      }\n    };\n    const fetchDropdownOptions = async () => {\n      try {\n        const fields = ['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'];\n        const fetchedOptions = {};\n        for (const field of fields) {\n          const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '').concat('------')));\n          fetchedOptions[field] = uniqueValues;\n        }\n        setOptions(fetchedOptions);\n      } catch (error) {\n        console.error('Error fetching dropdown options:', error.message);\n        alert('Failed to fetch dropdown options: ' + error.message);\n      }\n    };\n    fetchTelephoneLines();\n    fetchDropdownOptions();\n  }, [currentPage]);\n  const handleAddLine = async () => {\n    if (!newLine.numero_de_gsm) {\n      alert('The \"numero_de_gsm\" field must be filled.');\n      return;\n    }\n    try {\n      const formattedLine = setDefaultValues(newLine);\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const addedLine = response.data;\n      setTelephoneLines([...telephoneLines, addedLine]);\n      setNewLine({\n        numero_de_gsm: '',\n        full_name: '',\n        code_entite: '',\n        direction: '',\n        fonction: '',\n        operateur: '',\n        categorie: '',\n        poste_GSM: ''\n      });\n    } catch (error) {\n      console.error('Error adding Telephone Line:', error.message);\n      alert('Failed to add telephone line: ' + error.message);\n    }\n  };\n  const handleDeleteLine = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTelephoneLines(prevLines => prevLines.filter(line => line.id !== id));\n    } catch (error) {\n      console.error('Error deleting Telephone Line:', error.message);\n      alert('Failed to delete telephone line: ' + error.message);\n    }\n  };\n  const handleModifyLine = line => {\n    setIsEditing(true);\n    setCurrentLine(line);\n  };\n  const handleUpdateLine = async () => {\n    try {\n      const formattedLine = setDefaultValues(currentLine);\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const updatedLine = response.data;\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\n      setIsEditing(false);\n      setCurrentLine(null);\n    } catch (error) {\n      console.error('Error updating Telephone Line:', error.message);\n      alert('Failed to update telephone line: ' + error.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEditing) {\n      setCurrentLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    } else {\n      setNewLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: '#',\n    accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n    disableFilters: true,\n    disableSortBy: true,\n    width: 50 // Set a specific width if needed\n  }, {\n    Header: 'Actions',\n    accessor: 'actions',\n    disableFilters: true,\n    disableSortBy: true,\n    width: 120,\n    // Set a specific width for the Actions column\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modify-button\",\n        onClick: () => handleModifyLine(row.original),\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDeleteLine(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)\n  }, ...Object.keys(newLine).map(key => ({\n    Header: getCustomHeaderName(key),\n    accessor: key,\n    Filter: SelectColumnFilter\n  }))], [newLine, currentPage, rowsPerPage]);\n  const paginatedData = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return telephoneLines.slice(startIndex, endIndex);\n  }, [telephoneLines, currentPage, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telephone-line-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telephone-line-modify-back-button\",\n      onClick: () => history.goBack(),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Line T\\xE9l\\xE9phonique Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"form-table telephone-line-form-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(newLine).map((key, index) => index % 3 === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(newLine).slice(index, index + 3).map(innerKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"telephone-line-form-label\",\n                children: getCustomHeaderName(innerKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), ['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                options: options[innerKey] || [],\n                onChange: handleChange,\n                placeholder: `Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: innerKey.startsWith('date') ? 'date' : 'text',\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                onChange: handleChange,\n                className: \"input-field\",\n                placeholder: innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 25\n              }, this)]\n            }, innerKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: handleUpdateLine,\n        children: \"Update Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddLine,\n        children: \"Add Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: paginatedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage - 1),\n        disabled: currentPage === 1,\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: '>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s(TelephoneLine, \"F0bresW1KOmimnwbCVsK9Ha2BU0=\", false, function () {\n  return [useHistory];\n});\n_c = TelephoneLine;\nconst SelectColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows,\n    id\n  }\n}) => {\n  _s2();\n  const options = React.useMemo(() => {\n    const optionsSet = new Set();\n    preFilteredRows.forEach(row => {\n      optionsSet.add(row.values[id]);\n    });\n    return [...optionsSet].map(option => ({\n      value: option,\n      label: option\n    }));\n  }, [id, preFilteredRows]);\n  const handleChange = selectedOptions => {\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(Select, {\n    value: options.filter(option => filterValue && filterValue.includes(option.value)),\n    onChange: handleChange,\n    options: options,\n    isMulti: true,\n    placeholder: \"Filtrer par...\",\n    className: \"filter-select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n_c2 = SelectColumnFilter;\nconst Table = ({\n  columns,\n  data\n}) => {\n  _s3();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    disableMultiSort: false\n  }, useFilters, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"data-table telephone-line-view-data-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, index) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          className: index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\",\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n};\n_s3(Table, \"BYNTWeoXdryq+6lvDEiS5kf/9Fc=\", false, function () {\n  return [useTable];\n});\n_c3 = Table;\nconst CustomDropdown = ({\n  name,\n  value,\n  options,\n  onChange,\n  placeholder\n}) => {\n  _s4();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleSelect = option => {\n    onChange({\n      target: {\n        name,\n        value: option\n      }\n    });\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: name,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-arrow\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-option\",\n        onClick: () => handleSelect(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s4(CustomDropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c4 = CustomDropdown;\nexport default TelephoneLine;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TelephoneLine\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","useTable","useSortBy","useFilters","Select","jsxDEV","_jsxDEV","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","value","getCustomHeaderName","header","customNames","numero_de_gsm","full_name","code_entite","direction","fonction","operateur","categorie","poste_GSM","replace","TelephoneLine","_s","telephoneLines","setTelephoneLines","options","setOptions","newLine","setNewLine","isEditing","setIsEditing","currentLine","setCurrentLine","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalPages","Math","ceil","length","paginate","pageNumber","handleRowsPerPageChange","event","parseInt","target","fetchTelephoneLines","response","get","headers","Authorization","localStorage","getItem","line","error","console","message","alert","fetchDropdownOptions","fields","fetchedOptions","field","uniqueValues","Array","from","Set","filter","concat","handleAddLine","formattedLine","post","addedLine","handleDeleteLine","id","delete","prevLines","handleModifyLine","handleUpdateLine","put","updatedLine","handleChange","e","name","prevState","columns","useMemo","Header","accessor","row","i","disableFilters","disableSortBy","width","Cell","className","children","onClick","original","fileName","_jsxFileName","lineNumber","columnNumber","keys","Filter","SelectColumnFilter","paginatedData","startIndex","endIndex","slice","goBack","index","innerKey","includes","CustomDropdown","onChange","placeholder","type","startsWith","Table","disabled","_c","column","filterValue","setFilter","preFilteredRows","_s2","optionsSet","forEach","add","values","option","label","selectedOptions","undefined","isMulti","_c2","_s3","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","disableMultiSort","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","_c3","_s4","isOpen","setIsOpen","handleSelect","_c4","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelephoneLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelephoneLine.css';\r\n\r\nconst setDefaultValues = (data, defaultValue = '------') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst getCustomHeaderName = (header) => {\r\n  const customNames = {\r\n    numero_de_gsm: 'Numero de GSM',\r\n    full_name: 'Nom et Prénom',\r\n    code_entite: 'Code Entité',\r\n    direction: 'Direction',\r\n    fonction: 'Fonction',\r\n    operateur: 'Opérateur',\r\n    categorie: 'Catégorie',\r\n    poste_GSM: 'Poste GSM',\r\n    // Add more mappings as needed\r\n  };\r\n  return customNames[header] || header.replace(/_/g, ' ');\r\n};\r\n\r\nconst TelephoneLine = () => {\r\n  const [telephoneLines, setTelephoneLines] = useState([]);\r\n  const [options, setOptions] = useState({\r\n    code_entite: [],\r\n    direction: [],\r\n    fonction: [],\r\n    operateur: [],\r\n    categorie: [],\r\n  });\r\n  const [newLine, setNewLine] = useState({\r\n    numero_de_gsm: '',\r\n    full_name: '',\r\n    code_entite: '',\r\n    direction: '',\r\n    fonction: '',\r\n    operateur: '',\r\n    categorie: '',\r\n    poste_GSM: '',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10); // Define the page size\r\n  const totalPages = Math.ceil(telephoneLines.length / rowsPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  \r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchTelephoneLines = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = response.data.map(line => setDefaultValues(line));\r\n        setTelephoneLines(data);\r\n      } catch (error) {\r\n        console.error('Error fetching Telephone Lines:', error.message);\r\n        alert('Failed to fetch telephone lines: ' + error.message);\r\n      }\r\n    };\r\n\r\n    const fetchDropdownOptions = async () => {\r\n      try {\r\n        const fields = ['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'];\r\n        const fetchedOptions = {};\r\n        for (const field of fields) {\r\n          const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '').concat('------')));\r\n          fetchedOptions[field] = uniqueValues;\r\n        }\r\n        setOptions(fetchedOptions);\r\n      } catch (error) {\r\n        console.error('Error fetching dropdown options:', error.message);\r\n        alert('Failed to fetch dropdown options: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchTelephoneLines();\r\n    fetchDropdownOptions();\r\n  }, [currentPage]);\r\n\r\n  const handleAddLine = async () => {\r\n    if (!newLine.numero_de_gsm) {\r\n      alert('The \"numero_de_gsm\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedLine = setDefaultValues(newLine);\r\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedLine = response.data;\r\n      setTelephoneLines([...telephoneLines, addedLine]);\r\n      setNewLine({\r\n        numero_de_gsm: '',\r\n        full_name: '',\r\n        code_entite: '',\r\n        direction: '',\r\n        fonction: '',\r\n        operateur: '',\r\n        categorie: '',\r\n        poste_GSM: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding Telephone Line:', error.message);\r\n      alert('Failed to add telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLine = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setTelephoneLines((prevLines) => prevLines.filter(line => line.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting Telephone Line:', error.message);\r\n      alert('Failed to delete telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyLine = (line) => {\r\n    setIsEditing(true);\r\n    setCurrentLine(line);\r\n  };\r\n\r\n  const handleUpdateLine = async () => {\r\n    try {\r\n      const formattedLine = setDefaultValues(currentLine);\r\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedLine = response.data;\r\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\r\n      setIsEditing(false);\r\n      setCurrentLine(null);\r\n    } catch (error) {\r\n      console.error('Error updating Telephone Line:', error.message);\r\n      alert('Failed to update telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50, // Set a specific width if needed\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 120, // Set a specific width for the Actions column\r\n      Cell: ({ row }) => (\r\n        <div className=\"actions-column\">\r\n          <button className=\"modify-button\" onClick={() => handleModifyLine(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeleteLine(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    ...Object.keys(newLine).map((key) => ({\r\n      Header: getCustomHeaderName(key),\r\n      accessor: key,\r\n      Filter: SelectColumnFilter,\r\n    })),\r\n  ], [newLine, currentPage, rowsPerPage]);  \r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return telephoneLines.slice(startIndex, endIndex);\r\n  }, [telephoneLines, currentPage, rowsPerPage]);\r\n\r\n  return (\r\n    <div className=\"telephone-line-manager\">\r\n      <button className=\"telephone-line-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Line Téléphonique Manager</h1>\r\n      <div className=\"add-line\">\r\n        <table className=\"form-table telephone-line-form-table\">\r\n          <tbody>\r\n            {Object.keys(newLine).map((key, index) => (\r\n              index % 3 === 0 && (\r\n                <tr key={index}>\r\n                  {Object.keys(newLine).slice(index, index + 3).map(innerKey => (\r\n                    <td key={innerKey}>\r\n                      <label className=\"telephone-line-form-label\">{getCustomHeaderName(innerKey)}</label>\r\n                      {['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? (\r\n                        <CustomDropdown\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          options={options[innerKey] || []}\r\n                          onChange={handleChange}\r\n                          placeholder={`Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type={innerKey.startsWith('date') ? 'date' : 'text'}\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          onChange={handleChange}\r\n                          className=\"input-field\"\r\n                          placeholder={innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {isEditing ? (\r\n          <button className=\"update-button\" onClick={handleUpdateLine}>Update Line</button>\r\n        ) : (\r\n          <button className=\"add-button\" onClick={handleAddLine}>Add Line</button>\r\n        )}\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => paginate(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1}>{'<'}</button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => paginate(currentPage + 1)} disabled={currentPage === totalPages}>{'>'}</button>\r\n        <button onClick={() => paginate(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }) => {\r\n  const options = React.useMemo(() => {\r\n    const optionsSet = new Set();\r\n    preFilteredRows.forEach(row => {\r\n      optionsSet.add(row.values[id]);\r\n    });\r\n    return [...optionsSet].map(option => ({ value: option, label: option }));\r\n  }, [id, preFilteredRows]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n      onChange={handleChange}\r\n      options={options}\r\n      isMulti\r\n      placeholder=\"Filtrer par...\"\r\n      className=\"filter-select\"\r\n    />\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      disableMultiSort: false\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table telephone-line-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (option) => {\r\n    onChange({ target: { name, value: option } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}