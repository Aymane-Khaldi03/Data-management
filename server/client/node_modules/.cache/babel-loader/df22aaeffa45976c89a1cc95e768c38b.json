{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useContext, createContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst useProvideAuth = () => {\n  _s3();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\n        const loggedInUser = {\n          email: decodedToken.user.email,\n          role: decodedToken.user.role,\n          fullName: decodedToken.user.fullName\n        };\n        setUser(loggedInUser);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\n        localStorage.setItem('token', data.token);\n        const loggedInUser = {\n          email,\n          role: decodedToken.user.role,\n          fullName: decodedToken.user.fullName\n        };\n        setUser(loggedInUser);\n        return loggedInUser;\n      } else {\n        const error = await response.json();\n        throw new Error(error.msg || 'Login failed');\n      }\n    } catch (error) {\n      throw new Error('Server error: ' + error.message);\n    }\n  };\n  const signup = async (fullName, email, password, role) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fullName,\n          email,\n          password,\n          role\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\n        localStorage.setItem('token', data.token);\n        setUser({\n          email,\n          role: decodedToken.user.role,\n          fullName: decodedToken.user.fullName\n        });\n        setLoading(false);\n      } else {\n        const error = await response.json();\n        throw new Error(error.msg || 'Signup failed');\n      }\n    } catch (error) {\n      setLoading(false);\n      throw new Error('Server error: ' + error.message);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    history.push('/login');\n  };\n  return {\n    user,\n    setUser,\n    login,\n    signup,\n    logout,\n    loading\n  };\n};\n_s3(useProvideAuth, \"JcX4n/EUOlpOifM4OLGtrIcRBnM=\", false, function () {\n  return [useHistory];\n});\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useContext","createContext","useEffect","useHistory","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","useProvideAuth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","_s3","user","setUser","loading","setLoading","history","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","loggedInUser","email","role","fullName","error","console","removeItem","login","password","response","fetch","method","headers","body","stringify","ok","data","json","setItem","Error","msg","message","signup","logout","push","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, { useState, useContext, createContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const auth = useProvideAuth();\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nconst useProvideAuth = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\n        const loggedInUser = { email: decodedToken.user.email, role: decodedToken.user.role, fullName: decodedToken.user.fullName };\n        setUser(loggedInUser);\n      } catch (error) {\n        console.error('Error decoding token:', error);\n        localStorage.removeItem('token');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\n        localStorage.setItem('token', data.token);\n        const loggedInUser = { email, role: decodedToken.user.role, fullName: decodedToken.user.fullName };\n        setUser(loggedInUser);\n        return loggedInUser;\n      } else {\n        const error = await response.json();\n        throw new Error(error.msg || 'Login failed');\n      }\n    } catch (error) {\n      throw new Error('Server error: ' + error.message);\n    }\n  };\n\n  const signup = async (fullName, email, password, role) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ fullName, email, password, role }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\n        localStorage.setItem('token', data.token);\n        setUser({ email, role: decodedToken.user.role, fullName: decodedToken.user.fullName });\n        setLoading(false);\n      } else {\n        const error = await response.json();\n        throw new Error(error.msg || 'Signup failed');\n      }\n    } catch (error) {\n      setLoading(false);\n      throw new Error('Server error: ' + error.message);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    history.push('/login');\n  };\n\n  return {\n    user,\n    setUser,\n    login,\n    signup,\n    logout,\n    loading,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}