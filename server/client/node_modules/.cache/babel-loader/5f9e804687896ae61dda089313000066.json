{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelecomPackView.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\nimport './TelecomPackView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelecomPackView = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [telecomPacks, setTelecomPacks] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general');\n  const history = useHistory();\n\n  ////\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const paginatedData = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return telecomPacks.slice(startIndex, endIndex);\n  }, [telecomPacks, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = React.useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns];\n  }, [columns, currentPage, rowsPerPage]);\n  //////\n\n  const measureTextWidth = (text, font = '12px Arial') => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = font;\n    return context.measureText(text).width;\n  };\n  const setDefaultValues = (data, defaultValue = '------') => {\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n      if (value === '' || value === null) {\n        if (['dateAbonnement', 'dateReengagement', 'dateEtat'].includes(key)) {\n          return [key, null]; // Set date fields to null if empty\n        } else {\n          return [key, defaultValue]; // Set other fields to default value\n        }\n      }\n      return [key, value];\n    }));\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '------';\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0]; // Format date to YYYY-MM-DD\n  };\n  useEffect(() => {\n    const fetchTelecomPacks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/telecom-packs', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = response.data.map(pack => {\n          const {\n            createdat,\n            updatedat,\n            id,\n            produit,\n            ...rest\n          } = pack; // Exclude createdAt, updatedAt, id, and produit here\n          const formattedPack = setDefaultValues(rest);\n          return {\n            ...formattedPack,\n            dateAbonnement: formatDate(formattedPack.dateAbonnement),\n            dateReengagement: formatDate(formattedPack.dateReengagement),\n            dateEtat: formatDate(formattedPack.dateEtat)\n          };\n        });\n        setTelecomPacks(data);\n        const headers = Object.keys(data[0] || {});\n        const filteredHeaders = headers.filter(header => !['createdat', 'updatedat', 'produit'].includes(header)); // Exclude createdAt, updatedAt, and produit here\n        const maxWidths = filteredHeaders.reduce((acc, header) => {\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\n          const maxLength = Math.max(headerWidth, ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : '')));\n          acc[header] = maxLength;\n          return acc;\n        }, {});\n        const cols = [{\n          Header: '#',\n          accessor: (row, i) => i + 1,\n          disableFilters: true,\n          disableSortBy: true,\n          width: 50\n        }, ...filteredHeaders.map(header => ({\n          Header: header.replace(/_/g, ' '),\n          accessor: header,\n          Filter: SelectColumnFilter,\n          width: maxWidths[header] + 20\n        }))];\n        setColumns(cols);\n      } catch (error) {\n        console.error('Error fetching Telecom Packs:', error);\n        alert('Error fetching Telecom Packs: ' + error.message);\n      }\n    };\n    fetchTelecomPacks();\n  }, []);\n  const SelectColumnFilter = ({\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  }) => {\n    _s();\n    const options = React.useMemo(() => {\n      const optionsSet = new Set();\n      preFilteredRows.forEach(row => {\n        optionsSet.add(row.values[id]);\n      });\n      return [...optionsSet].map(option => ({\n        value: option,\n        label: option\n      }));\n    }, [id, preFilteredRows]);\n    const handleChange = selectedOptions => {\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n    };\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: options.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filtrer par...',\n      className: \"telecompack-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n  const filterData = data => {\n    const filteredData = data.filter(item => item.entite && item.entite !== '------' && item.operateur && item.operateur !== '------' && item.produit2 && item.produit2 !== '------' && item.etatAbonnement && item.etatAbonnement !== '------');\n    return filteredData;\n  };\n  const exportToExcel = data => {\n    const filteredData = data.map(({\n      createdat,\n      updatedat,\n      id,\n      produit,\n      ...rest\n    }) => rest); // Exclude createdAt, updatedAt, id, and produit here\n    const ws = XLSX.utils.json_to_sheet(filteredData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"TelecomPacks\");\n    XLSX.writeFile(wb, \"Parc_Telecom.xlsx\");\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s2();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    const handleFilterClick = event => {\n      event.stopPropagation();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telecompack-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"telecompack-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: handleFilterClick,\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'telecompack-view-row-even' : 'telecompack-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telecompack-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telecompack-view-back-button\",\n      onClick: () => history.push('/telecom-packs'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"telecompack-view-title\",\n      children: \"Afficher Telecom Packs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: viewType === 'general' ? paginatedData : filterData(paginatedData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", Math.ceil(telecomPacks.length / rowsPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === Math.ceil(telecomPacks.length / rowsPerPage),\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(Math.ceil(telecomPacks.length / rowsPerPage)),\n        disabled: currentPage === Math.ceil(telecomPacks.length / rowsPerPage),\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: e => setRowsPerPage(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telecompack-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"telecompack-view-export-button\",\n        onClick: () => exportToExcel(viewType === 'general' ? telecomPacks : filterData(telecomPacks)),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s3(TelecomPackView, \"NKBDie96MkS5X+1JX7uNwwgJWKM=\", false, function () {\n  return [useHistory];\n});\n_c = TelecomPackView;\nexport default TelecomPackView;\nvar _c;\n$RefreshReg$(_c, \"TelecomPackView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","FaSortUp","FaSortDown","FaSort","jsxDEV","_jsxDEV","TelecomPackView","_s3","_s","$RefreshSig$","_s2","telecomPacks","setTelecomPacks","columns","setColumns","viewType","setViewType","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","handlePageNumberClick","pageNumber","paginatedData","useMemo","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","Header","id","accessor","row","i","disableFilters","disableSortBy","width","filteredColumns","filter","col","measureTextWidth","text","font","canvas","document","createElement","context","getContext","measureText","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","value","includes","formatDate","dateString","date","Date","toISOString","split","fetchTelecomPacks","response","get","headers","Authorization","localStorage","getItem","pack","createdat","updatedat","produit","rest","formattedPack","dateAbonnement","dateReengagement","dateEtat","keys","filteredHeaders","header","maxWidths","reduce","acc","headerWidth","replace","maxLength","Math","max","toString","cols","Filter","SelectColumnFilter","error","console","alert","message","column","filterValue","setFilter","preFilteredRows","options","optionsSet","Set","forEach","add","values","option","label","handleChange","selectedOptions","undefined","onChange","isMulti","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","filterData","filteredData","item","entite","operateur","produit2","etatAbonnement","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleFilterClick","event","stopPropagation","children","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","onClick","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","push","length","disabled","ceil","e","Number","target","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelecomPackView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\r\nimport './TelecomPackView.css';\r\n\r\nconst TelecomPackView = () => {\r\n  const [telecomPacks, setTelecomPacks] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general');\r\n  const history = useHistory();\r\n\r\n  ////\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return telecomPacks.slice(startIndex, endIndex);\r\n  }, [telecomPacks, currentPage, rowsPerPage]);\r\n\r\n  const columnsWithRowNumber = React.useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [rowNumberColumn, ...filteredColumns];\r\n  }, [columns, currentPage, rowsPerPage]);\r\n  //////\r\n\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n  const setDefaultValues = (data, defaultValue = '------') => {\r\n    return Object.fromEntries(\r\n      Object.entries(data).map(([key, value]) => {\r\n        if (value === '' || value === null) {\r\n          if (['dateAbonnement', 'dateReengagement', 'dateEtat'].includes(key)) {\r\n            return [key, null];  // Set date fields to null if empty\r\n          } else {\r\n            return [key, defaultValue];  // Set other fields to default value\r\n          }\r\n        }\r\n        return [key, value];\r\n      })\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '------';\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0]; // Format date to YYYY-MM-DD\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTelecomPacks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telecom-packs', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        const data = response.data.map(pack => {\r\n          const { createdat, updatedat, id, produit, ...rest } = pack; // Exclude createdAt, updatedAt, id, and produit here\r\n          const formattedPack = setDefaultValues(rest);\r\n          return {\r\n            ...formattedPack,\r\n            dateAbonnement: formatDate(formattedPack.dateAbonnement),\r\n            dateReengagement: formatDate(formattedPack.dateReengagement),\r\n            dateEtat: formatDate(formattedPack.dateEtat),\r\n          };\r\n        });\r\n\r\n        setTelecomPacks(data);\r\n\r\n        const headers = Object.keys(data[0] || {});\r\n        const filteredHeaders = headers.filter(header => !['createdat', 'updatedat', 'produit'].includes(header)); // Exclude createdAt, updatedAt, and produit here\r\n        const maxWidths = filteredHeaders.reduce((acc, header) => {\r\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n          const maxLength = Math.max(\r\n            headerWidth,\r\n            ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n          );\r\n          acc[header] = maxLength;\r\n          return acc;\r\n        }, {});\r\n\r\n        const cols = [\r\n          {\r\n            Header: '#',\r\n            accessor: (row, i) => i + 1,\r\n            disableFilters: true,\r\n            disableSortBy: true,\r\n            width: 50,\r\n          },\r\n          ...filteredHeaders.map((header) => ({\r\n            Header: header.replace(/_/g, ' '),\r\n            accessor: header,\r\n            Filter: SelectColumnFilter,\r\n            width: maxWidths[header] + 20,\r\n          })),\r\n        ];\r\n\r\n        setColumns(cols);\r\n      } catch (error) {\r\n        console.error('Error fetching Telecom Packs:', error);\r\n        alert('Error fetching Telecom Packs: ' + error.message);\r\n      }\r\n    };\r\n    fetchTelecomPacks();\r\n  }, []);\r\n\r\n  const SelectColumnFilter = ({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) => {\r\n    const options = React.useMemo(() => {\r\n      const optionsSet = new Set();\r\n      preFilteredRows.forEach(row => {\r\n        optionsSet.add(row.values[id]);\r\n      });\r\n      return [...optionsSet].map(option => ({ value: option, label: option }));\r\n    }, [id, preFilteredRows]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filtrer par...'}\r\n        className=\"telecompack-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const filterData = (data) => {\r\n    const filteredData = data.filter(item =>\r\n      item.entite && item.entite !== '------' &&\r\n      item.operateur && item.operateur !== '------' &&\r\n      item.produit2 && item.produit2 !== '------' &&\r\n      item.etatAbonnement && item.etatAbonnement !== '------'\r\n    );\r\n    return filteredData;\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const filteredData = data.map(({ createdat, updatedat, id, produit, ...rest }) => rest); // Exclude createdAt, updatedAt, id, and produit here\r\n    const ws = XLSX.utils.json_to_sheet(filteredData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"TelecomPacks\");\r\n    XLSX.writeFile(wb, \"Parc_Telecom.xlsx\");\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    const handleFilterClick = (event) => {\r\n      event.stopPropagation();\r\n    };\r\n    return (\r\n      <div className=\"telecompack-view-table-container\">\r\n        <table {...getTableProps()} className=\"telecompack-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div onClick={handleFilterClick}>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'telecompack-view-row-even' : 'telecompack-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"telecompack-view-container\">\r\n      <button className=\"telecompack-view-back-button\" onClick={() => history.push('/telecom-packs')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"telecompack-view-title\">Afficher Telecom Packs</h1>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={viewType === 'general' ? paginatedData : filterData(paginatedData)}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>\r\n          Page {currentPage} of {Math.ceil(telecomPacks.length / rowsPerPage)}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === Math.ceil(telecomPacks.length / rowsPerPage)}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(Math.ceil(telecomPacks.length / rowsPerPage))} disabled={currentPage === Math.ceil(telecomPacks.length / rowsPerPage)}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={(e) => setRowsPerPage(Number(e.target.value))}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"telecompack-view-footer\">\r\n        <button\r\n          className=\"telecompack-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? telecomPacks : filterData(telecomPacks))}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPackView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}