{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelecomPack.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport './TelecomPack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setDefaultValues = (data, defaultValue = '') => {\n  return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n    if (value === '' || value === null) {\n      return [key, defaultValue];\n    }\n    return [key, value];\n  }));\n};\nconst getCustomHeaderName = header => {\n  const customNames = {\n    entite: 'Entite',\n    operateur: 'Operateur',\n    produit: 'Produit',\n    produit2: 'Sous-Produit',\n    numero: 'Numero',\n    etatAbonnement: 'Etat d\\'Abonnement',\n    dateAbonnement: 'Date d\\'Abonnement',\n    dateReengagement: 'Date de Reengagement',\n    dateEtat: 'Date d\\'Etat',\n    observation: 'Observation',\n    typePoste: 'Type de Poste',\n    numeroDeSerie: 'Numero de Serie',\n    dateAffectation: 'Date d\\'Affectation'\n  };\n  return customNames[header] || header.replace(/_/g, ' ');\n};\nconst formatDate = dateString => {\n  if (!dateString || dateString === '------') return '';\n  const date = new Date(dateString);\n  return date.toISOString().split('T')[0];\n};\nconst TelecomPack = () => {\n  _s2();\n  const [telecomPacks, setTelecomPacks] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [options, setOptions] = useState({\n    entite: [],\n    operateur: [],\n    produit: ['DATA', 'VOIX', 'MOBILE', 'INTERNET'],\n    etatAbonnement: []\n  });\n  const [filters, setFilters] = useState({});\n  const [newPack, setNewPack] = useState({\n    entite: '',\n    operateur: '',\n    produit: '',\n    produit2: '',\n    numero: '',\n    etatAbonnement: '',\n    dateAbonnement: '',\n    dateReengagement: '',\n    dateEtat: '',\n    observation: '',\n    typePoste: '',\n    // Added\n    numeroDeSerie: '',\n    // Added\n    dateAffectation: '' // Added\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentPack, setCurrentPack] = useState(null);\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const fetchDropdownOptions = async () => {\n    try {\n      const fields = ['entite', 'operateur', 'etatAbonnement'];\n      const fetchedOptions = {};\n      for (const field of fields) {\n        const response = await axios.get(`http://localhost:5000/api/telecom-packs/dropdown/${field}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '')));\n        fetchedOptions[field] = uniqueValues;\n      }\n      fetchedOptions.produit = ['DATA', 'VOIX', 'MOBILE', 'INTERNET'];\n      setOptions(fetchedOptions);\n    } catch (error) {\n      console.error('Error fetching dropdown options:', error.message);\n      alert('Failed to fetch dropdown options: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    const fetchTelecomPacks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/telecom-packs', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = response.data.map(pack => {\n          const formattedPack = setDefaultValues(pack);\n          return {\n            ...formattedPack,\n            dateAbonnement: formatDate(formattedPack.dateAbonnement),\n            dateReengagement: formatDate(formattedPack.dateReengagement),\n            dateEtat: formatDate(formattedPack.dateEtat)\n          };\n        });\n        setTelecomPacks(data);\n        setOriginalData(data);\n      } catch (error) {\n        console.error('Error fetching Telecom Packs:', error.message);\n        alert('Failed to fetch telecom packs: ' + error.message);\n      }\n    };\n    fetchTelecomPacks();\n    fetchDropdownOptions();\n  }, [filters]);\n  const handleAddPack = async () => {\n    if (!newPack.entite) {\n      alert('The \"entite\" field must be filled.');\n      return;\n    }\n    try {\n      const formattedPack = setDefaultValues(newPack);\n      const response = await axios.post('http://localhost:5000/api/telecom-packs', formattedPack, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const addedPack = response.data;\n      setTelecomPacks([...telecomPacks, addedPack]);\n      setNewPack({\n        entite: '',\n        operateur: '',\n        produit: '',\n        produit2: '',\n        numero: '',\n        etatAbonnement: '',\n        dateAbonnement: '',\n        dateReengagement: '',\n        dateEtat: '',\n        observation: '',\n        typePoste: '',\n        // Added\n        numeroDeSerie: '',\n        // Added\n        dateAffectation: '' // Added\n      });\n    } catch (error) {\n      console.error('Error adding Telecom Pack:', error.message);\n      alert('Failed to add telecom pack: ' + error.message);\n    }\n  };\n  const handleModifyPack = pack => {\n    setIsEditing(true);\n    setCurrentPack(pack);\n  };\n  const handleUpdatePack = async () => {\n    try {\n      const formattedPack = setDefaultValues(currentPack);\n      const response = await axios.put(`http://localhost:5000/api/telecom-packs/${currentPack.id}`, formattedPack, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const updatedPack = response.data;\n      setTelecomPacks(telecomPacks.map(pack => pack.id === updatedPack.id ? updatedPack : pack));\n      setIsEditing(false);\n      setCurrentPack(null);\n    } catch (error) {\n      console.error('Error updating Telecom Pack:', error.message);\n      alert('Failed to update telecom pack: ' + error.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEditing) {\n      setCurrentPack(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    } else {\n      setNewPack(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleDeletePack = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/telecom-packs/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTelecomPacks(telecomPacks.filter(pack => pack.id !== id));\n    } catch (error) {\n      console.error('Error deleting Telecom Pack:', error.message);\n      alert('Failed to delete telecom pack: ' + error.message);\n    }\n  };\n  const handleFilterChange = (field, selectedOptions) => {\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [field]: values\n    }));\n  };\n  const columns = useMemo(() => [{\n    Header: '#',\n    accessor: (row, i) => i + 1,\n    disableFilters: true,\n    disableSortBy: true\n  }, {\n    Header: 'Actions',\n    accessor: 'actions',\n    disableFilters: true,\n    disableSortBy: true,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modify-button\",\n        onClick: () => handleModifyPack(row.original),\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDeletePack(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)\n  }, ...Object.keys(newPack).map(key => {\n    var _s = $RefreshSig$();\n    return {\n      Header: getCustomHeaderName(key),\n      accessor: key,\n      Filter: _s(({\n        column: {\n          filterValue,\n          setFilter,\n          preFilteredRows,\n          id\n        }\n      }) => {\n        _s();\n        const options = useMemo(() => {\n          const optionsSet = new Set();\n          preFilteredRows.forEach(row => {\n            optionsSet.add(row.values[id]);\n          });\n          return [...optionsSet].map(option => ({\n            value: option,\n            label: option\n          }));\n        }, [id, preFilteredRows]);\n        const handleChange = selectedOptions => {\n          setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n        };\n        return /*#__PURE__*/_jsxDEV(Select, {\n          value: options.filter(option => filterValue && filterValue.includes(option.value)),\n          onChange: handleChange,\n          options: options,\n          isMulti: true,\n          placeholder: `Filtrer par ${getCustomHeaderName(id)}`,\n          className: \"filter-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this);\n      }, \"UfleS4trXWGxzhzYTKqqYygmjCE=\")\n    };\n  })], [newPack]);\n  const filteredData = useMemo(() => {\n    return telecomPacks.filter(pack => {\n      return columns.every(column => {\n        if (!column.filterValue || column.filterValue.length === 0) return true;\n        const cellValue = pack[column.accessor];\n        return column.filterValue.includes(cellValue);\n      });\n    });\n  }, [telecomPacks, columns]);\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return filteredData.slice(startIndex, endIndex);\n  }, [filteredData, currentPage, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telecom-pack-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telecompack-modify-back-button\",\n      onClick: () => history.goBack(),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Telecom Pack Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-pack\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"form-table telecom-pack-form-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(newPack).map((key, index) => index % 3 === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(newPack).slice(index, index + 3).map(innerKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"telecom-pack-form-label\",\n                children: getCustomHeaderName(innerKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: innerKey.startsWith('date') ? 'date' : 'text',\n                name: innerKey,\n                value: isEditing ? currentPack[innerKey] : newPack[innerKey],\n                onChange: handleChange,\n                className: \"input-field\",\n                placeholder: `Entrer ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 23\n              }, this)]\n            }, innerKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-pack\",\n        onClick: isEditing ? handleUpdatePack : handleAddPack,\n        children: isEditing ? 'Update Pack' : 'Add Pack'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: paginatedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", Math.ceil(filteredData.length / rowsPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage + 1),\n        disabled: currentPage === Math.ceil(filteredData.length / rowsPerPage),\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(Math.ceil(filteredData.length / rowsPerPage)),\n        disabled: currentPage === Math.ceil(filteredData.length / rowsPerPage),\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: e => setRowsPerPage(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s2(TelecomPack, \"YL7XfzRVhg0opGhBBZL2tqOCZuk=\", false, function () {\n  return [useHistory];\n});\n_c = TelecomPack;\nconst Table = ({\n  columns,\n  data\n}) => {\n  _s3();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"data-table telecompack-view-data-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, index) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          className: index % 2 === 0 ? \"telecompack-view-row-even\" : \"telecompack-view-row-odd\",\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n_s3(Table, \"BYNTWeoXdryq+6lvDEiS5kf/9Fc=\", false, function () {\n  return [useTable];\n});\n_c2 = Table;\nexport default TelecomPack;\nvar _c, _c2;\n$RefreshReg$(_c, \"TelecomPack\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useHistory","useTable","useSortBy","useFilters","Select","jsxDEV","_jsxDEV","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","value","getCustomHeaderName","header","customNames","entite","operateur","produit","produit2","numero","etatAbonnement","dateAbonnement","dateReengagement","dateEtat","observation","typePoste","numeroDeSerie","dateAffectation","replace","formatDate","dateString","date","Date","toISOString","split","TelecomPack","_s2","telecomPacks","setTelecomPacks","originalData","setOriginalData","options","setOptions","filters","setFilters","newPack","setNewPack","isEditing","setIsEditing","currentPack","setCurrentPack","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","fetchDropdownOptions","fields","fetchedOptions","field","response","get","headers","Authorization","localStorage","getItem","uniqueValues","Array","from","Set","filter","error","console","message","alert","fetchTelecomPacks","pack","formattedPack","handleAddPack","post","addedPack","handleModifyPack","handleUpdatePack","put","id","updatedPack","handleChange","e","name","target","prevState","handleDeletePack","delete","handleFilterChange","selectedOptions","values","option","prevFilters","columns","Header","accessor","row","i","disableFilters","disableSortBy","Cell","children","className","onClick","original","fileName","_jsxFileName","lineNumber","columnNumber","keys","_s","$RefreshSig$","Filter","column","filterValue","setFilter","preFilteredRows","optionsSet","forEach","add","label","undefined","includes","onChange","isMulti","placeholder","filteredData","every","length","cellValue","paginatedData","startIndex","endIndex","slice","goBack","index","innerKey","type","startsWith","Table","disabled","Math","ceil","Number","_c","_s3","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","_c2","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelecomPack.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelecomPack.css';\r\n\r\nconst setDefaultValues = (data, defaultValue = '') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst getCustomHeaderName = (header) => {\r\n  const customNames = {\r\n    entite: 'Entite',\r\n    operateur: 'Operateur',\r\n    produit: 'Produit',\r\n    produit2: 'Sous-Produit',\r\n    numero: 'Numero',\r\n    etatAbonnement: 'Etat d\\'Abonnement',\r\n    dateAbonnement: 'Date d\\'Abonnement',\r\n    dateReengagement: 'Date de Reengagement',\r\n    dateEtat: 'Date d\\'Etat',\r\n    observation: 'Observation',\r\n    typePoste: 'Type de Poste',\r\n    numeroDeSerie: 'Numero de Serie',\r\n    dateAffectation: 'Date d\\'Affectation'\r\n  };\r\n  return customNames[header] || header.replace(/_/g, ' ');\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString || dateString === '------') return '';\r\n  const date = new Date(dateString);\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst TelecomPack = () => {\r\n  const [telecomPacks, setTelecomPacks] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [options, setOptions] = useState({\r\n    entite: [],\r\n    operateur: [],\r\n    produit: ['DATA', 'VOIX', 'MOBILE', 'INTERNET'],\r\n    etatAbonnement: [],\r\n  });\r\n  const [filters, setFilters] = useState({});\r\n  const [newPack, setNewPack] = useState({\r\n    entite: '',\r\n    operateur: '',\r\n    produit: '',\r\n    produit2: '',\r\n    numero: '',\r\n    etatAbonnement: '',\r\n    dateAbonnement: '',\r\n    dateReengagement: '',\r\n    dateEtat: '',\r\n    observation: '',\r\n    typePoste: '',        // Added\r\n    numeroDeSerie: '',    // Added\r\n    dateAffectation: ''   // Added\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentPack, setCurrentPack] = useState(null);\r\n  const history = useHistory();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const fetchDropdownOptions = async () => {\r\n    try {\r\n      const fields = ['entite', 'operateur', 'etatAbonnement'];\r\n      const fetchedOptions = {};\r\n      for (const field of fields) {\r\n        const response = await axios.get(`http://localhost:5000/api/telecom-packs/dropdown/${field}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '')));\r\n        fetchedOptions[field] = uniqueValues;\r\n      }\r\n\r\n      fetchedOptions.produit = ['DATA', 'VOIX', 'MOBILE', 'INTERNET'];\r\n\r\n      setOptions(fetchedOptions);\r\n    } catch (error) {\r\n      console.error('Error fetching dropdown options:', error.message);\r\n      alert('Failed to fetch dropdown options: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTelecomPacks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telecom-packs', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = response.data.map(pack => {\r\n          const formattedPack = setDefaultValues(pack);\r\n          return {\r\n            ...formattedPack,\r\n            dateAbonnement: formatDate(formattedPack.dateAbonnement),\r\n            dateReengagement: formatDate(formattedPack.dateReengagement),\r\n            dateEtat: formatDate(formattedPack.dateEtat),\r\n          };\r\n        });\r\n\r\n        setTelecomPacks(data);\r\n        setOriginalData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching Telecom Packs:', error.message);\r\n        alert('Failed to fetch telecom packs: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchTelecomPacks();\r\n    fetchDropdownOptions();\r\n  }, [filters]);\r\n\r\n  const handleAddPack = async () => {\r\n    if (!newPack.entite) {\r\n      alert('The \"entite\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedPack = setDefaultValues(newPack);\r\n      const response = await axios.post('http://localhost:5000/api/telecom-packs', formattedPack, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedPack = response.data;\r\n      setTelecomPacks([...telecomPacks, addedPack]);\r\n      setNewPack({\r\n        entite: '',\r\n        operateur: '',\r\n        produit: '',\r\n        produit2: '',\r\n        numero: '',\r\n        etatAbonnement: '',\r\n        dateAbonnement: '',\r\n        dateReengagement: '',\r\n        dateEtat: '',\r\n        observation: '',\r\n        typePoste: '',        // Added\r\n        numeroDeSerie: '',    // Added\r\n        dateAffectation: ''   // Added\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding Telecom Pack:', error.message);\r\n      alert('Failed to add telecom pack: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyPack = (pack) => {\r\n    setIsEditing(true);\r\n    setCurrentPack(pack);\r\n  };\r\n\r\n  const handleUpdatePack = async () => {\r\n    try {\r\n      const formattedPack = setDefaultValues(currentPack);\r\n      const response = await axios.put(`http://localhost:5000/api/telecom-packs/${currentPack.id}`, formattedPack, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedPack = response.data;\r\n      setTelecomPacks(telecomPacks.map(pack => pack.id === updatedPack.id ? updatedPack : pack));\r\n      setIsEditing(false);\r\n      setCurrentPack(null);\r\n    } catch (error) {\r\n      console.error('Error updating Telecom Pack:', error.message);\r\n      alert('Failed to update telecom pack: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentPack(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewPack(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleDeletePack = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telecom-packs/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setTelecomPacks(telecomPacks.filter(pack => pack.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting Telecom Pack:', error.message);\r\n      alert('Failed to delete telecom pack: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (field, selectedOptions) => {\r\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    setFilters(prevFilters => ({ ...prevFilters, [field]: values }));\r\n  };\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      Cell: ({ row }) => (\r\n        <div>\r\n          <button className=\"modify-button\" onClick={() => handleModifyPack(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeletePack(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    ...Object.keys(newPack).map((key) => ({\r\n      Header: getCustomHeaderName(key),\r\n      accessor: key,\r\n      Filter: ({ column: { filterValue, setFilter, preFilteredRows, id } }) => {\r\n        const options = useMemo(() => {\r\n          const optionsSet = new Set();\r\n          preFilteredRows.forEach(row => {\r\n            optionsSet.add(row.values[id]);\r\n          });\r\n          return [...optionsSet].map(option => ({ value: option, label: option }));\r\n        }, [id, preFilteredRows]);\r\n\r\n        const handleChange = (selectedOptions) => {\r\n          setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n        };\r\n\r\n        return (\r\n          <Select\r\n            value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n            onChange={handleChange}\r\n            options={options}\r\n            isMulti\r\n            placeholder={`Filtrer par ${getCustomHeaderName(id)}`}\r\n            className=\"filter-select\"\r\n          />\r\n        );\r\n      }\r\n    })),\r\n  ], [newPack]);\r\n\r\n  const filteredData = useMemo(() => {\r\n    return telecomPacks.filter(pack => {\r\n      return columns.every(column => {\r\n        if (!column.filterValue || column.filterValue.length === 0) return true;\r\n        const cellValue = pack[column.accessor];\r\n        return column.filterValue.includes(cellValue);\r\n      });\r\n    });\r\n  }, [telecomPacks, columns]);\r\n\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredData.slice(startIndex, endIndex);\r\n  }, [filteredData, currentPage, rowsPerPage]);\r\n\r\n  return (\r\n    <div className=\"telecom-pack-manager\">\r\n      <button className=\"telecompack-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Telecom Pack Manager</h1>\r\n      <div className=\"add-pack\">\r\n        <table className=\"form-table telecom-pack-form-table\">\r\n          <tbody>\r\n            {Object.keys(newPack).map((key, index) => (\r\n              index % 3 === 0 && (\r\n                <tr key={index}>\r\n                  {Object.keys(newPack).slice(index, index + 3).map(innerKey => (\r\n                    <td key={innerKey}>\r\n                      <label className=\"telecom-pack-form-label\">{getCustomHeaderName(innerKey)}</label>\r\n                      <input\r\n                        type={innerKey.startsWith('date') ? 'date' : 'text'}\r\n                        name={innerKey}\r\n                        value={isEditing ? currentPack[innerKey] : newPack[innerKey]}\r\n                        onChange={handleChange}\r\n                        className=\"input-field\"\r\n                        placeholder={`Entrer ${innerKey.replace(/_/g, ' ')}`}\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button className=\"add-pack\" onClick={isEditing ? handleUpdatePack : handleAddPack}>\r\n          {isEditing ? 'Update Pack' : 'Add Pack'}\r\n        </button>\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => setCurrentPage(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>Page {currentPage} of {Math.ceil(filteredData.length / rowsPerPage)}</span>\r\n        <button onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === Math.ceil(filteredData.length / rowsPerPage)}>{'Suivant'}</button>\r\n        <button onClick={() => setCurrentPage(Math.ceil(filteredData.length / rowsPerPage))} disabled={currentPage === Math.ceil(filteredData.length / rowsPerPage)}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={(e) => setRowsPerPage(Number(e.target.value))}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table telecompack-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"telecompack-view-row-even\" : \"telecompack-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TelecomPack;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}