{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard/ExcelEditor.js\n\nimport React, { useState } from 'react';\nimport './ExcelEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [schema, setSchema] = useState([]);\n  const [table, setTable] = useState('telephone_lines'); // Default to telephone_lines table\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleSchemaFetch = async table => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/schema/${table}`);\n      if (response.ok) {\n        const data = await response.json();\n        setSchema(data.schema);\n      } else {\n        throw new Error('Failed to fetch schema');\n      }\n    } catch (error) {\n      console.error('Error fetching schema:', error);\n      setSchema([]);\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch(`http://localhost:5000/api/upload/${table}`, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert('File uploaded successfully.');\n      } else {\n        throw new Error('Failed to upload data');\n      }\n    } catch (error) {\n      console.error('Error uploading data:', error);\n      alert('Error: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Excel File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Excel file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx, .xls\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: table,\n        onChange: e => {\n          setTable(e.target.value);\n          handleSchemaFetch(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"it_equipments\",\n          children: \"IT Equipments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telecom_pack\",\n          children: \"Telecom Pack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telephone_lines\",\n          children: \"Telephone Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), schema.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: schema.map((column, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: column\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to fetch schema\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelEditor, \"jKDBe6BKO40Isa3a+wvSJiTzfNo=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExcelEditor","_s","selectedFile","setSelectedFile","schema","setSchema","table","setTable","handleFileChange","e","target","files","handleSchemaFetch","response","fetch","ok","data","json","Error","error","console","handleUpload","alert","formData","FormData","append","method","body","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","value","onClick","length","map","column","index","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["// src/components/Dashboard/ExcelEditor.js\r\n\r\nimport React, { useState } from 'react';\r\nimport './ExcelEditor.css';\r\n\r\nconst ExcelEditor = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [schema, setSchema] = useState([]);\r\n  const [table, setTable] = useState('telephone_lines'); // Default to telephone_lines table\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSchemaFetch = async (table) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/schema/${table}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSchema(data.schema);\r\n      } else {\r\n        throw new Error('Failed to fetch schema');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching schema:', error);\r\n      setSchema([]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/upload/${table}`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert('File uploaded successfully.');\r\n      } else {\r\n        throw new Error('Failed to upload data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading data:', error);\r\n      alert('Error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-editor-container\">\r\n      <h1>Excel File Upload</h1>\r\n      <div>\r\n        <label>Select Excel file</label>\r\n        <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileChange} />\r\n      </div>\r\n      <div>\r\n        <label>Table</label>\r\n        <select value={table} onChange={(e) => {\r\n          setTable(e.target.value);\r\n          handleSchemaFetch(e.target.value);\r\n        }}>\r\n          <option value=\"it_equipments\">IT Equipments</option>\r\n          <option value=\"telecom_pack\">Telecom Pack</option>\r\n          <option value=\"telephone_lines\">Telephone Lines</option>\r\n        </select>\r\n      </div>\r\n      <button onClick={handleUpload}>Upload</button>\r\n      {schema.length > 0 ? (\r\n        <div>\r\n          <h2>Schema</h2>\r\n          <ul>\r\n            {schema.map((column, index) => (\r\n              <li key={index}>{column}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <p>Failed to fetch schema</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;;EAEvD,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,eAAe,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAON,KAAK,IAAK;IACzC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCR,KAAK,EAAE,CAAC;MACzE,IAAIO,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCZ,SAAS,CAACW,IAAI,CAACZ,MAAM,CAAC;MACxB,CAAC,MAAM;QACL,MAAM,IAAIc,KAAK,CAAC,wBAAwB,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9Cd,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACnB,YAAY,EAAE;MACjBoB,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEvB,YAAY,CAAC;IAErC,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCR,KAAK,EAAE,EAAE;QACxEoB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAIV,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCK,KAAK,CAAC,6BAA6B,CAAC;MACtC,CAAC,MAAM;QACL,MAAM,IAAIJ,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CG,KAAK,CAAC,SAAS,GAAGH,KAAK,CAACS,OAAO,CAAC;IAClC;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC/B,OAAA;MAAA+B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChCnC,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,aAAa;QAACC,QAAQ,EAAE7B;MAAiB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACNnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBnC,OAAA;QAAQuC,KAAK,EAAEhC,KAAM;QAAC+B,QAAQ,EAAG5B,CAAC,IAAK;UACrCF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAAC4B,KAAK,CAAC;UACxB1B,iBAAiB,CAACH,CAAC,CAACC,MAAM,CAAC4B,KAAK,CAAC;QACnC,CAAE;QAAAR,QAAA,gBACA/B,OAAA;UAAQuC,KAAK,EAAC,eAAe;UAAAR,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpDnC,OAAA;UAAQuC,KAAK,EAAC,cAAc;UAAAR,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClDnC,OAAA;UAAQuC,KAAK,EAAC,iBAAiB;UAAAR,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNnC,OAAA;MAAQwC,OAAO,EAAElB,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C9B,MAAM,CAACoC,MAAM,GAAG,CAAC,gBAChBzC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfnC,OAAA;QAAA+B,QAAA,EACG1B,MAAM,CAACqC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxB5C,OAAA;UAAA+B,QAAA,EAAiBY;QAAM,GAAdC,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAENnC,OAAA;MAAA+B,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CApFID,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAsFjB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}