{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport './ExcelEditor.css';\nimport { FaFileExcel } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [table, setTable] = useState('');\n  const [schema, setSchema] = useState([]);\n  const [message, setMessage] = useState('');\n  const [matchingColumns, setMatchingColumns] = useState(0);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadId, setUploadId] = useState('');\n  useEffect(() => {\n    if (table) {\n      const fetchSchema = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/schema/${table}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setSchema(response.data);\n        } catch (error) {\n          setMessage('Erreur lors de la récupération du schéma');\n          console.error('Error fetching schema:', error);\n        }\n      };\n      fetchSchema();\n    }\n  }, [table]);\n  useEffect(() => {\n    if (uploadId) {\n      const interval = setInterval(async () => {\n        try {\n          const response = await axios.get(`http://localhost:5000/api/upload-progress/${uploadId}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          setUploadProgress(response.data.progress);\n        } catch (error) {\n          console.error('Error fetching upload progress:', error);\n          clearInterval(interval);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [uploadId]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    try {\n      if (!selectedFile || !table) {\n        alert('Veuillez sélectionner un tableau et un fichier.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n      setUploadId(response.data.uploadId);\n      console.log('File uploaded successfully:', response.data);\n      setMessage('Fichier téléchargé avec succès');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Erreur lors du téléchargement du fichier: ' + error.message);\n      setMessage('Erreur lors du téléchargement du fichier: ' + error.message);\n    }\n  };\n  const filterColumns = data => {\n    if (schema.length === 0) return data;\n    return data.map(record => {\n      return Object.fromEntries(Object.entries(record).filter(([key]) => schema.includes(key)));\n    });\n  };\n  const countMatchingColumns = data => {\n    if (schema.length === 0 || data.length === 0) return 0;\n    return schema.filter(column => Object.keys(data[0]).includes(column)).length;\n  };\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const workbook = XLSX.read(e.target.result, {\n          type: 'binary'\n        });\n        const sheetName = workbook.SheetNames[0];\n        const data = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\n        const filteredData = filterColumns(data);\n        setMatchingColumns(countMatchingColumns(filteredData));\n      };\n      reader.readAsBinaryString(selectedFile);\n    }\n  }, [selectedFile, schema]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"T\\xE9l\\xE9chargement de fichier Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"S\\xE9lectionnez le fichier Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload-text\",\n          children: selectedFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FaFileExcel, {\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), selectedFile.name]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"D\\xE9posez vos fichiers ici ou \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"browse-files\",\n              children: \"Parcourir les fichiers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-type-text\",\n          children: \"Types de fichiers accept\\xE9s : .xlsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"S\\xE9lectionnez un tableau\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: table,\n        onChange: e => setTable(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"S\\xE9lectionnez un tableau\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"it_equipments\",\n          children: \"\\xC9quipements informatiques\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telecom_pack\",\n          children: \"Parc T\\xE9l\\xE9com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telephone_lines\",\n          children: \"Lignes t\\xE9l\\xE9phoniques\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"T\\xE9l\\xE9charger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\",\n          style: {\n            width: `${uploadProgress}%`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"counter\",\n            children: [uploadProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), uploadProgress === 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success\",\n          children: \"T\\xE9l\\xE9chargement termin\\xE9!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: \"Fichier t\\xE9l\\xE9charg\\xE9 avec succ\\xE8s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }, this), schema.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schema-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sch\\xE9ma du tableau\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Nombre de colonnes correspondantes : \", matchingColumns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schema-table\",\n        children: schema.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schema-column\",\n          children: [column, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder\",\n            children: [column === 'numero_de_gsm' && 'Ex: 212XXXXXXXXX', column.includes('date') && 'Format: yyyy-mm-dd ou mm/dd/yyyy']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, column, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelEditor, \"l77+M6Rkau5LGWevxQdQ1qbqX/U=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","useEffect","axios","XLSX","FaFileExcel","jsxDEV","_jsxDEV","Fragment","_Fragment","ExcelEditor","_s","selectedFile","setSelectedFile","table","setTable","schema","setSchema","message","setMessage","matchingColumns","setMatchingColumns","uploadProgress","setUploadProgress","uploadId","setUploadId","fetchSchema","response","get","headers","Authorization","localStorage","getItem","data","error","console","interval","setInterval","progress","clearInterval","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","log","filterColumns","length","map","record","Object","fromEntries","entries","filter","key","includes","countMatchingColumns","column","keys","reader","FileReader","onload","e","workbook","read","result","type","sheetName","SheetNames","utils","sheet_to_json","Sheets","filteredData","readAsBinaryString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","name","value","onClick","style","width","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\nimport './ExcelEditor.css';\r\nimport { FaFileExcel } from 'react-icons/fa';\r\n\r\nconst ExcelEditor = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [table, setTable] = useState('');\r\n  const [schema, setSchema] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [matchingColumns, setMatchingColumns] = useState(0);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadId, setUploadId] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (table) {\r\n      const fetchSchema = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/schema/${table}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          setSchema(response.data);\r\n        } catch (error) {\r\n          setMessage('Erreur lors de la récupération du schéma');\r\n          console.error('Error fetching schema:', error);\r\n        }\r\n      };\r\n      fetchSchema();\r\n    }\r\n  }, [table]);\r\n\r\n  useEffect(() => {\r\n    if (uploadId) {\r\n      const interval = setInterval(async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:5000/api/upload-progress/${uploadId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          setUploadProgress(response.data.progress);\r\n        } catch (error) {\r\n          console.error('Error fetching upload progress:', error);\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [uploadId]);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !table) {\r\n        alert('Veuillez sélectionner un tableau et un fichier.');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(percentCompleted);\r\n        },\r\n      });\r\n\r\n      setUploadId(response.data.uploadId);\r\n      console.log('File uploaded successfully:', response.data);\r\n      setMessage('Fichier téléchargé avec succès');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Erreur lors du téléchargement du fichier: ' + error.message);\r\n      setMessage('Erreur lors du téléchargement du fichier: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const filterColumns = (data) => {\r\n    if (schema.length === 0) return data;\r\n    return data.map(record => {\r\n      return Object.fromEntries(\r\n        Object.entries(record).filter(([key]) => schema.includes(key))\r\n      );\r\n    });\r\n  };\r\n\r\n  const countMatchingColumns = (data) => {\r\n    if (schema.length === 0 || data.length === 0) return 0;\r\n    return schema.filter(column => Object.keys(data[0]).includes(column)).length;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const workbook = XLSX.read(e.target.result, { type: 'binary' });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const data = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName]);\r\n        const filteredData = filterColumns(data);\r\n        setMatchingColumns(countMatchingColumns(filteredData));\r\n      };\r\n      reader.readAsBinaryString(selectedFile);\r\n    }\r\n  }, [selectedFile, schema]);\r\n\r\n  return (\r\n    <div className=\"excel-editor\">\r\n      <h2>Téléchargement de fichier Excel</h2>\r\n      <div className=\"form-group\">\r\n        <label>Sélectionnez le fichier Excel</label>\r\n        <div className=\"file-upload\">\r\n          <input type=\"file\" onChange={handleFileChange} />\r\n          <div className=\"file-upload-text\">\r\n            {selectedFile ? (\r\n              <>\r\n                <FaFileExcel className=\"file-icon\" />\r\n                {selectedFile.name}\r\n              </>\r\n            ) : (\r\n              <>Déposez vos fichiers ici ou <span className=\"browse-files\">Parcourir les fichiers</span></>\r\n            )}\r\n          </div>\r\n          <div className=\"file-type-text\">Types de fichiers acceptés : .xlsx</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Sélectionnez un tableau</label>\r\n        <select value={table} onChange={(e) => setTable(e.target.value)}>\r\n          <option value=\"\">Sélectionnez un tableau</option>\r\n          <option value=\"it_equipments\">Équipements informatiques</option>\r\n          <option value=\"telecom_pack\">Parc Télécom</option>\r\n          <option value=\"telephone_lines\">Lignes téléphoniques</option>\r\n        </select>\r\n      </div>\r\n      <button onClick={handleUpload}>Télécharger</button>\r\n      <div className=\"progress-container\">\r\n        <div className=\"progress\">\r\n          <div className=\"bar\" style={{ width: `${uploadProgress}%` }}>\r\n            <p className=\"counter\">{uploadProgress}%</p>\r\n          </div>\r\n        </div>\r\n        {uploadProgress === 100 && (\r\n          <div className=\"success-container\">\r\n            <p className=\"success\">Téléchargement terminé!</p>\r\n            <p className=\"success-message\">Fichier téléchargé avec succès</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {message && <p>{message}</p>}\r\n      {schema.length > 0 && (\r\n        <div className=\"schema-container\">\r\n          <h3>Schéma du tableau</h3>\r\n          <p>Nombre de colonnes correspondantes : {matchingColumns}</p>\r\n          <div className=\"schema-table\">\r\n            {schema.map((column) => (\r\n              <div key={column} className=\"schema-column\">\r\n                {column}\r\n                <div className=\"placeholder\">\r\n                  {column === 'numero_de_gsm' && 'Ex: 212XXXXXXXXX'}\r\n                  {column.includes('date') && 'Format: yyyy-mm-dd ou mm/dd/yyyy'}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}