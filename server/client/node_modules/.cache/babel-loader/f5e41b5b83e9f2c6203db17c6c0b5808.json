{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelephoneLine.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport './TelephoneLine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setDefaultValues = (data, defaultValue = '------') => {\n  return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n    if (value === '' || value === null) {\n      return [key, defaultValue];\n    }\n    return [key, value];\n  }));\n};\nconst getCustomHeaderName = header => {\n  const customNames = {\n    numero_de_gsm: 'Numero de GSM',\n    full_name: 'Nom et Prénom',\n    code_entite: 'Code Entité',\n    direction: 'Direction',\n    fonction: 'Fonction',\n    operateur: 'Opérateur',\n    categorie: 'Catégorie',\n    poste_GSM: 'Poste GSM'\n    // Add more mappings as needed\n  };\n  return customNames[header] || header.replace(/_/g, ' ');\n};\nconst TelephoneLine = () => {\n  _s();\n  const [telephoneLines, setTelephoneLines] = useState([]);\n  const [options, setOptions] = useState({\n    code_entite: [],\n    direction: [],\n    fonction: [],\n    operateur: [],\n    categorie: []\n  });\n  const [newLine, setNewLine] = useState({\n    numero_de_gsm: '',\n    full_name: '',\n    code_entite: '',\n    direction: '',\n    fonction: '',\n    operateur: '',\n    categorie: '',\n    poste_GSM: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(10); // Define the page size\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchTelephoneLines = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = response.data.map(line => setDefaultValues(line));\n        setTelephoneLines(data);\n        setTotalPages(Math.ceil(data.length / pageSize));\n      } catch (error) {\n        console.error('Error fetching Telephone Lines:', error.message);\n        alert('Failed to fetch telephone lines: ' + error.message);\n      }\n    };\n    const fetchDropdownOptions = async () => {\n      try {\n        const fields = ['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'];\n        const fetchedOptions = {};\n        for (const field of fields) {\n          const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '').concat('------')));\n          fetchedOptions[field] = uniqueValues;\n        }\n        setOptions(fetchedOptions);\n      } catch (error) {\n        console.error('Error fetching dropdown options:', error.message);\n        alert('Failed to fetch dropdown options: ' + error.message);\n      }\n    };\n    fetchTelephoneLines();\n    fetchDropdownOptions();\n  }, [currentPage]);\n  const handleAddLine = async () => {\n    if (!newLine.numero_de_gsm) {\n      alert('The \"numero_de_gsm\" field must be filled.');\n      return;\n    }\n    try {\n      const formattedLine = setDefaultValues(newLine);\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const addedLine = response.data;\n      setTelephoneLines([...telephoneLines, addedLine]);\n      setNewLine({\n        numero_de_gsm: '',\n        full_name: '',\n        code_entite: '',\n        direction: '',\n        fonction: '',\n        operateur: '',\n        categorie: '',\n        poste_GSM: ''\n      });\n      setTotalPages(Math.ceil([...telephoneLines, addedLine].length / pageSize));\n    } catch (error) {\n      console.error('Error adding Telephone Line:', error.message);\n      alert('Failed to add telephone line: ' + error.message);\n    }\n  };\n  const handleDeleteLine = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTelephoneLines(prevLines => prevLines.filter(line => line.id !== id));\n      setTotalPages(Math.ceil((telephoneLines.length - 1) / pageSize));\n    } catch (error) {\n      console.error('Error deleting Telephone Line:', error.message);\n      alert('Failed to delete telephone line: ' + error.message);\n    }\n  };\n  const handleModifyLine = line => {\n    setIsEditing(true);\n    setCurrentLine(line);\n  };\n  const handleUpdateLine = async () => {\n    try {\n      const formattedLine = setDefaultValues(currentLine);\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const updatedLine = response.data;\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\n      setIsEditing(false);\n      setCurrentLine(null);\n      setTotalPages(Math.ceil(telephoneLines.length / pageSize));\n    } catch (error) {\n      console.error('Error updating Telephone Line:', error.message);\n      alert('Failed to update telephone line: ' + error.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEditing) {\n      setCurrentLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    } else {\n      setNewLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: '#',\n    accessor: (row, i) => (currentPage - 1) * pageSize + i + 1,\n    disableFilters: true,\n    disableSortBy: true\n  }, {\n    Header: 'Actions',\n    accessor: 'actions',\n    disableFilters: true,\n    disableSortBy: true,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modify-button\",\n        onClick: () => handleModifyLine(row.original),\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDeleteLine(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)\n  }, ...Object.keys(newLine).map(key => ({\n    Header: getCustomHeaderName(key),\n    accessor: key,\n    Filter: SelectColumnFilter\n  }))], [newLine, currentPage, pageSize]);\n  const paginatedData = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    return telephoneLines.slice(startIndex, endIndex);\n  }, [telephoneLines, currentPage, pageSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telephone-line-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telephone-line-modify-back-button\",\n      onClick: () => history.goBack(),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Line T\\xE9l\\xE9phonique Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"form-table telephone-line-form-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(newLine).map((key, index) => index % 3 === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(newLine).slice(index, index + 3).map(innerKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"telephone-line-form-label\",\n                children: getCustomHeaderName(innerKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this), ['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                options: options[innerKey] || [],\n                onChange: handleChange,\n                placeholder: `Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: innerKey.startsWith('date') ? 'date' : 'text',\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                onChange: handleChange,\n                className: \"input-field\",\n                placeholder: innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)]\n            }, innerKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: handleUpdateLine,\n        children: \"Update Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddLine,\n        children: \"Add Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: paginatedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n        disabled: currentPage === totalPages,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-number-navigation\",\n      children: Array.from({\n        length: totalPages\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `page-number ${currentPage === i + 1 ? 'active' : ''}`,\n        onClick: () => setCurrentPage(i + 1),\n        children: i + 1\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(TelephoneLine, \"uTg788UErPuRRymR1hfioz3hFaA=\", false, function () {\n  return [useHistory];\n});\n_c = TelephoneLine;\nconst SelectColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows,\n    id\n  }\n}) => {\n  _s2();\n  const options = React.useMemo(() => {\n    const optionsSet = new Set();\n    preFilteredRows.forEach(row => {\n      optionsSet.add(row.values[id]);\n    });\n    return [...optionsSet].map(option => ({\n      value: option,\n      label: option\n    }));\n  }, [id, preFilteredRows]);\n  const handleChange = selectedOptions => {\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(Select, {\n    value: options.filter(option => filterValue && filterValue.includes(option.value)),\n    onChange: handleChange,\n    options: options,\n    isMulti: true,\n    placeholder: \"Filtrer par...\",\n    className: \"filter-select\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n_c2 = SelectColumnFilter;\nconst Table = ({\n  columns,\n  data\n}) => {\n  _s3();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    disableMultiSort: false\n  }, useFilters, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"data-table telephone-line-view-data-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, index) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          className: index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\",\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n};\n_s3(Table, \"BYNTWeoXdryq+6lvDEiS5kf/9Fc=\", false, function () {\n  return [useTable];\n});\n_c3 = Table;\nconst CustomDropdown = ({\n  name,\n  value,\n  options,\n  onChange,\n  placeholder\n}) => {\n  _s4();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleSelect = option => {\n    onChange({\n      target: {\n        name,\n        value: option\n      }\n    });\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: name,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-arrow\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-option\",\n        onClick: () => handleSelect(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s4(CustomDropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c4 = CustomDropdown;\nexport default TelephoneLine;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TelephoneLine\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","useTable","useSortBy","useFilters","Select","jsxDEV","_jsxDEV","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","value","getCustomHeaderName","header","customNames","numero_de_gsm","full_name","code_entite","direction","fonction","operateur","categorie","poste_GSM","replace","TelephoneLine","_s","telephoneLines","setTelephoneLines","options","setOptions","newLine","setNewLine","isEditing","setIsEditing","currentLine","setCurrentLine","history","currentPage","setCurrentPage","pageSize","totalPages","setTotalPages","fetchTelephoneLines","response","get","headers","Authorization","localStorage","getItem","line","Math","ceil","length","error","console","message","alert","fetchDropdownOptions","fields","fetchedOptions","field","uniqueValues","Array","from","Set","filter","concat","handleAddLine","formattedLine","post","addedLine","handleDeleteLine","id","delete","prevLines","handleModifyLine","handleUpdateLine","put","updatedLine","handleChange","e","name","target","prevState","columns","useMemo","Header","accessor","row","i","disableFilters","disableSortBy","Cell","children","className","onClick","original","fileName","_jsxFileName","lineNumber","columnNumber","keys","Filter","SelectColumnFilter","paginatedData","startIndex","endIndex","slice","goBack","index","innerKey","includes","CustomDropdown","onChange","placeholder","type","startsWith","Table","prev","max","disabled","min","_","_c","column","filterValue","setFilter","preFilteredRows","_s2","optionsSet","forEach","add","values","option","label","selectedOptions","undefined","isMulti","_c2","_s3","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","disableMultiSort","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","_c3","_s4","isOpen","setIsOpen","handleSelect","_c4","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelephoneLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelephoneLine.css';\r\n\r\nconst setDefaultValues = (data, defaultValue = '------') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst getCustomHeaderName = (header) => {\r\n  const customNames = {\r\n    numero_de_gsm: 'Numero de GSM',\r\n    full_name: 'Nom et Prénom',\r\n    code_entite: 'Code Entité',\r\n    direction: 'Direction',\r\n    fonction: 'Fonction',\r\n    operateur: 'Opérateur',\r\n    categorie: 'Catégorie',\r\n    poste_GSM: 'Poste GSM',\r\n    // Add more mappings as needed\r\n  };\r\n  return customNames[header] || header.replace(/_/g, ' ');\r\n};\r\n\r\nconst TelephoneLine = () => {\r\n  const [telephoneLines, setTelephoneLines] = useState([]);\r\n  const [options, setOptions] = useState({\r\n    code_entite: [],\r\n    direction: [],\r\n    fonction: [],\r\n    operateur: [],\r\n    categorie: [],\r\n  });\r\n  const [newLine, setNewLine] = useState({\r\n    numero_de_gsm: '',\r\n    full_name: '',\r\n    code_entite: '',\r\n    direction: '',\r\n    fonction: '',\r\n    operateur: '',\r\n    categorie: '',\r\n    poste_GSM: '',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize] = useState(10); // Define the page size\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchTelephoneLines = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = response.data.map(line => setDefaultValues(line));\r\n        setTelephoneLines(data);\r\n        setTotalPages(Math.ceil(data.length / pageSize));\r\n      } catch (error) {\r\n        console.error('Error fetching Telephone Lines:', error.message);\r\n        alert('Failed to fetch telephone lines: ' + error.message);\r\n      }\r\n    };\r\n\r\n    const fetchDropdownOptions = async () => {\r\n      try {\r\n        const fields = ['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'];\r\n        const fetchedOptions = {};\r\n        for (const field of fields) {\r\n          const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          const uniqueValues = Array.from(new Set(response.data.filter(value => value !== '').concat('------')));\r\n          fetchedOptions[field] = uniqueValues;\r\n        }\r\n        setOptions(fetchedOptions);\r\n      } catch (error) {\r\n        console.error('Error fetching dropdown options:', error.message);\r\n        alert('Failed to fetch dropdown options: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchTelephoneLines();\r\n    fetchDropdownOptions();\r\n  }, [currentPage]);\r\n\r\n  const handleAddLine = async () => {\r\n    if (!newLine.numero_de_gsm) {\r\n      alert('The \"numero_de_gsm\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedLine = setDefaultValues(newLine);\r\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedLine = response.data;\r\n      setTelephoneLines([...telephoneLines, addedLine]);\r\n      setNewLine({\r\n        numero_de_gsm: '',\r\n        full_name: '',\r\n        code_entite: '',\r\n        direction: '',\r\n        fonction: '',\r\n        operateur: '',\r\n        categorie: '',\r\n        poste_GSM: '',\r\n      });\r\n      setTotalPages(Math.ceil([...telephoneLines, addedLine].length / pageSize));\r\n    } catch (error) {\r\n      console.error('Error adding Telephone Line:', error.message);\r\n      alert('Failed to add telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLine = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setTelephoneLines((prevLines) => prevLines.filter(line => line.id !== id));\r\n      setTotalPages(Math.ceil((telephoneLines.length - 1) / pageSize));\r\n    } catch (error) {\r\n      console.error('Error deleting Telephone Line:', error.message);\r\n      alert('Failed to delete telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyLine = (line) => {\r\n    setIsEditing(true);\r\n    setCurrentLine(line);\r\n  };\r\n\r\n  const handleUpdateLine = async () => {\r\n    try {\r\n      const formattedLine = setDefaultValues(currentLine);\r\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedLine = response.data;\r\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\r\n      setIsEditing(false);\r\n      setCurrentLine(null);\r\n      setTotalPages(Math.ceil(telephoneLines.length / pageSize));\r\n    } catch (error) {\r\n      console.error('Error updating Telephone Line:', error.message);\r\n      alert('Failed to update telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * pageSize + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      Cell: ({ row }) => (\r\n        <div>\r\n          <button className=\"modify-button\" onClick={() => handleModifyLine(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeleteLine(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    ...Object.keys(newLine).map((key) => ({\r\n      Header: getCustomHeaderName(key),\r\n      accessor: key,\r\n      Filter: SelectColumnFilter,\r\n    })),\r\n  ], [newLine, currentPage, pageSize]);\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    const endIndex = startIndex + pageSize;\r\n    return telephoneLines.slice(startIndex, endIndex);\r\n  }, [telephoneLines, currentPage, pageSize]);\r\n\r\n  return (\r\n    <div className=\"telephone-line-manager\">\r\n      <button className=\"telephone-line-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Line Téléphonique Manager</h1>\r\n      <div className=\"add-line\">\r\n        <table className=\"form-table telephone-line-form-table\">\r\n          <tbody>\r\n            {Object.keys(newLine).map((key, index) => (\r\n              index % 3 === 0 && (\r\n                <tr key={index}>\r\n                  {Object.keys(newLine).slice(index, index + 3).map(innerKey => (\r\n                    <td key={innerKey}>\r\n                      <label className=\"telephone-line-form-label\">{getCustomHeaderName(innerKey)}</label>\r\n                      {['direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? (\r\n                        <CustomDropdown\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          options={options[innerKey] || []}\r\n                          onChange={handleChange}\r\n                          placeholder={`Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type={innerKey.startsWith('date') ? 'date' : 'text'}\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          onChange={handleChange}\r\n                          className=\"input-field\"\r\n                          placeholder={innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {isEditing ? (\r\n          <button className=\"update-button\" onClick={handleUpdateLine}>Update Line</button>\r\n        ) : (\r\n          <button className=\"add-button\" onClick={handleAddLine}>Add Line</button>\r\n        )}\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))} disabled={currentPage === totalPages}>\r\n        Suivant\r\n        </button>\r\n      </div>\r\n      <div className=\"page-number-navigation\">\r\n        {Array.from({ length: totalPages }, (_, i) => (\r\n          <button\r\n            key={i + 1}\r\n            className={`page-number ${currentPage === i + 1 ? 'active' : ''}`}\r\n            onClick={() => setCurrentPage(i + 1)}\r\n          >\r\n            {i + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({ column: { filterValue, setFilter, preFilteredRows, id } }) => {\r\n  const options = React.useMemo(() => {\r\n    const optionsSet = new Set();\r\n    preFilteredRows.forEach(row => {\r\n      optionsSet.add(row.values[id]);\r\n    });\r\n    return [...optionsSet].map(option => ({ value: option, label: option }));\r\n  }, [id, preFilteredRows]);\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n      onChange={handleChange}\r\n      options={options}\r\n      isMulti\r\n      placeholder=\"Filtrer par...\"\r\n      className=\"filter-select\"\r\n    />\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      disableMultiSort: false\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table telephone-line-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (option) => {\r\n    onChange({ target: { name, value: option } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}