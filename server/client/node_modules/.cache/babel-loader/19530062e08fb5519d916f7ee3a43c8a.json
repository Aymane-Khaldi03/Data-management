{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\n// src/components/ExcelEditor.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s();\n  const [sheets, setSheets] = useState([]);\n  const [fileName, setFileName] = useState('');\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    setFileName(file.name);\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await axios.post('/api/excel/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setSheets(response.data.sheets);\n  };\n  const handleCellChange = (sheetIndex, rowIndex, colKey, value) => {\n    const updatedSheets = [...sheets];\n    updatedSheets[sheetIndex].data[rowIndex][colKey] = value;\n    setSheets(updatedSheets);\n  };\n  const downloadExcel = async () => {\n    const response = await axios.post('/api/excel/generate', {\n      sheets\n    }, {\n      responseType: 'arraybuffer'\n    });\n    const blob = new Blob([response.data], {\n      type: response.headers['content-type']\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'modified_' + fileName;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), sheets.map((sheet, sheetIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: sheet.sheetName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(sheet.data[0]).map(colKey => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: colKey\n            }, colKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: sheet.data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(row).map(colKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row[colKey],\n                onChange: e => handleCellChange(sheetIndex, rowIndex, colKey, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this)\n            }, colKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, sheet.sheetName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadExcel,\n      children: \"Download Modified Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelEditor, \"3dl797bwPhNlaMfYetEm31+uNLM=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","axios","XLSX","jsxDEV","_jsxDEV","ExcelEditor","_s","sheets","setSheets","fileName","setFileName","handleFileUpload","e","file","target","files","name","formData","FormData","append","response","post","headers","data","handleCellChange","sheetIndex","rowIndex","colKey","value","updatedSheets","downloadExcel","responseType","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","children","onChange","_jsxFileName","lineNumber","columnNumber","map","sheet","sheetName","Object","keys","row","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["// src/components/ExcelEditor.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ExcelEditor = () => {\r\n  const [sheets, setSheets] = useState([]);\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    setFileName(file.name);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const response = await axios.post('/api/excel/upload', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n\r\n    setSheets(response.data.sheets);\r\n  };\r\n\r\n  const handleCellChange = (sheetIndex, rowIndex, colKey, value) => {\r\n    const updatedSheets = [...sheets];\r\n    updatedSheets[sheetIndex].data[rowIndex][colKey] = value;\r\n    setSheets(updatedSheets);\r\n  };\r\n\r\n  const downloadExcel = async () => {\r\n    const response = await axios.post('/api/excel/generate', { sheets }, { responseType: 'arraybuffer' });\r\n    const blob = new Blob([response.data], { type: response.headers['content-type'] });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'modified_' + fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileUpload} />\r\n      {sheets.map((sheet, sheetIndex) => (\r\n        <div key={sheet.sheetName}>\r\n          <h3>{sheet.sheetName}</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {Object.keys(sheet.data[0]).map(colKey => (\r\n                  <th key={colKey}>{colKey}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sheet.data.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  {Object.keys(row).map(colKey => (\r\n                    <td key={colKey}>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={row[colKey]}\r\n                        onChange={(e) => handleCellChange(sheetIndex, rowIndex, colKey, e.target.value)}\r\n                      />\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n      <button onClick={downloadExcel}>Download Modified Excel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}