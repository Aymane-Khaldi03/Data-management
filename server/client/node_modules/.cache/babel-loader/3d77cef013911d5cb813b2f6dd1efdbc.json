{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelManipulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelManipulation = ({\n  tables\n}) => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState('');\n  const handleExport = () => {\n    const tableData = tables[selectedTable];\n    const worksheet = XLSX.utils.json_to_sheet(tableData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, selectedTable);\n    XLSX.writeFile(workbook, `${selectedTable}.xlsx`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Excel Manipulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"table-select\",\n      children: \"Choose a table to export:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"table-select\",\n      value: selectedTable,\n      onChange: e => setSelectedTable(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), Object.keys(tables).map(table => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: table,\n        children: table\n      }, table, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExport,\n      disabled: !selectedTable,\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelManipulation, \"r0Y03tpm1DcNfv0n/1FEeE7gLF0=\");\n_c = ExcelManipulation;\nexport default ExcelManipulation;\nvar _c;\n$RefreshReg$(_c, \"ExcelManipulation\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","ExcelManipulation","tables","_s","selectedTable","setSelectedTable","handleExport","tableData","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","Object","keys","map","table","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelManipulation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ExcelManipulation = ({ tables }) => {\r\n  const [selectedTable, setSelectedTable] = useState('');\r\n\r\n  const handleExport = () => {\r\n    const tableData = tables[selectedTable];\r\n    const worksheet = XLSX.utils.json_to_sheet(tableData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, selectedTable);\r\n    XLSX.writeFile(workbook, `${selectedTable}.xlsx`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Excel Manipulation</h1>\r\n      <label htmlFor=\"table-select\">Choose a table to export:</label>\r\n      <select\r\n        id=\"table-select\"\r\n        value={selectedTable}\r\n        onChange={(e) => setSelectedTable(e.target.value)}\r\n      >\r\n        <option value=\"\">Select Table</option>\r\n        {Object.keys(tables).map((table) => (\r\n          <option key={table} value={table}>\r\n            {table}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleExport} disabled={!selectedTable}>\r\n        Export to Excel\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelManipulation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAGL,MAAM,CAACE,aAAa,CAAC;IACvC,MAAMI,SAAS,GAAGV,IAAI,CAACW,KAAK,CAACC,aAAa,CAACH,SAAS,CAAC;IACrD,MAAMI,QAAQ,GAAGb,IAAI,CAACW,KAAK,CAACG,QAAQ,CAAC,CAAC;IACtCd,IAAI,CAACW,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAEJ,aAAa,CAAC;IAChEN,IAAI,CAACgB,SAAS,CAACH,QAAQ,EAAE,GAAGP,aAAa,OAAO,CAAC;EACnD,CAAC;EAED,oBACEJ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnB,OAAA;MAAOoB,OAAO,EAAC,cAAc;MAAAL,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/DnB,OAAA;MACEqB,EAAE,EAAC,cAAc;MACjBC,KAAK,EAAElB,aAAc;MACrBmB,QAAQ,EAAGC,CAAC,IAAKnB,gBAAgB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAP,QAAA,gBAElDf,OAAA;QAAQsB,KAAK,EAAC,EAAE;QAAAP,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACrCO,MAAM,CAACC,IAAI,CAACzB,MAAM,CAAC,CAAC0B,GAAG,CAAEC,KAAK,iBAC7B7B,OAAA;QAAoBsB,KAAK,EAAEO,KAAM;QAAAd,QAAA,EAC9Bc;MAAK,GADKA,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTnB,OAAA;MAAQ8B,OAAO,EAAExB,YAAa;MAACyB,QAAQ,EAAE,CAAC3B,aAAc;MAAAW,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCIF,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAkCvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}