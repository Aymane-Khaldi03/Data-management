{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ExcelEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CsvEditor = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [table, setTable] = useState('it_equipments');\n  const [schema, setSchema] = useState([]);\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/schema/${table}`);\n        setSchema(response.data);\n      } catch (error) {\n        console.error('Error fetching schema:', error);\n      }\n    };\n    fetchSchema();\n  }, [table]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      alert('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Error uploading file: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"csv-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSV File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Table:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: table,\n          onChange: e => setTable(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"it_equipments\",\n            children: \"IT Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"telecom_pack\",\n            children: \"Telecom Pack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"telephone_lines\",\n            children: \"Telephone Lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), schema.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Schema for \", table, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: schema.map((field, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: field\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CsvEditor, \"llooNwE51VDA9z39WBI7hsCEZxU=\");\n_c = CsvEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"CsvEditor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CsvEditor","_s","selectedFile","setSelectedFile","table","setTable","schema","setSchema","fetchSchema","response","get","data","error","console","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","post","headers","localStorage","getItem","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","type","accept","onClick","length","map","field","index","_c","ExcelEditor","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ExcelEditor.css';\r\n\r\nconst CsvEditor = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [table, setTable] = useState('it_equipments');\r\n  const [schema, setSchema] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSchema = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/schema/${table}`);\r\n        setSchema(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching schema:', error);\r\n      }\r\n    };\r\n\r\n    fetchSchema();\r\n  }, [table]);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      alert('File uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Error uploading file: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"csv-editor\">\r\n      <h1>CSV File Upload</h1>\r\n      <div>\r\n        <label>\r\n          Select Table:\r\n          <select value={table} onChange={(e) => setTable(e.target.value)}>\r\n            <option value=\"it_equipments\">IT Equipment</option>\r\n            <option value=\"telecom_pack\">Telecom Pack</option>\r\n            <option value=\"telephone_lines\">Telephone Lines</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n      {schema.length > 0 && (\r\n        <div>\r\n          <h3>Schema for {table}:</h3>\r\n          <ul>\r\n            {schema.map((field, index) => (\r\n              <li key={index}>{field}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,eAAe,CAAC;EACnD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,oCAAoCN,KAAK,EAAE,CAAC;QAC7EG,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDJ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCZ,eAAe,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAChB,YAAY,EAAE;MACjBiB,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEpB,YAAY,CAAC;IAErC,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAAC0B,IAAI,CAAC,oCAAoCnB,KAAK,EAAE,EAAEgB,QAAQ,EAAE;QACvFI,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UACrC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC1D;MACF,CAAC,CAAC;MACFP,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CO,KAAK,CAAC,wBAAwB,GAAGP,KAAK,CAACe,OAAO,CAAC;IACjD;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB9B,OAAA;MAAA8B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBlC,OAAA;MAAA8B,QAAA,eACE9B,OAAA;QAAA8B,QAAA,GAAO,eAEL,eAAA9B,OAAA;UAAQmC,KAAK,EAAE9B,KAAM;UAAC+B,QAAQ,EAAGC,CAAC,IAAK/B,QAAQ,CAAC+B,CAAC,CAACpB,MAAM,CAACkB,KAAK,CAAE;UAAAL,QAAA,gBAC9D9B,OAAA;YAAQmC,KAAK,EAAC,eAAe;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnDlC,OAAA;YAAQmC,KAAK,EAAC,cAAc;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClDlC,OAAA;YAAQmC,KAAK,EAAC,iBAAiB;YAAAL,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNlC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QAAOsC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAACH,QAAQ,EAAErB;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DlC,OAAA;QAAQwC,OAAO,EAAErB,YAAa;QAAAW,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACL3B,MAAM,CAACkC,MAAM,GAAG,CAAC,iBAChBzC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QAAA8B,QAAA,GAAI,aAAW,EAACzB,KAAK,EAAC,GAAC;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BlC,OAAA;QAAA8B,QAAA,EACGvB,MAAM,CAACmC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB5C,OAAA;UAAA8B,QAAA,EAAiBa;QAAK,GAAbC,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1EID,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AA4Ef,eAAe6C,WAAW;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}