{"ast":null,"code":"import React,{useState,useContext,createContext,useEffect}from'react';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const auth=useProvideAuth();return/*#__PURE__*/_jsx(AuthContext.Provider,{value:auth,children:children});};export const useAuth=()=>{return useContext(AuthContext);};const useProvideAuth=()=>{const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const history=useHistory();useEffect(()=>{const token=localStorage.getItem('token');if(token){try{const decodedToken=JSON.parse(atob(token.split('.')[1]));const loggedInUser={email:decodedToken.user.email,role:decodedToken.user.role,fullName:decodedToken.user.fullName};setUser(loggedInUser);}catch(error){console.error('Error decoding token:',error);localStorage.removeItem('token');}}setLoading(false);},[]);const login=async(email,password)=>{try{const response=await fetch('http://localhost:5000/api/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(response.ok){const data=await response.json();const decodedToken=JSON.parse(atob(data.token.split('.')[1]));localStorage.setItem('token',data.token);const loggedInUser={email,role:decodedToken.user.role,fullName:decodedToken.user.fullName};setUser(loggedInUser);return loggedInUser;}else{const error=await response.json();throw new Error(error.msg||'Login failed');}}catch(error){throw new Error('Server error: '+error.message);}};const signup=async(fullName,email,password,role)=>{try{const response=await fetch('http://localhost:5000/api/users/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({fullName,email,password,role})});if(response.ok){const data=await response.json();const decodedToken=JSON.parse(atob(data.token.split('.')[1]));localStorage.setItem('token',data.token);setUser({email,role:decodedToken.user.role,fullName:decodedToken.user.fullName});setLoading(false);}else{const error=await response.json();throw new Error(error.msg||'Signup failed');}}catch(error){setLoading(false);throw new Error('Server error: '+error.message);}};const logout=()=>{localStorage.removeItem('token');setUser(null);history.push('/login');};return{user,setUser,login,signup,logout,loading};};","map":{"version":3,"names":["React","useState","useContext","createContext","useEffect","useHistory","jsx","_jsx","AuthContext","AuthProvider","_ref","children","auth","useProvideAuth","Provider","value","useAuth","user","setUser","loading","setLoading","history","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","loggedInUser","email","role","fullName","error","console","removeItem","login","password","response","fetch","method","headers","body","stringify","ok","data","json","setItem","Error","msg","message","signup","logout","push"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/server/client/src/hooks/useAuth.js"],"sourcesContent":["import React, { useState, useContext, createContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const auth = useProvideAuth();\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nconst useProvideAuth = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n        const loggedInUser = { email: decodedToken.user.email, role: decodedToken.user.role, fullName: decodedToken.user.fullName };\r\n        setUser(loggedInUser);\r\n      } catch (error) {\r\n        console.error('Error decoding token:', error);\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\r\n        localStorage.setItem('token', data.token);\r\n        const loggedInUser = { email, role: decodedToken.user.role, fullName: decodedToken.user.fullName };\r\n        setUser(loggedInUser);\r\n        return loggedInUser;\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.msg || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      throw new Error('Server error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const signup = async (fullName, email, password, role) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ fullName, email, password, role }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const decodedToken = JSON.parse(atob(data.token.split('.')[1]));\r\n        localStorage.setItem('token', data.token);\r\n        setUser({ email, role: decodedToken.user.role, fullName: decodedToken.user.fullName });\r\n        setLoading(false);\r\n      } else {\r\n        const error = await response.json();\r\n        throw new Error(error.msg || 'Signup failed');\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      throw new Error('Server error: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    history.push('/login');\r\n  };\r\n\r\n  return {\r\n    user,\r\n    setUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading,\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}