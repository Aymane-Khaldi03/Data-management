{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ITEquipmentView.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters, useGlobalFilter } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa';\nimport './ITEquipmentView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEquipmentView = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [itEquipments, setITEquipments] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general');\n  const [filters, setFilters] = useState({});\n  const [sortBy, setSortBy] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const history = useHistory();\n  useEffect(() => {\n    fetchITEquipments();\n  }, []);\n  useEffect(() => {\n    setCurrentPage(1); // Reset to the first page whenever filters or sort change\n  }, [filters, sortBy]);\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\n    const updatedData = {\n      ...data\n    };\n    for (let key in updatedData) {\n      if (updatedData[key] === '' || updatedData[key] === null) {\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\n          updatedData[key] = null;\n        } else if (key === 'prix_achat') {\n          updatedData[key] = defaultNumber;\n        } else {\n          updatedData[key] = defaultValue;\n        }\n      }\n    }\n    return updatedData;\n  };\n  const fetchITEquipments = async filters => {\n    const queryString = Object.keys(filters).map(key => `${key}=${filters[key].join(',')}`).join('&');\n    try {\n      const response = await axios.get(`http://localhost:5000/api/it-equipments?${queryString}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data && response.data.equipments) {\n        setITEquipments(response.data.equipments);\n        setOriginalData(response.data.equipments);\n        // Update your unique values state here if needed\n      } else {\n        toast.error('Error fetching IT equipments');\n      }\n    } catch (error) {\n      toast.error('Error fetching IT equipments: ' + error.message);\n    }\n  };\n  const applyFilters = (data, filters) => {\n    return data.filter(row => {\n      return Object.entries(filters).every(([id, filterValues]) => {\n        if (!filterValues || filterValues.length === 0) return true;\n        const rowValue = row[id] != null ? String(row[id]).toLowerCase() : '';\n        return filterValues.some(val => rowValue.includes(String(val).toLowerCase()));\n      });\n    });\n  };\n  const applySorting = (data, sortBy) => {\n    if (!sortBy.length) return data;\n    const sortByField = sortBy[0];\n    return data.sort((a, b) => {\n      const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\n      const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\n      if (aValue < bValue) {\n        return sortByField.desc ? 1 : -1;\n      }\n      if (aValue > bValue) {\n        return sortByField.desc ? -1 : 1;\n      }\n      return 0;\n    });\n  };\n  const filteredAndSortedData = useMemo(() => {\n    let data = applyFilters(originalData, filters);\n    data = applySorting(data, sortBy);\n    return data;\n  }, [originalData, filters, sortBy]);\n  const totalPages = useMemo(() => {\n    return Math.ceil(filteredAndSortedData.length / rowsPerPage);\n  }, [filteredAndSortedData, rowsPerPage]);\n  const currentRows = useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return filteredAndSortedData.slice(startIndex, endIndex);\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns.map(col => ({\n      ...col,\n      Filter: props => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n        ...props,\n        originalData: originalData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 26\n      }, this)\n    }))];\n  }, [columns, currentPage, rowsPerPage, originalData]);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page only\n  };\n  const handleDelete = (filterKey, value) => {\n    setFilters(prev => {\n      const updatedFilters = {\n        ...prev\n      };\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\n      if (updatedFilters[filterKey].length === 0) {\n        delete updatedFilters[filterKey];\n      }\n      return updatedFilters;\n    });\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useGlobalFilter, useFilters, useSortBy);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"itequipment-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  const exportToExcel = data => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-back-button\",\n      onClick: () => history.push('/it-equipment'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itequipment-view-title\",\n      children: \"Afficher IT Equipments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-toggle-button\",\n      onClick: () => {\n        if (viewType === 'general') {\n          setViewType('filtered');\n          setITEquipments(filteredAndSortedData);\n        } else {\n          setViewType('general');\n          setITEquipments(originalData);\n        }\n      },\n      children: viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-selected-filters-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), Object.keys(filters).map(filterKey => filters[filterKey].map((filterValue, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"itequipment-view-filter-chip\",\n        children: [`${filterKey}: ${filterValue}`, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(filterKey, filterValue),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 48\n        }, this)]\n      }, `${filterKey}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: currentRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"itequipment-view-export-button\",\n        onClick: () => exportToExcel(filteredAndSortedData),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s2(ITEquipmentView, \"RiDIhXoxGd83KaseQrYPH6pc7G4=\", false, function () {\n  return [useHistory];\n});\n_c = ITEquipmentView;\nconst SelectColumnFilter = ({\n  column: {\n    filterValue = [],\n    setFilter,\n    id\n  },\n  originalData\n}) => {\n  _s3();\n  const [selectedOptions, setSelectedOptions] = useState(() => filterValue.map(val => ({\n    value: val,\n    label: val\n  })));\n  const options = useMemo(() => {\n    const optionsSet = new Set();\n    originalData.forEach(row => {\n      if (row[id] !== null && row[id] !== '------') {\n        optionsSet.add(row[id]);\n      }\n    });\n    return [...optionsSet].map(option => ({\n      value: option,\n      label: option\n    }));\n  }, [id, originalData]);\n  const handleChange = selected => {\n    const values = selected ? selected.map(option => option.value) : [];\n    setSelectedOptions(selected);\n    setFilter(values.length ? values : undefined);\n  };\n  const handleDelete = (filterKey, value) => {\n    const updatedOptions = selectedOptions.filter(option => option.value !== value);\n    const values = updatedOptions.map(option => option.value);\n    setSelectedOptions(updatedOptions);\n    setFilter(values.length ? values : undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOptions,\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"itequipment-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-selected-filters\",\n      children: selectedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"itequipment-view-filter-chip\",\n        children: [option.value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(id, option.value),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 30\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s3(SelectColumnFilter, \"xXicgHQmvDuSs8Ws1n2AL6cZKNw=\");\n_c2 = SelectColumnFilter;\nexport default ITEquipmentView;\nvar _c, _c2;\n$RefreshReg$(_c, \"ITEquipmentView\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useTable","useSortBy","useFilters","useGlobalFilter","Select","useHistory","XLSX","ToastContainer","toast","FaSortUp","FaSortDown","FaSort","jsxDEV","_jsxDEV","ITEquipmentView","_s2","_s","$RefreshSig$","itEquipments","setITEquipments","originalData","setOriginalData","columns","setColumns","viewType","setViewType","filters","setFilters","sortBy","setSortBy","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","history","fetchITEquipments","setDefaultValues","data","defaultValue","defaultNumber","updatedData","key","includes","queryString","Object","keys","map","join","response","get","headers","Authorization","localStorage","getItem","equipments","error","message","applyFilters","filter","row","entries","every","id","filterValues","length","rowValue","String","toLowerCase","some","val","applySorting","sortByField","sort","a","b","aValue","toString","bValue","desc","filteredAndSortedData","totalPages","Math","ceil","currentRows","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","Header","accessor","i","disableFilters","disableSortBy","width","filteredColumns","col","Filter","props","SelectColumnFilter","fileName","_jsxFileName","lineNumber","columnNumber","handlePageNumberClick","pageNumber","handleRowsPerPageChange","event","parseInt","target","value","handleDelete","filterKey","prev","updatedFilters","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","onClick","push","filterValue","index","disabled","onChange","_c","setFilter","_s3","selectedOptions","setSelectedOptions","label","options","optionsSet","Set","forEach","add","option","handleChange","selected","values","undefined","updatedOptions","isMulti","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ITEquipmentView.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters, useGlobalFilter } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa';\r\n\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general');\r\n  const [filters, setFilters] = useState({});\r\n  const [sortBy, setSortBy] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset to the first page whenever filters or sort change\r\n  }, [filters, sortBy]);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\r\n    const updatedData = { ...data };\r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          updatedData[key] = null;\r\n        } else if (key === 'prix_achat') {\r\n          updatedData[key] = defaultNumber;\r\n        } else {\r\n          updatedData[key] = defaultValue;\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };\r\n\r\n  const fetchITEquipments = async (filters) => {\r\n    const queryString = Object.keys(filters)\r\n      .map(key => `${key}=${filters[key].join(',')}`)\r\n      .join('&');\r\n  \r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/it-equipments?${queryString}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n  \r\n      if (response.data && response.data.equipments) {\r\n        setITEquipments(response.data.equipments);\r\n        setOriginalData(response.data.equipments);\r\n        // Update your unique values state here if needed\r\n      } else {\r\n        toast.error('Error fetching IT equipments');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error fetching IT equipments: ' + error.message);\r\n    }\r\n  };\r\n  const applyFilters = (data, filters) => {\r\n    return data.filter(row => {\r\n      return Object.entries(filters).every(([id, filterValues]) => {\r\n        if (!filterValues || filterValues.length === 0) return true;\r\n        const rowValue = row[id] != null ? String(row[id]).toLowerCase() : '';\r\n        return filterValues.some(val => rowValue.includes(String(val).toLowerCase()));\r\n      });\r\n    });\r\n  };\r\n\r\n  const applySorting = (data, sortBy) => {\r\n    if (!sortBy.length) return data;\r\n\r\n    const sortByField = sortBy[0];\r\n    return data.sort((a, b) => {\r\n      const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\r\n      const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\r\n      if (aValue < bValue) {\r\n        return sortByField.desc ? 1 : -1;\r\n      }\r\n      if (aValue > bValue) {\r\n        return sortByField.desc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  const filteredAndSortedData = useMemo(() => {\r\n    let data = applyFilters(originalData, filters);\r\n    data = applySorting(data, sortBy);\r\n    return data;\r\n  }, [originalData, filters, sortBy]);\r\n\r\n  const totalPages = useMemo(() => {\r\n    return Math.ceil(filteredAndSortedData.length / rowsPerPage);\r\n  }, [filteredAndSortedData, rowsPerPage]);\r\n\r\n  const currentRows = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredAndSortedData.slice(startIndex, endIndex);\r\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\r\n\r\n  const columnsWithRowNumber = useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [\r\n      rowNumberColumn,\r\n      ...filteredColumns.map(col => ({\r\n        ...col,\r\n        Filter: props => <SelectColumnFilter {...props} originalData={originalData} />,\r\n      }))\r\n    ];\r\n  }, [columns, currentPage, rowsPerPage, originalData]);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page only\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    setFilters(prev => {\r\n      const updatedFilters = { ...prev };\r\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\r\n      if (updatedFilters[filterKey].length === 0) {\r\n        delete updatedFilters[filterKey];\r\n      }\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useGlobalFilter,\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                {row.cells.map(cell => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <ToastContainer />\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <button\r\n        className=\"itequipment-view-toggle-button\"\r\n        onClick={() => {\r\n          if (viewType === 'general') {\r\n            setViewType('filtered');\r\n            setITEquipments(filteredAndSortedData);\r\n          } else {\r\n            setViewType('general');\r\n            setITEquipments(originalData);\r\n          }\r\n        }}\r\n      >\r\n        {viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'}\r\n      </button>\r\n      <div className=\"itequipment-view-selected-filters-container\">\r\n        <h3>Selected Filters:</h3>\r\n        {Object.keys(filters).map((filterKey) => (\r\n          filters[filterKey].map((filterValue, index) => (\r\n            <span key={`${filterKey}-${index}`} className=\"itequipment-view-filter-chip\">\r\n              {`${filterKey}: ${filterValue}`} <button onClick={() => handleDelete(filterKey, filterValue)}>x</button>\r\n            </span>\r\n          ))\r\n        ))}\r\n      </div>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={currentRows}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(filteredAndSortedData)}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({\r\n  column: { filterValue = [], setFilter, id },\r\n  originalData\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState(() => \r\n    filterValue.map(val => ({ value: val, label: val }))\r\n  );\r\n\r\n  const options = useMemo(() => {\r\n    const optionsSet = new Set();\r\n    originalData.forEach(row => {\r\n      if (row[id] !== null && row[id] !== '------') {\r\n        optionsSet.add(row[id]);\r\n      }\r\n    });\r\n    return [...optionsSet].map(option => ({ value: option, label: option }));\r\n  }, [id, originalData]);\r\n\r\n  const handleChange = (selected) => {\r\n    const values = selected ? selected.map(option => option.value) : [];\r\n    setSelectedOptions(selected);\r\n    setFilter(values.length ? values : undefined);\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    const updatedOptions = selectedOptions.filter(option => option.value !== value);\r\n    const values = updatedOptions.map(option => option.value);\r\n    setSelectedOptions(updatedOptions);\r\n    setFilter(values.length ? values : undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-filter-container\">\r\n      <Select\r\n        value={selectedOptions}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n      {selectedOptions.length > 0 && (\r\n        <div className=\"itequipment-view-selected-filters\">\r\n          {selectedOptions.map((option, index) => (\r\n            <span key={index} className=\"itequipment-view-filter-chip\">\r\n              {option.value} <button onClick={() => handleDelete(id, option.value)}>x</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}