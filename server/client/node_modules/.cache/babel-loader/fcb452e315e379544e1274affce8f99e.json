{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelephoneLine.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters, usePagination } from 'react-table';\nimport Select from 'react-select';\nimport './TelephoneLine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setDefaultValues = (data, defaultValue = '------') => {\n  return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n    if (value === '' || value === null) {\n      return [key, defaultValue];\n    }\n    return [key, value];\n  }));\n};\nconst getCustomHeaderName = header => {\n  const customNames = {\n    numero_de_gsm: 'Numero de GSM',\n    full_name: 'Nom et Prénom',\n    code_entite: 'Code Entité',\n    direction: 'Direction',\n    fonction: 'Fonction',\n    operateur: 'Opérateur',\n    categorie: 'Catégorie',\n    poste_GSM: 'Poste GSM'\n    // Add more mappings as needed\n  };\n  return customNames[header] || header.replace(/_/g, ' ');\n};\nconst TelephoneLine = () => {\n  _s();\n  const [telephoneLines, setTelephoneLines] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [options, setOptions] = useState({});\n  const [filters, setFilters] = useState({});\n  const [newLine, setNewLine] = useState({\n    numero_de_gsm: '',\n    full_name: '',\n    code_entite: '',\n    direction: '',\n    fonction: '',\n    operateur: '',\n    categorie: '',\n    poste_GSM: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const totalPages = Math.ceil(telephoneLines.length / rowsPerPage);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1);\n  };\n  const fetchTelephoneLines = async (appliedFilters = {}) => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/telephone-lines', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        params: appliedFilters\n      });\n      const data = response.data.map(line => setDefaultValues(line));\n      setTelephoneLines(data);\n      setOriginalData(data);\n      const headers = Object.keys(data[0] || {});\n      const uniqueValues = {};\n      headers.forEach(header => {\n        uniqueValues[header] = [...new Set(data.map(item => item[header]))].map(value => ({\n          value,\n          label: value\n        }));\n      });\n      setOptions(uniqueValues);\n    } catch (error) {\n      console.error('Error fetching Telephone Lines:', error.message);\n      alert('Failed to fetch telephone lines: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchTelephoneLines(filters);\n  }, [filters]);\n  const handleAddLine = async () => {\n    if (!newLine.numero_de_gsm) {\n      alert('The \"numero_de_gsm\" field must be filled.');\n      return;\n    }\n    try {\n      const formattedLine = setDefaultValues(newLine);\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const addedLine = response.data;\n      setTelephoneLines([...telephoneLines, addedLine]);\n      setNewLine({\n        numero_de_gsm: '',\n        full_name: '',\n        code_entite: '',\n        direction: '',\n        fonction: '',\n        operateur: '',\n        categorie: '',\n        poste_GSM: ''\n      });\n    } catch (error) {\n      console.error('Error adding Telephone Line:', error.message);\n      alert('Failed to add telephone line: ' + error.message);\n    }\n  };\n  const handleDeleteLine = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTelephoneLines(prevLines => prevLines.filter(line => line.id !== id));\n    } catch (error) {\n      console.error('Error deleting Telephone Line:', error.message);\n      alert('Failed to delete telephone line: ' + error.message);\n    }\n  };\n  const handleModifyLine = line => {\n    setIsEditing(true);\n    setCurrentLine(line);\n  };\n  const handleUpdateLine = async () => {\n    try {\n      const formattedLine = setDefaultValues(currentLine);\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const updatedLine = response.data;\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\n      setIsEditing(false);\n      setCurrentLine(null);\n    } catch (error) {\n      console.error('Error updating Telephone Line:', error.message);\n      alert('Failed to update telephone line: ' + error.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEditing) {\n      setCurrentLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    } else {\n      setNewLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleFilterChange = (field, selectedOptions) => {\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\n    setFilters(prevFilters => {\n      const updatedFilters = {\n        ...prevFilters,\n        [field]: values\n      };\n      fetchTelephoneLines(updatedFilters);\n      return updatedFilters;\n    });\n  };\n  const handleRemoveSelectedValue = (columnId, value) => {\n    const updatedValues = filters[columnId].filter(item => item !== value);\n    const updatedFilters = {\n      ...filters,\n      [columnId]: updatedValues\n    };\n    setFilters(updatedFilters);\n    fetchTelephoneLines(updatedFilters);\n  };\n  const columns = useMemo(() => [{\n    Header: '#',\n    accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n    disableFilters: true,\n    disableSortBy: true,\n    width: 50\n  }, {\n    Header: 'Actions',\n    accessor: 'actions',\n    disableFilters: true,\n    disableSortBy: true,\n    width: 120,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modify-button\",\n        onClick: () => handleModifyLine(row.original),\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDeleteLine(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)\n  }, ...Object.keys(newLine).map(key => ({\n    Header: getCustomHeaderName(key),\n    accessor: key,\n    Filter: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n      column: column,\n      uniqueValues: options[key] || [],\n      placeholder: `Filtrer par ${getCustomHeaderName(key)}`,\n      handleFilterChange: handleFilterChange,\n      handleRemoveSelectedValue: handleRemoveSelectedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)\n  }))], [newLine, currentPage, rowsPerPage, options, filters]);\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return telephoneLines.slice(startIndex, endIndex);\n  }, [telephoneLines, currentPage, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telephone-line-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telephone-line-modify-back-button\",\n      onClick: () => history.goBack(),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Line T\\xE9l\\xE9phonique Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"form-table telephone-line-form-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(newLine).map((key, index) => index % 3 === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(newLine).slice(index, index + 3).map(innerKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"telephone-line-form-label\",\n                children: getCustomHeaderName(innerKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this), ['code_entite', 'direction', 'fonction', 'operateur', 'categorie'].includes(innerKey) ? /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                options: options[innerKey] || [],\n                onChange: handleChange,\n                placeholder: `Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: innerKey.startsWith('date') ? 'date' : 'text',\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                onChange: handleChange,\n                className: \"input-field\",\n                placeholder: innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this)]\n            }, innerKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: handleUpdateLine,\n        children: \"Update Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddLine,\n        children: \"Add Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: paginatedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s(TelephoneLine, \"M0Sojn8gCtYxVtzEwNoNC98V7to=\", false, function () {\n  return [useHistory];\n});\n_c = TelephoneLine;\nconst SelectColumnFilter = ({\n  column: {\n    filterValue = [],\n    setFilter,\n    id\n  },\n  uniqueValues,\n  handleFilterChange,\n  handleRemoveSelectedValue\n}) => {\n  _s2();\n  const [selectedOptions, setSelectedOptions] = useState(() => filterValue.map(val => ({\n    value: val,\n    label: val\n  })));\n  const handleChange = selected => {\n    const values = selected ? selected.map(option => option.value) : [];\n    setSelectedOptions(selected);\n    setFilter(values.length ? values : undefined);\n    handleFilterChange(id, selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOptions,\n      onChange: handleChange,\n      options: uniqueValues,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"filter-select\",\n      classNamePrefix: \"filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-filters\",\n      children: selectedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filter-chip\",\n        children: [option.value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveSelectedValue(id, option.value),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 30\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s2(SelectColumnFilter, \"uFGvJUIYsl99UwEKcDc2426CqxI=\");\n_c2 = SelectColumnFilter;\nconst Table = ({\n  columns,\n  data\n}) => {\n  _s3();\n  const defaultColumn = {\n    minWidth: 30,\n    width: 150,\n    maxWidth: 400\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    state: {\n      pageIndex,\n      pageSize\n    },\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize\n  } = useTable({\n    columns,\n    data,\n    defaultColumn,\n    initialState: {\n      pageIndex: 0\n    }\n  }, useFilters, useSortBy, usePagination);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telephoneline-view-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"telephoneline-view-data-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: column.width\n              },\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: column.canFilter ? column.render('Filter') : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map((row, rowIndex) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            className: rowIndex % 2 === 0 ? 'telephoneline-view-row-even' : 'telephoneline-view-row-odd',\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageOptions.length - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: [10, 25, 50, 100].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n_s3(Table, \"iOI6EXQlAV/OJc0MJFi7VajfRD4=\", false, function () {\n  return [useTable];\n});\n_c3 = Table;\nconst CustomDropdown = ({\n  name,\n  value,\n  options,\n  onChange,\n  placeholder\n}) => {\n  _s4();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleSelect = option => {\n    onChange({\n      target: {\n        name,\n        value: option\n      }\n    });\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: name,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-arrow\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-option\",\n        onClick: () => handleSelect(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n};\n_s4(CustomDropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c4 = CustomDropdown;\nexport default TelephoneLine;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TelephoneLine\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useHistory","useTable","useSortBy","useFilters","usePagination","Select","jsxDEV","_jsxDEV","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","value","getCustomHeaderName","header","customNames","numero_de_gsm","full_name","code_entite","direction","fonction","operateur","categorie","poste_GSM","replace","TelephoneLine","_s","telephoneLines","setTelephoneLines","originalData","setOriginalData","options","setOptions","filters","setFilters","newLine","setNewLine","isEditing","setIsEditing","currentLine","setCurrentLine","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalPages","Math","ceil","length","paginate","pageNumber","handleRowsPerPageChange","event","parseInt","target","fetchTelephoneLines","appliedFilters","response","get","headers","Authorization","localStorage","getItem","params","line","keys","uniqueValues","forEach","Set","item","label","error","console","message","alert","handleAddLine","formattedLine","post","addedLine","handleDeleteLine","id","delete","prevLines","filter","handleModifyLine","handleUpdateLine","put","updatedLine","handleChange","e","name","prevState","handleFilterChange","field","selectedOptions","values","option","prevFilters","updatedFilters","handleRemoveSelectedValue","columnId","updatedValues","columns","Header","accessor","row","i","disableFilters","disableSortBy","width","Cell","className","children","onClick","original","fileName","_jsxFileName","lineNumber","columnNumber","Filter","column","SelectColumnFilter","placeholder","paginatedData","startIndex","endIndex","slice","goBack","index","innerKey","includes","CustomDropdown","onChange","type","startsWith","Table","disabled","_c","filterValue","setFilter","_s2","setSelectedOptions","val","selected","undefined","isMulti","classNamePrefix","_c2","_s3","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","state","pageIndex","pageSize","gotoPage","nextPage","previousPage","setPageSize","initialState","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","Number","_c3","_s4","isOpen","setIsOpen","handleSelect","_c4","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelephoneLine.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters, usePagination } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelephoneLine.css';\r\n\r\nconst setDefaultValues = (data, defaultValue = '------') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst getCustomHeaderName = (header) => {\r\n  const customNames = {\r\n    numero_de_gsm: 'Numero de GSM',\r\n    full_name: 'Nom et Prénom',\r\n    code_entite: 'Code Entité',\r\n    direction: 'Direction',\r\n    fonction: 'Fonction',\r\n    operateur: 'Opérateur',\r\n    categorie: 'Catégorie',\r\n    poste_GSM: 'Poste GSM',\r\n    // Add more mappings as needed\r\n  };\r\n  return customNames[header] || header.replace(/_/g, ' ');\r\n};\r\n\r\nconst TelephoneLine = () => {\r\n  const [telephoneLines, setTelephoneLines] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [options, setOptions] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const [newLine, setNewLine] = useState({\r\n    numero_de_gsm: '',\r\n    full_name: '',\r\n    code_entite: '',\r\n    direction: '',\r\n    fonction: '',\r\n    operateur: '',\r\n    categorie: '',\r\n    poste_GSM: '',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const totalPages = Math.ceil(telephoneLines.length / rowsPerPage);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const fetchTelephoneLines = async (appliedFilters = {}) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/telephone-lines', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        params: appliedFilters,\r\n      });\r\n      const data = response.data.map(line => setDefaultValues(line));\r\n      setTelephoneLines(data);\r\n      setOriginalData(data);\r\n\r\n      const headers = Object.keys(data[0] || {});\r\n      const uniqueValues = {};\r\n\r\n      headers.forEach(header => {\r\n        uniqueValues[header] = [...new Set(data.map(item => item[header]))].map(value => ({ value, label: value }));\r\n      });\r\n\r\n      setOptions(uniqueValues);\r\n    } catch (error) {\r\n      console.error('Error fetching Telephone Lines:', error.message);\r\n      alert('Failed to fetch telephone lines: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTelephoneLines(filters);\r\n  }, [filters]);\r\n\r\n  const handleAddLine = async () => {\r\n    if (!newLine.numero_de_gsm) {\r\n      alert('The \"numero_de_gsm\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedLine = setDefaultValues(newLine);\r\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedLine = response.data;\r\n      setTelephoneLines([...telephoneLines, addedLine]);\r\n      setNewLine({\r\n        numero_de_gsm: '',\r\n        full_name: '',\r\n        code_entite: '',\r\n        direction: '',\r\n        fonction: '',\r\n        operateur: '',\r\n        categorie: '',\r\n        poste_GSM: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding Telephone Line:', error.message);\r\n      alert('Failed to add telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLine = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setTelephoneLines((prevLines) => prevLines.filter(line => line.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting Telephone Line:', error.message);\r\n      alert('Failed to delete telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyLine = (line) => {\r\n    setIsEditing(true);\r\n    setCurrentLine(line);\r\n  };\r\n\r\n  const handleUpdateLine = async () => {\r\n    try {\r\n      const formattedLine = setDefaultValues(currentLine);\r\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedLine = response.data;\r\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\r\n      setIsEditing(false);\r\n      setCurrentLine(null);\r\n    } catch (error) {\r\n      console.error('Error updating Telephone Line:', error.message);\r\n      alert('Failed to update telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (field, selectedOptions) => {\r\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    setFilters(prevFilters => {\r\n      const updatedFilters = { ...prevFilters, [field]: values };\r\n      fetchTelephoneLines(updatedFilters);\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const handleRemoveSelectedValue = (columnId, value) => {\r\n    const updatedValues = filters[columnId].filter(item => item !== value);\r\n    const updatedFilters = { ...filters, [columnId]: updatedValues };\r\n    setFilters(updatedFilters);\r\n    fetchTelephoneLines(updatedFilters);\r\n  };\r\n\r\n  const columns = useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 120,\r\n      Cell: ({ row }) => (\r\n        <div className=\"actions-column\">\r\n          <button className=\"modify-button\" onClick={() => handleModifyLine(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeleteLine(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    ...Object.keys(newLine).map((key) => ({\r\n      Header: getCustomHeaderName(key),\r\n      accessor: key,\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          uniqueValues={options[key] || []}\r\n          placeholder={`Filtrer par ${getCustomHeaderName(key)}`}\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveSelectedValue}\r\n        />\r\n      ),\r\n    })),\r\n  ], [newLine, currentPage, rowsPerPage, options, filters]);\r\n\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return telephoneLines.slice(startIndex, endIndex);\r\n  }, [telephoneLines, currentPage, rowsPerPage]);\r\n\r\n  return (\r\n    <div className=\"telephone-line-manager\">\r\n      <button className=\"telephone-line-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Line Téléphonique Manager</h1>\r\n      <div className=\"add-line\">\r\n        <table className=\"form-table telephone-line-form-table\">\r\n          <tbody>\r\n            {Object.keys(newLine).map((key, index) => (\r\n              index % 3 === 0 && (\r\n                <tr key={index}>\r\n                  {Object.keys(newLine).slice(index, index + 3).map(innerKey => (\r\n                    <td key={innerKey}>\r\n                      <label className=\"telephone-line-form-label\">{getCustomHeaderName(innerKey)}</label>\r\n                      {['code_entite', 'direction', 'fonction', 'operateur', 'categorie'].includes(innerKey) ? (\r\n                        <CustomDropdown\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          options={options[innerKey] || []}\r\n                          onChange={handleChange}\r\n                          placeholder={`Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type={innerKey.startsWith('date') ? 'date' : 'text'}\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          onChange={handleChange}\r\n                          className=\"input-field\"\r\n                          placeholder={innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {isEditing ? (\r\n          <button className=\"update-button\" onClick={handleUpdateLine}>Update Line</button>\r\n        ) : (\r\n          <button className=\"add-button\" onClick={handleAddLine}>Add Line</button>\r\n        )}\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => paginate(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => paginate(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => paginate(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({\r\n  column: { filterValue = [], setFilter, id },\r\n  uniqueValues,\r\n  handleFilterChange,\r\n  handleRemoveSelectedValue\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState(() =>\r\n    filterValue.map(val => ({ value: val, label: val }))\r\n  );\r\n\r\n  const handleChange = (selected) => {\r\n    const values = selected ? selected.map(option => option.value) : [];\r\n    setSelectedOptions(selected);\r\n    setFilter(values.length ? values : undefined);\r\n    handleFilterChange(id, selected);\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <Select\r\n        value={selectedOptions}\r\n        onChange={handleChange}\r\n        options={uniqueValues}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"filter-select\"\r\n        classNamePrefix=\"filter-select\"\r\n      />\r\n      {selectedOptions.length > 0 && (\r\n        <div className=\"selected-filters\">\r\n          {selectedOptions.map((option, index) => (\r\n            <span key={index} className=\"filter-chip\">\r\n              {option.value} <button onClick={() => handleRemoveSelectedValue(id, option.value)}>x</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const defaultColumn = {\r\n    minWidth: 30,\r\n    width: 150,\r\n    maxWidth: 400,\r\n  };\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    state: { pageIndex, pageSize },\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <div className=\"telephoneline-view-table-container\">\r\n      <table {...getTableProps()} className=\"telephoneline-view-data-table\">\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  <div style={{ width: column.width }}>\r\n                    {column.render('Header')}\r\n                    <span>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <FaSortDown />\r\n                        ) : (\r\n                          <FaSortUp />\r\n                        )\r\n                      ) : (\r\n                        <FaSort />\r\n                      )}\r\n                    </span>\r\n                    <div>\r\n                      {column.canFilter ? column.render('Filter') : null}\r\n                    </div>\r\n                  </div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, rowIndex) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'telephoneline-view-row-even' : 'telephoneline-view-row-odd'}>\r\n                {row.cells.map(cell => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>{'Précédent'}</button>\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>{'Suivant'}</button>\r\n        <button onClick={() => gotoPage(pageOptions.length - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 25, 50, 100].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (option) => {\r\n    onChange({ target: { name, value: option } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n              {option}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}