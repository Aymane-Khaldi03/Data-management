{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ITEquipmentView.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\n\nimport './ITEquipmentView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEquipmentView = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  useEffect(() => {\n    toast.configure();\n  }, []);\n  const [itEquipments, setITEquipments] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\n  const history = useHistory();\n\n  ////setting the current page/rows and totatl pages \n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    setTotalPages(Math.ceil(itEquipments.length / rowsPerPage));\n  }, [itEquipments.length, rowsPerPage]);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page only\n  };\n  const paginatedData = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return itEquipments.slice(startIndex, endIndex);\n  }, [itEquipments, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = React.useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns.map(col => ({\n      ...col,\n      Filter: col.Filter || SelectColumnFilter // Ensure the Filter component is applied\n    }))];\n  }, [columns, currentPage, rowsPerPage]);\n  ////\n\n  // Define measureTextWidth function\n  const measureTextWidth = (text, font = '12px Arial') => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = font;\n    return context.measureText(text).width;\n  };\n  const fetchITEquipments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data && Array.isArray(response.data.equipments)) {\n        const data = response.data.equipments.map(({\n          createdAt,\n          updatedAt,\n          id,\n          ...rest\n        }) => setDefaultValues(rest));\n        console.log('Fetched data from server:', data.length);\n        setITEquipments(data);\n        setOriginalData(data);\n        const headers = Object.keys(data[0] || {});\n        const maxWidths = headers.reduce((acc, header) => {\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\n          const maxLength = Math.max(headerWidth, ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : '')));\n          acc[header] = maxLength;\n          return acc;\n        }, {});\n        const cols = [{\n          Header: '#',\n          accessor: (row, i) => i + 1,\n          disableFilters: true,\n          disableSortBy: true,\n          width: 50\n        }, ...headers.map(header => ({\n          Header: header.replace(/_/g, ' '),\n          accessor: header,\n          Filter: SelectColumnFilter,\n          width: maxWidths[header] + 20\n        }))];\n        setColumns(cols);\n      } else {\n        console.error('Format de données de réponse inattendu :', response.data);\n        toast.error('Erreur lors de la récupération des équipements informatiques : format de réponse inattendu');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des équipements informatiques :', error);\n      toast.error('Erreur lors de la récupération des équipements informatiques : ' + error.message);\n    }\n  };\n  const filteredAndSortedData = React.useMemo(() => {\n    let filteredData = itEquipments;\n    Object.keys(filters).forEach(id => {\n      if (filters[id] && filters[id].length > 0) {\n        filteredData = filteredData.filter(row => {\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\n          const filterValue = Array.isArray(filters[id]) ? filters[id][0].value : filters[id].value;\n          if (filterValue != null) {\n            return rowValue.includes(filterValue.toString().toLowerCase());\n          }\n          return true;\n        });\n      }\n    });\n    if (sortBy.length) {\n      const sortByField = sortBy[0];\n      filteredData = filteredData.sort((a, b) => {\n        const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\n        const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\n        if (aValue < bValue) {\n          return sortByField.desc ? 1 : -1;\n        }\n        if (aValue > bValue) {\n          return sortByField.desc ? -1 : 1;\n        }\n        return 0;\n      });\n    }\n    return filteredData;\n  }, [itEquipments, filters, sortBy]);\n  const currentRows = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return filteredAndSortedData.slice(startIndex, endIndex);\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\n    const updatedData = {\n      ...data\n    };\n    for (let key in updatedData) {\n      if (updatedData[key] === '' || updatedData[key] === null) {\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\n          updatedData[key] = null;\n        } else if (key === 'prix_achat') {\n          updatedData[key] = defaultNumber;\n        } else {\n          updatedData[key] = defaultValue;\n        }\n      }\n    }\n    return updatedData;\n  };\n  const filterData = data => {\n    return data.filter(item => {\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\n      return requiredFields.every(field => item[field] && item[field] !== '------');\n    });\n  };\n  const SelectColumnFilter = ({\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  }) => {\n    _s();\n    const options = React.useMemo(() => {\n      const optionsSet = new Set();\n      preFilteredRows.forEach(row => {\n        optionsSet.add(row.values[id]);\n      });\n      return [...optionsSet].map(option => ({\n        value: option,\n        label: option\n      }));\n    }, [id, preFilteredRows]);\n    const handleChange = selectedOptions => {\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n    };\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: options.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"itequipment-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n  const exportToExcel = data => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s2();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    const handleFilterClick = event => {\n      event.stopPropagation();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"itequipment-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: handleFilterClick,\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-back-button\",\n      onClick: () => history.push('/it-equipment'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itequipment-view-title\",\n      children: \"Afficher IT Equipments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-toggle-button\",\n      onClick: () => {\n        if (viewType === 'general') {\n          setViewType('filtered');\n          const filtered = filterData(originalData);\n          console.log('Filtered data to display:', filtered); // Additional debug logging\n          setITEquipments(filtered);\n        } else {\n          setViewType('general');\n          setITEquipments(originalData); // Restore the original data\n        }\n      },\n      children: viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: paginatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"itequipment-view-export-button\",\n        onClick: () => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments)),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s3(ITEquipmentView, \"5MNZ6EBsd0BZzMoXHlA27e6l+Cw=\", false, function () {\n  return [useHistory];\n});\n_c = ITEquipmentView;\nexport default ITEquipmentView;\nvar _c;\n$RefreshReg$(_c, \"ITEquipmentView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","ToastContainer","toast","confirmAlert","FaSortUp","FaSortDown","FaSort","jsxDEV","_jsxDEV","ITEquipmentView","_s3","_s","$RefreshSig$","_s2","configure","itEquipments","setITEquipments","originalData","setOriginalData","columns","setColumns","viewType","setViewType","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalPages","setTotalPages","Math","ceil","length","handlePageNumberClick","pageNumber","handleRowsPerPageChange","event","parseInt","target","value","paginatedData","useMemo","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","Header","id","accessor","row","i","disableFilters","disableSortBy","width","filteredColumns","filter","col","map","Filter","SelectColumnFilter","measureTextWidth","text","font","canvas","document","createElement","context","getContext","measureText","fetchITEquipments","response","get","headers","Authorization","localStorage","getItem","data","Array","isArray","equipments","createdAt","updatedAt","rest","setDefaultValues","console","log","Object","keys","maxWidths","reduce","acc","header","headerWidth","replace","maxLength","max","toString","cols","error","message","filteredAndSortedData","filteredData","filters","forEach","rowValue","toLowerCase","filterValue","includes","sortBy","sortByField","sort","a","b","aValue","bValue","desc","currentRows","defaultValue","defaultNumber","updatedData","key","filterData","item","requiredFields","every","field","column","setFilter","preFilteredRows","options","optionsSet","Set","add","values","option","label","handleChange","selectedOptions","undefined","onChange","isMulti","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleFilterClick","stopPropagation","children","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","onClick","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","push","filtered","disabled","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ITEquipmentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\r\n\r\n\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  useEffect(() => {\r\n    toast.configure();\r\n  }, []);\r\n\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\r\n  const history = useHistory();\r\n\r\n  ////setting the current page/rows and totatl pages \r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(itEquipments.length / rowsPerPage));\r\n  }, [itEquipments.length, rowsPerPage]);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page only\r\n  };\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return itEquipments.slice(startIndex, endIndex);\r\n  }, [itEquipments, currentPage, rowsPerPage]);\r\n\r\n\r\n\r\n\r\n  const columnsWithRowNumber = React.useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [rowNumberColumn, ...filteredColumns.map(col => ({\r\n      ...col,\r\n      Filter: col.Filter || SelectColumnFilter, // Ensure the Filter component is applied\r\n    }))];\r\n  }, [columns, currentPage, rowsPerPage]);\r\n  ////\r\n\r\n\r\n  // Define measureTextWidth function\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n\r\n  const fetchITEquipments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.data && Array.isArray(response.data.equipments)) {\r\n        const data = response.data.equipments.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n        console.log('Fetched data from server:', data.length);\r\n        setITEquipments(data);\r\n        setOriginalData(data);\r\n\r\n        const headers = Object.keys(data[0] || {});\r\n        const maxWidths = headers.reduce((acc, header) => {\r\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n          const maxLength = Math.max(\r\n            headerWidth,\r\n            ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n          );\r\n          acc[header] = maxLength;\r\n          return acc;\r\n        }, {});\r\n\r\n        const cols = [\r\n          {\r\n            Header: '#',\r\n            accessor: (row, i) => i + 1,\r\n            disableFilters: true,\r\n            disableSortBy: true,\r\n            width: 50,\r\n          },\r\n          ...headers.map((header) => ({\r\n            Header: header.replace(/_/g, ' '),\r\n            accessor: header,\r\n            Filter: SelectColumnFilter,\r\n            width: maxWidths[header] + 20,\r\n          })),\r\n        ];\r\n\r\n        setColumns(cols);\r\n      } else {\r\n        console.error('Format de données de réponse inattendu :', response.data);\r\n        toast.error('Erreur lors de la récupération des équipements informatiques : format de réponse inattendu');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur lors de la récupération des équipements informatiques :', error);\r\n      toast.error('Erreur lors de la récupération des équipements informatiques : ' + error.message);\r\n    }\r\n  };\r\n\r\n  const filteredAndSortedData = React.useMemo(() => {\r\n    let filteredData = itEquipments;\r\n  \r\n    Object.keys(filters).forEach(id => {\r\n      if (filters[id] && filters[id].length > 0) {\r\n        filteredData = filteredData.filter(row => {\r\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\r\n          const filterValue = Array.isArray(filters[id]) ? filters[id][0].value : filters[id].value;\r\n  \r\n          if (filterValue != null) {\r\n            return rowValue.includes(filterValue.toString().toLowerCase());\r\n          }\r\n          return true;\r\n        });\r\n      }\r\n    });\r\n  \r\n    if (sortBy.length) {\r\n      const sortByField = sortBy[0];\r\n      filteredData = filteredData.sort((a, b) => {\r\n        const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\r\n        const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\r\n        if (aValue < bValue) {\r\n          return sortByField.desc ? 1 : -1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return sortByField.desc ? -1 : 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n  \r\n    return filteredData;\r\n  }, [itEquipments, filters, sortBy]);\r\n  \r\n  const currentRows = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredAndSortedData.slice(startIndex, endIndex);\r\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\r\n\r\n\r\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\r\n    const updatedData = { ...data };\r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          updatedData[key] = null;\r\n        } else if (key === 'prix_achat') {\r\n          updatedData[key] = defaultNumber;\r\n        } else {\r\n          updatedData[key] = defaultValue;\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };\r\n\r\n  const filterData = (data) => {\r\n    return data.filter(item => {\r\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\r\n      return requiredFields.every(field => item[field] && item[field] !== '------');\r\n    });\r\n  };\r\n\r\n  const SelectColumnFilter = ({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) => {\r\n    const options = React.useMemo(() => {\r\n      const optionsSet = new Set();\r\n      preFilteredRows.forEach(row => {\r\n        optionsSet.add(row.values[id]);\r\n      });\r\n      return [...optionsSet].map(option => ({ value: option, label: option }));\r\n    }, [id, preFilteredRows]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    const handleFilterClick = (event) => {\r\n      event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div onClick={handleFilterClick}>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <ToastContainer />\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <button\r\n        className=\"itequipment-view-toggle-button\"\r\n        onClick={() => {\r\n          if (viewType === 'general') {\r\n            setViewType('filtered');\r\n            const filtered = filterData(originalData);\r\n            console.log('Filtered data to display:', filtered); // Additional debug logging\r\n            setITEquipments(filtered);\r\n          } else {\r\n            setViewType('general');\r\n            setITEquipments(originalData); // Restore the original data\r\n          }\r\n        }}\r\n      >\r\n        {viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'}\r\n      </button>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={paginatedData}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments))}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,aAAa;AAC7D,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,OAAO,iDAAiD;AACxD,SAASC,QAAQ,EAAEC,UAAU,EAAEC,MAAM,QAAQ,gBAAgB,CAAC,CAAC;;AAG/D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EAC5BnB,SAAS,CAAC,MAAM;IACdS,KAAK,CAACY,SAAS,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACrD,MAAM+B,OAAO,GAAGxB,UAAU,CAAC,CAAC;;EAE5B;EACA,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACdoC,aAAa,CAACC,IAAI,CAACC,IAAI,CAAChB,YAAY,CAACiB,MAAM,GAAGN,WAAW,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACX,YAAY,CAACiB,MAAM,EAAEN,WAAW,CAAC,CAAC;EAEtC,MAAMO,qBAAqB,GAAIC,UAAU,IAAK;IAC5CT,cAAc,CAACS,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACzCT,cAAc,CAACU,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChDd,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,MAAMe,aAAa,GAAGjD,KAAK,CAACkD,OAAO,CAAC,MAAM;IACxC,MAAMC,UAAU,GAAG,CAAClB,WAAW,GAAG,CAAC,IAAIE,WAAW;IAClD,MAAMiB,QAAQ,GAAGD,UAAU,GAAGhB,WAAW;IACzC,OAAOX,YAAY,CAAC6B,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EACjD,CAAC,EAAE,CAAC5B,YAAY,EAAES,WAAW,EAAEE,WAAW,CAAC,CAAC;EAK5C,MAAMmB,oBAAoB,GAAGtD,KAAK,CAACkD,OAAO,CAAC,MAAM;IAC/C,MAAMK,eAAe,GAAG;MACtBC,MAAM,EAAE,GAAG;MACXC,EAAE,EAAE,WAAW;MACfC,QAAQ,EAAEA,CAACC,GAAG,EAAEC,CAAC,KAAK,CAAC3B,WAAW,GAAG,CAAC,IAAIE,WAAW,GAAGyB,CAAC,GAAG,CAAC;MAC7DC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE,IAAI;MACnBC,KAAK,EAAE;IACT,CAAC;IAED,MAAMC,eAAe,GAAGpC,OAAO,CAACqC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACV,MAAM,KAAK,GAAG,CAAC;IACjE,OAAO,CAACD,eAAe,EAAE,GAAGS,eAAe,CAACG,GAAG,CAACD,GAAG,KAAK;MACtD,GAAGA,GAAG;MACNE,MAAM,EAAEF,GAAG,CAACE,MAAM,IAAIC,kBAAkB,CAAE;IAC5C,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,EAAE,CAACzC,OAAO,EAAEK,WAAW,EAAEE,WAAW,CAAC,CAAC;EACvC;;EAGA;EACA,MAAMmC,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,IAAI,GAAG,YAAY,KAAK;IACtD,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACJ,IAAI,GAAGA,IAAI;IACnB,OAAOI,OAAO,CAACE,WAAW,CAACP,IAAI,CAAC,CAACR,KAAK;EACxC,CAAC;EAGD,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7E,KAAK,CAAC8E,GAAG,CAAC,yCAAyC,EAAE;QAC1EC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QACxD;MACF,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACM,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACR,QAAQ,CAACM,IAAI,CAACG,UAAU,CAAC,EAAE;QAC5D,MAAMH,IAAI,GAAGN,QAAQ,CAACM,IAAI,CAACG,UAAU,CAACtB,GAAG,CAAC,CAAC;UAAEuB,SAAS;UAAEC,SAAS;UAAElC,EAAE;UAAE,GAAGmC;QAAK,CAAC,KAAKC,gBAAgB,CAACD,IAAI,CAAC,CAAC;QAC5GE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAET,IAAI,CAAC7C,MAAM,CAAC;QACrDhB,eAAe,CAAC6D,IAAI,CAAC;QACrB3D,eAAe,CAAC2D,IAAI,CAAC;QAErB,MAAMJ,OAAO,GAAGc,MAAM,CAACC,IAAI,CAACX,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1C,MAAMY,SAAS,GAAGhB,OAAO,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;UAChD,MAAMC,WAAW,GAAGhC,gBAAgB,CAAC+B,MAAM,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;UAC/D,MAAMC,SAAS,GAAGjE,IAAI,CAACkE,GAAG,CACxBH,WAAW,EACX,GAAGhB,IAAI,CAACnB,GAAG,CAACR,GAAG,IAAIW,gBAAgB,CAACX,GAAG,CAAC0C,MAAM,CAAC,GAAG1C,GAAG,CAAC0C,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAChF,CAAC;UACDN,GAAG,CAACC,MAAM,CAAC,GAAGG,SAAS;UACvB,OAAOJ,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,MAAMO,IAAI,GAAG,CACX;UACEnD,MAAM,EAAE,GAAG;UACXE,QAAQ,EAAEA,CAACC,GAAG,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC;UAC3BC,cAAc,EAAE,IAAI;UACpBC,aAAa,EAAE,IAAI;UACnBC,KAAK,EAAE;QACT,CAAC,EACD,GAAGmB,OAAO,CAACf,GAAG,CAAEkC,MAAM,KAAM;UAC1B7C,MAAM,EAAE6C,MAAM,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;UACjC7C,QAAQ,EAAE2C,MAAM;UAChBjC,MAAM,EAAEC,kBAAkB;UAC1BN,KAAK,EAAEmC,SAAS,CAACG,MAAM,CAAC,GAAG;QAC7B,CAAC,CAAC,CAAC,CACJ;QAEDxE,UAAU,CAAC8E,IAAI,CAAC;MAClB,CAAC,MAAM;QACLb,OAAO,CAACc,KAAK,CAAC,0CAA0C,EAAE5B,QAAQ,CAACM,IAAI,CAAC;QACxE3E,KAAK,CAACiG,KAAK,CAAC,4FAA4F,CAAC;MAC3G;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,gEAAgE,EAAEA,KAAK,CAAC;MACtFjG,KAAK,CAACiG,KAAK,CAAC,iEAAiE,GAAGA,KAAK,CAACC,OAAO,CAAC;IAChG;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAG9G,KAAK,CAACkD,OAAO,CAAC,MAAM;IAChD,IAAI6D,YAAY,GAAGvF,YAAY;IAE/BwE,MAAM,CAACC,IAAI,CAACe,OAAO,CAAC,CAACC,OAAO,CAACxD,EAAE,IAAI;MACjC,IAAIuD,OAAO,CAACvD,EAAE,CAAC,IAAIuD,OAAO,CAACvD,EAAE,CAAC,CAAChB,MAAM,GAAG,CAAC,EAAE;QACzCsE,YAAY,GAAGA,YAAY,CAAC9C,MAAM,CAACN,GAAG,IAAI;UACxC,MAAMuD,QAAQ,GAAGvD,GAAG,CAACF,EAAE,CAAC,IAAI,IAAI,GAAGE,GAAG,CAACF,EAAE,CAAC,CAACiD,QAAQ,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC,GAAG,EAAE;UACxE,MAAMC,WAAW,GAAG7B,KAAK,CAACC,OAAO,CAACwB,OAAO,CAACvD,EAAE,CAAC,CAAC,GAAGuD,OAAO,CAACvD,EAAE,CAAC,CAAC,CAAC,CAAC,CAACT,KAAK,GAAGgE,OAAO,CAACvD,EAAE,CAAC,CAACT,KAAK;UAEzF,IAAIoE,WAAW,IAAI,IAAI,EAAE;YACvB,OAAOF,QAAQ,CAACG,QAAQ,CAACD,WAAW,CAACV,QAAQ,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC,CAAC;UAChE;UACA,OAAO,IAAI;QACb,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,IAAIG,MAAM,CAAC7E,MAAM,EAAE;MACjB,MAAM8E,WAAW,GAAGD,MAAM,CAAC,CAAC,CAAC;MAC7BP,YAAY,GAAGA,YAAY,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACzC,MAAMC,MAAM,GAAGF,CAAC,CAACF,WAAW,CAAC9D,EAAE,CAAC,IAAI,IAAI,GAAGgE,CAAC,CAACF,WAAW,CAAC9D,EAAE,CAAC,CAACiD,QAAQ,CAAC,CAAC,GAAG,EAAE;QAC5E,MAAMkB,MAAM,GAAGF,CAAC,CAACH,WAAW,CAAC9D,EAAE,CAAC,IAAI,IAAI,GAAGiE,CAAC,CAACH,WAAW,CAAC9D,EAAE,CAAC,CAACiD,QAAQ,CAAC,CAAC,GAAG,EAAE;QAC5E,IAAIiB,MAAM,GAAGC,MAAM,EAAE;UACnB,OAAOL,WAAW,CAACM,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;QAClC;QACA,IAAIF,MAAM,GAAGC,MAAM,EAAE;UACnB,OAAOL,WAAW,CAACM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;QAClC;QACA,OAAO,CAAC;MACV,CAAC,CAAC;IACJ;IAEA,OAAOd,YAAY;EACrB,CAAC,EAAE,CAACvF,YAAY,EAAEwF,OAAO,EAAEM,MAAM,CAAC,CAAC;EAEnC,MAAMQ,WAAW,GAAG9H,KAAK,CAACkD,OAAO,CAAC,MAAM;IACtC,MAAMC,UAAU,GAAG,CAAClB,WAAW,GAAG,CAAC,IAAIE,WAAW;IAClD,MAAMiB,QAAQ,GAAGD,UAAU,GAAGhB,WAAW;IACzC,OAAO2E,qBAAqB,CAACzD,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EAC1D,CAAC,EAAE,CAAC0D,qBAAqB,EAAE7E,WAAW,EAAEE,WAAW,CAAC,CAAC;EAGrD,MAAM0D,gBAAgB,GAAGA,CAACP,IAAI,EAAEyC,YAAY,GAAG,QAAQ,EAAEC,aAAa,GAAG,CAAC,KAAK;IAC7E,MAAMC,WAAW,GAAG;MAAE,GAAG3C;IAAK,CAAC;IAC/B,KAAK,IAAI4C,GAAG,IAAID,WAAW,EAAE;MAC3B,IAAIA,WAAW,CAACC,GAAG,CAAC,KAAK,EAAE,IAAID,WAAW,CAACC,GAAG,CAAC,KAAK,IAAI,EAAE;QACxD,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAACb,QAAQ,CAACa,GAAG,CAAC,EAAE;UACtGD,WAAW,CAACC,GAAG,CAAC,GAAG,IAAI;QACzB,CAAC,MAAM,IAAIA,GAAG,KAAK,YAAY,EAAE;UAC/BD,WAAW,CAACC,GAAG,CAAC,GAAGF,aAAa;QAClC,CAAC,MAAM;UACLC,WAAW,CAACC,GAAG,CAAC,GAAGH,YAAY;QACjC;MACF;IACF;IACA,OAAOE,WAAW;EACpB,CAAC;EAED,MAAME,UAAU,GAAI7C,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACrB,MAAM,CAACmE,IAAI,IAAI;MACzB,MAAMC,cAAc,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,kBAAkB,CAAC;MACrF,OAAOA,cAAc,CAACC,KAAK,CAACC,KAAK,IAAIH,IAAI,CAACG,KAAK,CAAC,IAAIH,IAAI,CAACG,KAAK,CAAC,KAAK,QAAQ,CAAC;IAC/E,CAAC,CAAC;EACJ,CAAC;EAED,MAAMlE,kBAAkB,GAAGA,CAAC;IAC1BmE,MAAM,EAAE;MAAEpB,WAAW;MAAEqB,SAAS;MAAEC,eAAe;MAAEjF;IAAG;EACxD,CAAC,KAAK;IAAArC,EAAA;IACJ,MAAMuH,OAAO,GAAG3I,KAAK,CAACkD,OAAO,CAAC,MAAM;MAClC,MAAM0F,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;MAC5BH,eAAe,CAACzB,OAAO,CAACtD,GAAG,IAAI;QAC7BiF,UAAU,CAACE,GAAG,CAACnF,GAAG,CAACoF,MAAM,CAACtF,EAAE,CAAC,CAAC;MAChC,CAAC,CAAC;MACF,OAAO,CAAC,GAAGmF,UAAU,CAAC,CAACzE,GAAG,CAAC6E,MAAM,KAAK;QAAEhG,KAAK,EAAEgG,MAAM;QAAEC,KAAK,EAAED;MAAO,CAAC,CAAC,CAAC;IAC1E,CAAC,EAAE,CAACvF,EAAE,EAAEiF,eAAe,CAAC,CAAC;IAEzB,MAAMQ,YAAY,GAAIC,eAAe,IAAK;MACxCV,SAAS,CAACU,eAAe,GAAGA,eAAe,CAAChF,GAAG,CAAC6E,MAAM,IAAIA,MAAM,CAAChG,KAAK,CAAC,GAAGoG,SAAS,CAAC;IACtF,CAAC;IAED,oBACEnI,OAAA,CAACV,MAAM;MACLyC,KAAK,EAAE2F,OAAO,CAAC1E,MAAM,CAAC+E,MAAM,IAAI5B,WAAW,IAAIA,WAAW,CAACC,QAAQ,CAAC2B,MAAM,CAAChG,KAAK,CAAC,CAAE;MACnFqG,QAAQ,EAAEH,YAAa;MACvBP,OAAO,EAAEA,OAAQ;MACjBW,OAAO;MACPC,WAAW,EAAE,cAAe;MAC5BC,SAAS,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEN,CAAC;EAACxI,EAAA,CAzBIiD,kBAAkB;EA2BxB,MAAMwF,aAAa,GAAIvE,IAAI,IAAK;IAC9B,MAAMwE,EAAE,GAAGrJ,IAAI,CAACsJ,KAAK,CAACC,aAAa,CAAC1E,IAAI,CAAC;IACzC,MAAM2E,EAAE,GAAGxJ,IAAI,CAACsJ,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChCzJ,IAAI,CAACsJ,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,cAAc,CAAC;IACpDrJ,IAAI,CAAC2J,SAAS,CAACH,EAAE,EAAE,mBAAmB,CAAC;EACzC,CAAC;EAED,MAAMI,KAAK,GAAGA,CAAC;IAAEzI,OAAO;IAAE0D;EAAK,CAAC,KAAK;IAAAhE,GAAA;IACnC,MAAMgJ,aAAa,GAAG;MACpBC,QAAQ,EAAE,EAAE;MACZxG,KAAK,EAAE,GAAG;MACVyG,QAAQ,EAAE;IACZ,CAAC;IAED,MAAM;MACJC,aAAa;MACbC,iBAAiB;MACjBC,YAAY;MACZC,IAAI;MACJC;IACF,CAAC,GAAGzK,QAAQ,CACV;MACEwB,OAAO;MACP0D,IAAI;MACJgF;IACF,CAAC,EACDhK,UAAU,EACVD,SACF,CAAC;IAED,MAAMyK,iBAAiB,GAAIjI,KAAK,IAAK;MACnCA,KAAK,CAACkI,eAAe,CAAC,CAAC;IACzB,CAAC;IAED,oBACE9J,OAAA;MAAKuI,SAAS,EAAC,kCAAkC;MAAAwB,QAAA,eAC/C/J,OAAA;QAAA,GAAWwJ,aAAa,CAAC,CAAC;QAAEjB,SAAS,EAAC,6BAA6B;QAAAwB,QAAA,gBACjE/J,OAAA;UAAA+J,QAAA,EACGL,YAAY,CAACxG,GAAG,CAAC8G,WAAW,iBAC3BhK,OAAA;YAAA,GAAQgK,WAAW,CAACC,mBAAmB,CAAC,CAAC;YAAAF,QAAA,EACtCC,WAAW,CAAC/F,OAAO,CAACf,GAAG,CAACqE,MAAM,iBAC7BvH,OAAA;cAAA,GAAQuH,MAAM,CAAC2C,cAAc,CAAC3C,MAAM,CAAC4C,oBAAoB,CAAC,CAAC,CAAC;cAAAJ,QAAA,eAC1D/J,OAAA;gBAAKoK,KAAK,EAAE;kBAAEtH,KAAK,EAAEyE,MAAM,CAACzE;gBAAM,CAAE;gBAAAiH,QAAA,GACjCxC,MAAM,CAAC8C,MAAM,CAAC,QAAQ,CAAC,eACxBrK,OAAA;kBAAA+J,QAAA,EACGxC,MAAM,CAAC+C,QAAQ,GACd/C,MAAM,CAACgD,YAAY,gBACjBvK,OAAA,CAACH,UAAU;oBAAA2I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gBAEd3I,OAAA,CAACJ,QAAQ;oBAAA4I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CACZ,gBAED3I,OAAA,CAACF,MAAM;oBAAA0I,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBACV;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC,eACP3I,OAAA;kBAAKwK,OAAO,EAAEX,iBAAkB;kBAAAE,QAAA,EAC7BxC,MAAM,CAACkD,SAAS,GAAGlD,MAAM,CAAC8C,MAAM,CAAC,QAAQ,CAAC,GAAG;gBAAI;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACR3I,OAAA;UAAA,GAAWyJ,iBAAiB,CAAC,CAAC;UAAAM,QAAA,EAC3BJ,IAAI,CAACzG,GAAG,CAAC,CAACR,GAAG,EAAEgI,QAAQ,KAAK;YAC3Bd,UAAU,CAAClH,GAAG,CAAC;YACf,oBACE1C,OAAA;cAAA,GAAQ0C,GAAG,CAACiI,WAAW,CAAC,CAAC;cAAEpC,SAAS,EAAEmC,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,2BAA2B,GAAG,0BAA2B;cAAAX,QAAA,EACjHrH,GAAG,CAACkI,KAAK,CAAC1H,GAAG,CAAC2H,IAAI,iBACjB7K,OAAA;gBAAA,GAAQ6K,IAAI,CAACC,YAAY,CAAC,CAAC;gBAAAf,QAAA,EAAGc,IAAI,CAACR,MAAM,CAAC,MAAM;cAAC;gBAAA7B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACvD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV,CAAC;EAACtI,GAAA,CAxEI+I,KAAK;IAAA,QAaLjK,QAAQ;EAAA;EA4Dd,oBACEa,OAAA;IAAKuI,SAAS,EAAC,4BAA4B;IAAAwB,QAAA,gBACzC/J,OAAA,CAACP,cAAc;MAAA+I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClB3I,OAAA;MAAQuI,SAAS,EAAC,8BAA8B;MAACiC,OAAO,EAAEA,CAAA,KAAMzJ,OAAO,CAACgK,IAAI,CAAC,eAAe,CAAE;MAAAhB,QAAA,EAAC;IAE/F;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3I,OAAA;MAAIuI,SAAS,EAAC,wBAAwB;MAAAwB,QAAA,EAAC;IAAsB;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClE3I,OAAA;MACEuI,SAAS,EAAC,gCAAgC;MAC1CiC,OAAO,EAAEA,CAAA,KAAM;QACb,IAAI3J,QAAQ,KAAK,SAAS,EAAE;UAC1BC,WAAW,CAAC,UAAU,CAAC;UACvB,MAAMkK,QAAQ,GAAG9D,UAAU,CAACzG,YAAY,CAAC;UACzCoE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEkG,QAAQ,CAAC,CAAC,CAAC;UACpDxK,eAAe,CAACwK,QAAQ,CAAC;QAC3B,CAAC,MAAM;UACLlK,WAAW,CAAC,SAAS,CAAC;UACtBN,eAAe,CAACC,YAAY,CAAC,CAAC,CAAC;QACjC;MACF,CAAE;MAAAsJ,QAAA,EAEDlJ,QAAQ,KAAK,SAAS,GAAG,kCAAkC,GAAG;IAAiD;MAAA2H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1G,CAAC,EACRhI,OAAO,CAACa,MAAM,GAAG,CAAC,iBACjBxB,OAAA,CAACoJ,KAAK;MACJzI,OAAO,EAAE0B,oBAAqB;MAC9BgC,IAAI,EAAErC;IAAc;MAAAwG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CACF,eACD3I,OAAA;MAAKuI,SAAS,EAAC,qBAAqB;MAAAwB,QAAA,gBAClC/J,OAAA;QAAQwK,OAAO,EAAEA,CAAA,KAAM/I,qBAAqB,CAAC,CAAC,CAAE;QAACwJ,QAAQ,EAAEjK,WAAW,KAAK,CAAE;QAAA+I,QAAA,EAAE;MAAI;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC7F3I,OAAA;QAAQwK,OAAO,EAAEA,CAAA,KAAM/I,qBAAqB,CAACT,WAAW,GAAG,CAAC,CAAE;QAACiK,QAAQ,EAAEjK,WAAW,KAAK,CAAE;QAAA+I,QAAA,EAAE;MAAW;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAClH3I,OAAA;QAAA+J,QAAA,GAAM,OACC,EAAC/I,WAAW,EAAC,MAAI,EAACI,UAAU;MAAA;QAAAoH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACP3I,OAAA;QAAQwK,OAAO,EAAEA,CAAA,KAAM/I,qBAAqB,CAACT,WAAW,GAAG,CAAC,CAAE;QAACiK,QAAQ,EAAEjK,WAAW,KAAKI,UAAW;QAAA2I,QAAA,EAAE;MAAS;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACzH3I,OAAA;QAAQwK,OAAO,EAAEA,CAAA,KAAM/I,qBAAqB,CAACL,UAAU,CAAE;QAAC6J,QAAQ,EAAEjK,WAAW,KAAKI,UAAW;QAAA2I,QAAA,EAAE;MAAI;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC/G3I,OAAA;QAAQ+B,KAAK,EAAEb,WAAY;QAACkH,QAAQ,EAAEzG,uBAAwB;QAAAoI,QAAA,gBAC5D/J,OAAA;UAAQ+B,KAAK,EAAE,EAAG;UAAAgI,QAAA,EAAC;QAAO;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnC3I,OAAA;UAAQ+B,KAAK,EAAE,EAAG;UAAAgI,QAAA,EAAC;QAAO;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnC3I,OAAA;UAAQ+B,KAAK,EAAE,EAAG;UAAAgI,QAAA,EAAC;QAAO;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnC3I,OAAA;UAAQ+B,KAAK,EAAE,GAAI;UAAAgI,QAAA,EAAC;QAAQ;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN3I,OAAA;MAAKuI,SAAS,EAAC,yBAAyB;MAAAwB,QAAA,eACtC/J,OAAA;QACEuI,SAAS,EAAC,gCAAgC;QAC1CiC,OAAO,EAAEA,CAAA,KAAM5B,aAAa,CAAC/H,QAAQ,KAAK,SAAS,GAAGN,YAAY,GAAG2G,UAAU,CAAC3G,YAAY,CAAC,CAAE;QAAAwJ,QAAA,EAChG;MAED;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzI,GAAA,CAxVID,eAAe;EAAA,QASHV,UAAU;AAAA;AAAA2L,EAAA,GATtBjL,eAAe;AA0VrB,eAAeA,eAAe;AAAC,IAAAiL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}