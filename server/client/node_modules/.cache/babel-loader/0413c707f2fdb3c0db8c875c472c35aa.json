{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ITEquipmentView.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport './ITEquipmentView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEquipmentView = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [itEquipments, setITEquipments] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\n  const history = useHistory();\n\n  ////\n\n  ////\n\n  // Define measureTextWidth function\n  const measureTextWidth = (text, font = '12px Arial') => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = font;\n    return context.measureText(text).width;\n  };\n  useEffect(() => {\n    const fetchITEquipments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/it-equipments', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.data && Array.isArray(response.data.equipments)) {\n          const data = response.data.equipments.map(({\n            createdAt,\n            updatedAt,\n            id,\n            ...rest\n          }) => setDefaultValues(rest));\n          console.log('Fetched data:', data); // Debug logging\n          setITEquipments(data);\n          setOriginalData(data); // Store the original data\n\n          const headers = Object.keys(data[0] || {});\n          const maxWidths = headers.reduce((acc, header) => {\n            const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\n            const maxLength = Math.max(headerWidth, ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : '')));\n            acc[header] = maxLength;\n            return acc;\n          }, {});\n          const cols = [{\n            Header: '#',\n            accessor: (row, i) => i + 1,\n            disableFilters: true,\n            disableSortBy: true,\n            width: 50 // Fixed width for the row number column\n          }, ...headers.map(header => ({\n            Header: header.replace(/_/g, ' '),\n            accessor: header,\n            Filter: SelectColumnFilter,\n            width: maxWidths[header] + 20 // Add some padding\n          }))];\n          setColumns(cols);\n        } else {\n          console.error('Unexpected response data format:', response.data);\n          alert('Error fetching IT Equipments: Unexpected response format');\n        }\n      } catch (error) {\n        console.error('Error fetching IT Equipments:', error);\n        alert('Error fetching IT Equipments: ' + error.message);\n      }\n    };\n    fetchITEquipments();\n  }, []);\n  const setDefaultValues = (data, defaultValue = '------') => {\n    const updatedData = {\n      ...data\n    };\n    for (let key in updatedData) {\n      if (updatedData[key] === '' || updatedData[key] === null) {\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\n          updatedData[key] = null; // Set date fields to null if empty\n        } else {\n          updatedData[key] = defaultValue; // Set other fields to default value\n        }\n      }\n    }\n    return updatedData;\n  };\n  const filterData = data => {\n    return data.filter(item => {\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\n      return requiredFields.every(field => item[field] && item[field] !== '------');\n    });\n  };\n  const SelectColumnFilter = ({\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  }) => {\n    _s();\n    const options = React.useMemo(() => {\n      const optionsSet = new Set();\n      preFilteredRows.forEach(row => {\n        optionsSet.add(row.values[id]);\n      });\n      return [...optionsSet].map(option => ({\n        value: option,\n        label: option\n      }));\n    }, [id, preFilteredRows]);\n    const handleChange = selectedOptions => {\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n    };\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: options.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"itequipment-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n  const exportToExcel = data => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s2();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"itequipment-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-back-button\",\n      onClick: () => history.push('/it-equipment'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itequipment-view-title\",\n      children: \"Afficher IT Equipments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-toggle-button\",\n      onClick: () => {\n        if (viewType === 'general') {\n          setViewType('filtered');\n          const filtered = filterData(originalData);\n          console.log('Filtered data to display:', filtered); // Additional debug logging\n          setITEquipments(filtered);\n        } else {\n          setViewType('general');\n          setITEquipments(originalData); // Restore the original data\n        }\n      },\n      children: viewType === 'general' ? 'Show Filtered Equipments' : 'Show General IT Equipments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: paginatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'PrÃ©cÃ©dent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"itequipment-view-export-button\",\n        onClick: () => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments)),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s3(ITEquipmentView, \"pcObbhw9yt84+uyao6lzIsKmldk=\", false, function () {\n  return [useHistory];\n});\n_c = ITEquipmentView;\nexport default ITEquipmentView;\nvar _c;\n$RefreshReg$(_c, \"ITEquipmentView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","jsxDEV","_jsxDEV","ITEquipmentView","_s3","_s","$RefreshSig$","_s2","itEquipments","setITEquipments","originalData","setOriginalData","columns","setColumns","viewType","setViewType","history","measureTextWidth","text","font","canvas","document","createElement","context","getContext","measureText","width","fetchITEquipments","response","get","headers","Authorization","localStorage","getItem","data","Array","isArray","equipments","map","createdAt","updatedAt","id","rest","setDefaultValues","console","log","Object","keys","maxWidths","reduce","acc","header","headerWidth","replace","maxLength","Math","max","row","toString","cols","Header","accessor","i","disableFilters","disableSortBy","Filter","SelectColumnFilter","error","alert","message","defaultValue","updatedData","key","includes","filterData","filter","item","requiredFields","every","field","column","filterValue","setFilter","preFilteredRows","options","useMemo","optionsSet","Set","forEach","add","values","option","value","label","handleChange","selectedOptions","undefined","onChange","isMulti","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","onClick","push","filtered","length","columnsWithRowNumber","paginatedData","handlePageNumberClick","disabled","currentPage","totalPages","rowsPerPage","handleRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ITEquipmentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\r\n  const history = useHistory();\r\n\r\n  ////\r\n  \r\n  ////\r\n\r\n\r\n  // Define measureTextWidth function\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchITEquipments = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n\r\n        if (response.data && Array.isArray(response.data.equipments)) {\r\n          const data = response.data.equipments.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n          console.log('Fetched data:', data); // Debug logging\r\n          setITEquipments(data);\r\n          setOriginalData(data); // Store the original data\r\n\r\n          const headers = Object.keys(data[0] || {});\r\n          const maxWidths = headers.reduce((acc, header) => {\r\n            const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n            const maxLength = Math.max(\r\n              headerWidth,\r\n              ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n            );\r\n            acc[header] = maxLength;\r\n            return acc;\r\n          }, {});\r\n\r\n          const cols = [\r\n            {\r\n              Header: '#',\r\n              accessor: (row, i) => i + 1,\r\n              disableFilters: true,\r\n              disableSortBy: true,\r\n              width: 50, // Fixed width for the row number column\r\n            },\r\n            ...headers.map((header) => ({\r\n              Header: header.replace(/_/g, ' '),\r\n              accessor: header,\r\n              Filter: SelectColumnFilter,\r\n              width: maxWidths[header] + 20, // Add some padding\r\n            })),\r\n          ];\r\n\r\n          setColumns(cols);\r\n        } else {\r\n          console.error('Unexpected response data format:', response.data);\r\n          alert('Error fetching IT Equipments: Unexpected response format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching IT Equipments:', error);\r\n        alert('Error fetching IT Equipments: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------') => {\r\n    const updatedData = { ...data };\r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          updatedData[key] = null;  // Set date fields to null if empty\r\n        } else {\r\n          updatedData[key] = defaultValue;  // Set other fields to default value\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };\r\n\r\n  const filterData = (data) => {\r\n    return data.filter(item => {\r\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\r\n      return requiredFields.every(field => item[field] && item[field] !== '------');\r\n    });\r\n  };\r\n\r\n  const SelectColumnFilter = ({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) => {\r\n    const options = React.useMemo(() => {\r\n      const optionsSet = new Set();\r\n      preFilteredRows.forEach(row => {\r\n        optionsSet.add(row.values[id]);\r\n      });\r\n      return [...optionsSet].map(option => ({ value: option, label: option }));\r\n    }, [id, preFilteredRows]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? ' ðŸ”½'\r\n                            : ' ðŸ”¼'\r\n                          : ''}\r\n                      </span>\r\n                      <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <button\r\n        className=\"itequipment-view-toggle-button\"\r\n        onClick={() => {\r\n          if (viewType === 'general') {\r\n            setViewType('filtered');\r\n            const filtered = filterData(originalData);\r\n            console.log('Filtered data to display:', filtered); // Additional debug logging\r\n            setITEquipments(filtered);\r\n          } else {\r\n            setViewType('general');\r\n            setITEquipments(originalData); // Restore the original data\r\n          }\r\n        }}\r\n      >\r\n        {viewType === 'general' ? 'Show Filtered Equipments' : 'Show General IT Equipments'}\r\n      </button>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={paginatedData}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'PrÃ©cÃ©dent'}</button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments))}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,aAAa;AAC7D,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EAC5B,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EACrD,MAAMwB,OAAO,GAAGjB,UAAU,CAAC,CAAC;;EAE5B;;EAEA;;EAGA;EACA,MAAMkB,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,IAAI,GAAG,YAAY,KAAK;IACtD,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACJ,IAAI,GAAGA,IAAI;IACnB,OAAOI,OAAO,CAACE,WAAW,CAACP,IAAI,CAAC,CAACQ,KAAK;EACxC,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,MAAMkC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAG,CAAC,yCAAyC,EAAE;UAC1EC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UACxD;QACF,CAAC,CAAC;QAEF,IAAIL,QAAQ,CAACM,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACR,QAAQ,CAACM,IAAI,CAACG,UAAU,CAAC,EAAE;UAC5D,MAAMH,IAAI,GAAGN,QAAQ,CAACM,IAAI,CAACG,UAAU,CAACC,GAAG,CAAC,CAAC;YAAEC,SAAS;YAAEC,SAAS;YAAEC,EAAE;YAAE,GAAGC;UAAK,CAAC,KAAKC,gBAAgB,CAACD,IAAI,CAAC,CAAC;UAC5GE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,IAAI,CAAC,CAAC,CAAC;UACpCzB,eAAe,CAACyB,IAAI,CAAC;UACrBvB,eAAe,CAACuB,IAAI,CAAC,CAAC,CAAC;;UAEvB,MAAMJ,OAAO,GAAGgB,MAAM,CAACC,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;UAC1C,MAAMc,SAAS,GAAGlB,OAAO,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;YAChD,MAAMC,WAAW,GAAGnC,gBAAgB,CAACkC,MAAM,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC/D,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CACxBJ,WAAW,EACX,GAAGlB,IAAI,CAACI,GAAG,CAACmB,GAAG,IAAIxC,gBAAgB,CAACwC,GAAG,CAACN,MAAM,CAAC,GAAGM,GAAG,CAACN,MAAM,CAAC,CAACO,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,CAChF,CAAC;YACDR,GAAG,CAACC,MAAM,CAAC,GAAGG,SAAS;YACvB,OAAOJ,GAAG;UACZ,CAAC,EAAE,CAAC,CAAC,CAAC;UAEN,MAAMS,IAAI,GAAG,CACX;YACEC,MAAM,EAAE,GAAG;YACXC,QAAQ,EAAEA,CAACJ,GAAG,EAAEK,CAAC,KAAKA,CAAC,GAAG,CAAC;YAC3BC,cAAc,EAAE,IAAI;YACpBC,aAAa,EAAE,IAAI;YACnBtC,KAAK,EAAE,EAAE,CAAE;UACb,CAAC,EACD,GAAGI,OAAO,CAACQ,GAAG,CAAEa,MAAM,KAAM;YAC1BS,MAAM,EAAET,MAAM,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;YACjCQ,QAAQ,EAAEV,MAAM;YAChBc,MAAM,EAAEC,kBAAkB;YAC1BxC,KAAK,EAAEsB,SAAS,CAACG,MAAM,CAAC,GAAG,EAAE,CAAE;UACjC,CAAC,CAAC,CAAC,CACJ;UAEDtC,UAAU,CAAC8C,IAAI,CAAC;QAClB,CAAC,MAAM;UACLf,OAAO,CAACuB,KAAK,CAAC,kCAAkC,EAAEvC,QAAQ,CAACM,IAAI,CAAC;UAChEkC,KAAK,CAAC,0DAA0D,CAAC;QACnE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdvB,OAAO,CAACuB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDC,KAAK,CAAC,gCAAgC,GAAGD,KAAK,CAACE,OAAO,CAAC;MACzD;IACF,CAAC;IAED1C,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,gBAAgB,GAAGA,CAACT,IAAI,EAAEoC,YAAY,GAAG,QAAQ,KAAK;IAC1D,MAAMC,WAAW,GAAG;MAAE,GAAGrC;IAAK,CAAC;IAC/B,KAAK,IAAIsC,GAAG,IAAID,WAAW,EAAE;MAC3B,IAAIA,WAAW,CAACC,GAAG,CAAC,KAAK,EAAE,IAAID,WAAW,CAACC,GAAG,CAAC,KAAK,IAAI,EAAE;QACxD,IAAI,CAAC,mBAAmB,EAAE,cAAc,EAAE,YAAY,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAACC,QAAQ,CAACD,GAAG,CAAC,EAAE;UACtGD,WAAW,CAACC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAE;QAC5B,CAAC,MAAM;UACLD,WAAW,CAACC,GAAG,CAAC,GAAGF,YAAY,CAAC,CAAE;QACpC;MACF;IACF;IACA,OAAOC,WAAW;EACpB,CAAC;EAED,MAAMG,UAAU,GAAIxC,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACyC,MAAM,CAACC,IAAI,IAAI;MACzB,MAAMC,cAAc,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,kBAAkB,CAAC;MACrF,OAAOA,cAAc,CAACC,KAAK,CAACC,KAAK,IAAIH,IAAI,CAACG,KAAK,CAAC,IAAIH,IAAI,CAACG,KAAK,CAAC,KAAK,QAAQ,CAAC;IAC/E,CAAC,CAAC;EACJ,CAAC;EAED,MAAMb,kBAAkB,GAAGA,CAAC;IAC1Bc,MAAM,EAAE;MAAEC,WAAW;MAAEC,SAAS;MAAEC,eAAe;MAAE1C;IAAG;EACxD,CAAC,KAAK;IAAApC,EAAA;IACJ,MAAM+E,OAAO,GAAG7F,KAAK,CAAC8F,OAAO,CAAC,MAAM;MAClC,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;MAC5BJ,eAAe,CAACK,OAAO,CAAC/B,GAAG,IAAI;QAC7B6B,UAAU,CAACG,GAAG,CAAChC,GAAG,CAACiC,MAAM,CAACjD,EAAE,CAAC,CAAC;MAChC,CAAC,CAAC;MACF,OAAO,CAAC,GAAG6C,UAAU,CAAC,CAAChD,GAAG,CAACqD,MAAM,KAAK;QAAEC,KAAK,EAAED,MAAM;QAAEE,KAAK,EAAEF;MAAO,CAAC,CAAC,CAAC;IAC1E,CAAC,EAAE,CAAClD,EAAE,EAAE0C,eAAe,CAAC,CAAC;IAEzB,MAAMW,YAAY,GAAIC,eAAe,IAAK;MACxCb,SAAS,CAACa,eAAe,GAAGA,eAAe,CAACzD,GAAG,CAACqD,MAAM,IAAIA,MAAM,CAACC,KAAK,CAAC,GAAGI,SAAS,CAAC;IACtF,CAAC;IAED,oBACE9F,OAAA,CAACJ,MAAM;MACL8F,KAAK,EAAER,OAAO,CAACT,MAAM,CAACgB,MAAM,IAAIV,WAAW,IAAIA,WAAW,CAACR,QAAQ,CAACkB,MAAM,CAACC,KAAK,CAAC,CAAE;MACnFK,QAAQ,EAAEH,YAAa;MACvBV,OAAO,EAAEA,OAAQ;MACjBc,OAAO;MACPC,WAAW,EAAE,cAAe;MAC5BC,SAAS,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEN,CAAC;EAACnG,EAAA,CAzBI6D,kBAAkB;EA2BxB,MAAMuC,aAAa,GAAIvE,IAAI,IAAK;IAC9B,MAAMwE,EAAE,GAAG1G,IAAI,CAAC2G,KAAK,CAACC,aAAa,CAAC1E,IAAI,CAAC;IACzC,MAAM2E,EAAE,GAAG7G,IAAI,CAAC2G,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChC9G,IAAI,CAAC2G,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,cAAc,CAAC;IACpD1G,IAAI,CAACgH,SAAS,CAACH,EAAE,EAAE,mBAAmB,CAAC;EACzC,CAAC;EAED,MAAMI,KAAK,GAAGA,CAAC;IAAErG,OAAO;IAAEsB;EAAK,CAAC,KAAK;IAAA3B,GAAA;IACnC,MAAM2G,aAAa,GAAG;MACpBC,QAAQ,EAAE,EAAE;MACZzF,KAAK,EAAE,GAAG;MACV0F,QAAQ,EAAE;IACZ,CAAC;IAED,MAAM;MACJC,aAAa;MACbC,iBAAiB;MACjBC,YAAY;MACZC,IAAI;MACJC;IACF,CAAC,GAAG9H,QAAQ,CACV;MACEiB,OAAO;MACPsB,IAAI;MACJgF;IACF,CAAC,EACDrH,UAAU,EACVD,SACF,CAAC;IAED,oBACEM,OAAA;MAAKkG,SAAS,EAAC,kCAAkC;MAAAsB,QAAA,eAC/CxH,OAAA;QAAA,GAAWmH,aAAa,CAAC,CAAC;QAAEjB,SAAS,EAAC,6BAA6B;QAAAsB,QAAA,gBACjExH,OAAA;UAAAwH,QAAA,EACGH,YAAY,CAACjF,GAAG,CAACqF,WAAW,iBAC3BzH,OAAA;YAAA,GAAQyH,WAAW,CAACC,mBAAmB,CAAC,CAAC;YAAAF,QAAA,EACtCC,WAAW,CAAC7F,OAAO,CAACQ,GAAG,CAAC0C,MAAM,iBAC7B9E,OAAA;cAAA,GAAQ8E,MAAM,CAAC6C,cAAc,CAAC7C,MAAM,CAAC8C,oBAAoB,CAAC,CAAC,CAAC;cAAAJ,QAAA,eAC1DxH,OAAA;gBAAK6H,KAAK,EAAE;kBAAErG,KAAK,EAAEsD,MAAM,CAACtD;gBAAM,CAAE;gBAAAgG,QAAA,GACjC1C,MAAM,CAACgD,MAAM,CAAC,QAAQ,CAAC,eACxB9H,OAAA;kBAAAwH,QAAA,EACG1C,MAAM,CAACiD,QAAQ,GACZjD,MAAM,CAACkD,YAAY,GACjB,KAAK,GACL,KAAK,GACP;gBAAE;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACPtG,OAAA;kBAAAwH,QAAA,EAAM1C,MAAM,CAACmD,SAAS,GAAGnD,MAAM,CAACgD,MAAM,CAAC,QAAQ,CAAC,GAAG;gBAAI;kBAAA3B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACRtG,OAAA;UAAA,GAAWoH,iBAAiB,CAAC,CAAC;UAAAI,QAAA,EAC3BF,IAAI,CAAClF,GAAG,CAAC,CAACmB,GAAG,EAAE2E,QAAQ,KAAK;YAC3BX,UAAU,CAAChE,GAAG,CAAC;YACf,oBACEvD,OAAA;cAAA,GAAQuD,GAAG,CAAC4E,WAAW,CAAC,CAAC;cAAEjC,SAAS,EAAEgC,QAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,2BAA2B,GAAG,0BAA2B;cAAAV,QAAA,EACjHjE,GAAG,CAAC6E,KAAK,CAAChG,GAAG,CAACiG,IAAI,iBACjBrI,OAAA;gBAAA,GAAQqI,IAAI,CAACC,YAAY,CAAC,CAAC;gBAAAd,QAAA,EAAGa,IAAI,CAACP,MAAM,CAAC,MAAM;cAAC;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CACvD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV,CAAC;EAACjG,GAAA,CA9DI0G,KAAK;IAAA,QAaLtH,QAAQ;EAAA;EAmDd,oBACEO,OAAA;IAAKkG,SAAS,EAAC,4BAA4B;IAAAsB,QAAA,gBACzCxH,OAAA;MAAQkG,SAAS,EAAC,8BAA8B;MAACqC,OAAO,EAAEA,CAAA,KAAMzH,OAAO,CAAC0H,IAAI,CAAC,eAAe,CAAE;MAAAhB,QAAA,EAAC;IAE/F;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtG,OAAA;MAAIkG,SAAS,EAAC,wBAAwB;MAAAsB,QAAA,EAAC;IAAsB;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClEtG,OAAA;MACEkG,SAAS,EAAC,gCAAgC;MAC1CqC,OAAO,EAAEA,CAAA,KAAM;QACb,IAAI3H,QAAQ,KAAK,SAAS,EAAE;UAC1BC,WAAW,CAAC,UAAU,CAAC;UACvB,MAAM4H,QAAQ,GAAGjE,UAAU,CAAChE,YAAY,CAAC;UACzCkC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE8F,QAAQ,CAAC,CAAC,CAAC;UACpDlI,eAAe,CAACkI,QAAQ,CAAC;QAC3B,CAAC,MAAM;UACL5H,WAAW,CAAC,SAAS,CAAC;UACtBN,eAAe,CAACC,YAAY,CAAC,CAAC,CAAC;QACjC;MACF,CAAE;MAAAgH,QAAA,EAED5G,QAAQ,KAAK,SAAS,GAAG,0BAA0B,GAAG;IAA4B;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,EACR5F,OAAO,CAACgI,MAAM,GAAG,CAAC,iBACjB1I,OAAA,CAAC+G,KAAK;MACJrG,OAAO,EAAEiI,oBAAqB;MAC9B3G,IAAI,EAAE4G;IAAc;MAAAzC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CACF,eACDtG,OAAA;MAAKkG,SAAS,EAAC,qBAAqB;MAAAsB,QAAA,gBAClCxH,OAAA;QAAQuI,OAAO,EAAEA,CAAA,KAAMM,qBAAqB,CAAC,CAAC,CAAE;QAACC,QAAQ,EAAEC,WAAW,KAAK,CAAE;QAAAvB,QAAA,EAAE;MAAI;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC7FtG,OAAA;QAAQuI,OAAO,EAAEA,CAAA,KAAMM,qBAAqB,CAACE,WAAW,GAAG,CAAC,CAAE;QAACD,QAAQ,EAAEC,WAAW,KAAK,CAAE;QAAAvB,QAAA,EAAE;MAAW;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAClHtG,OAAA;QAAAwH,QAAA,GAAM,OACC,EAACuB,WAAW,EAAC,MAAI,EAACC,UAAU;MAAA;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACPtG,OAAA;QAAQuI,OAAO,EAAEA,CAAA,KAAMM,qBAAqB,CAACE,WAAW,GAAG,CAAC,CAAE;QAACD,QAAQ,EAAEC,WAAW,KAAKC,UAAW;QAAAxB,QAAA,EAAE;MAAS;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACzHtG,OAAA;QAAQuI,OAAO,EAAEA,CAAA,KAAMM,qBAAqB,CAACG,UAAU,CAAE;QAACF,QAAQ,EAAEC,WAAW,KAAKC,UAAW;QAAAxB,QAAA,EAAE;MAAI;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC/GtG,OAAA;QAAQ0F,KAAK,EAAEuD,WAAY;QAAClD,QAAQ,EAAEmD,uBAAwB;QAAA1B,QAAA,gBAC5DxH,OAAA;UAAQ0F,KAAK,EAAE,EAAG;UAAA8B,QAAA,EAAC;QAAO;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCtG,OAAA;UAAQ0F,KAAK,EAAE,EAAG;UAAA8B,QAAA,EAAC;QAAO;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCtG,OAAA;UAAQ0F,KAAK,EAAE,EAAG;UAAA8B,QAAA,EAAC;QAAO;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCtG,OAAA;UAAQ0F,KAAK,EAAE,GAAI;UAAA8B,QAAA,EAAC;QAAQ;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNtG,OAAA;MAAKkG,SAAS,EAAC,yBAAyB;MAAAsB,QAAA,eACtCxH,OAAA;QACEkG,SAAS,EAAC,gCAAgC;QAC1CqC,OAAO,EAAEA,CAAA,KAAMhC,aAAa,CAAC3F,QAAQ,KAAK,SAAS,GAAGN,YAAY,GAAGkE,UAAU,CAAClE,YAAY,CAAC,CAAE;QAAAkH,QAAA,EAChG;MAED;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpG,GAAA,CAxPID,eAAe;EAAA,QAKHJ,UAAU;AAAA;AAAAsJ,EAAA,GALtBlJ,eAAe;AA0PrB,eAAeA,eAAe;AAAC,IAAAkJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}