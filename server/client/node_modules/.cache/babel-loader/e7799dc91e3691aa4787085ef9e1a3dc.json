{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ITEquipmentView.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport './ITEquipmentView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEquipmentView = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [itEquipments, setITEquipments] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\n  const history = useHistory();\n\n  ////\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    setTotalPages(Math.ceil(itEquipments.length / rowsPerPage));\n  }, [itEquipments.length, rowsPerPage]);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page\n  };\n  const paginatedData = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return itEquipments.slice(startIndex, endIndex);\n  }, [itEquipments, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = React.useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns];\n  }, [columns, currentPage, rowsPerPage]);\n  ////\n\n  // Define measureTextWidth function\n  const measureTextWidth = (text, font = '12px Arial') => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = font;\n    return context.measureText(text).width;\n  };\n  useEffect(() => {\n    const fetchITEquipments = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/it-equipments', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.data && Array.isArray(response.data.equipments)) {\n          const data = response.data.equipments.map(({\n            createdAt,\n            updatedAt,\n            id,\n            ...rest\n          }) => setDefaultValues(rest));\n          console.log('Fetched data from server:', data.length);\n          setITEquipments(data);\n          setOriginalData(data);\n          const headers = Object.keys(data[0] || {});\n          const maxWidths = headers.reduce((acc, header) => {\n            const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\n            const maxLength = Math.max(headerWidth, ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : '')));\n            acc[header] = maxLength;\n            return acc;\n          }, {});\n          const cols = [{\n            Header: '#',\n            accessor: (row, i) => i + 1,\n            disableFilters: true,\n            disableSortBy: true,\n            width: 50\n          }, ...headers.map(header => ({\n            Header: header.replace(/_/g, ' '),\n            accessor: header,\n            Filter: SelectColumnFilter,\n            width: maxWidths[header] + 20\n          }))];\n          setColumns(cols);\n        } else {\n          console.error('Unexpected response data format:', response.data);\n          alert('Error fetching IT Equipments: Unexpected response format');\n        }\n      } catch (error) {\n        console.error('Error fetching IT Equipments:', error);\n        alert('Error fetching IT Equipments: ' + error.message);\n      }\n    };\n    fetchITEquipments();\n  }, []);\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\n    const updatedData = {\n      ...data\n    };\n    const defaultDateFields = ['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'];\n    const notNullFields = ['numero_facture', 'prix_achat', 'numero_appel_offre'];\n    for (let key in updatedData) {\n      if (updatedData[key] === '' || updatedData[key] === null || updatedData[key] === undefined) {\n        if (defaultDateFields.includes(key)) {\n          updatedData[key] = null;\n        } else if (notNullFields.includes(key)) {\n          if (key === 'prix_achat') {\n            updatedData[key] = defaultNumber;\n          } else {\n            updatedData[key] = defaultValue;\n          }\n        } else {\n          updatedData[key] = defaultValue;\n        }\n      }\n    }\n    return updatedData;\n  };\n  const filterData = data => {\n    return data.filter(item => {\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\n      return requiredFields.every(field => item[field] && item[field] !== '------');\n    });\n  };\n  const SelectColumnFilter = ({\n    column: {\n      filterValue,\n      setFilter,\n      preFilteredRows,\n      id\n    }\n  }) => {\n    _s();\n    const options = React.useMemo(() => {\n      const optionsSet = new Set();\n      preFilteredRows.forEach(row => {\n        optionsSet.add(row.values[id]);\n      });\n      return [...optionsSet].map(option => ({\n        value: option,\n        label: option\n      }));\n    }, [id, preFilteredRows]);\n    const handleChange = selectedOptions => {\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n    };\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: options.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"itequipment-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n  const exportToExcel = data => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s2();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"itequipment-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-back-button\",\n      onClick: () => history.push('/it-equipment'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itequipment-view-title\",\n      children: \"Afficher IT Equipments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-toggle-button\",\n      onClick: () => {\n        if (viewType === 'general') {\n          setViewType('filtered');\n          const filtered = filterData(originalData);\n          console.log('Filtered data to display:', filtered); // Additional debug logging\n          setITEquipments(filtered);\n        } else {\n          setViewType('general');\n          setITEquipments(originalData); // Restore the original data\n        }\n      },\n      children: viewType === 'general' ? 'Show Filtered Equipments' : 'Show General IT Equipments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: paginatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'PrÃ©cÃ©dent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"itequipment-view-export-button\",\n        onClick: () => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments)),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s3(ITEquipmentView, \"p9YSZVukQOAGD2kR86P2WUCWHvM=\", false, function () {\n  return [useHistory];\n});\n_c = ITEquipmentView;\nexport default ITEquipmentView;\nvar _c;\n$RefreshReg$(_c, \"ITEquipmentView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","jsxDEV","_jsxDEV","ITEquipmentView","_s3","_s","$RefreshSig$","_s2","itEquipments","setITEquipments","originalData","setOriginalData","columns","setColumns","viewType","setViewType","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalPages","setTotalPages","Math","ceil","length","handlePageNumberClick","pageNumber","handleRowsPerPageChange","event","parseInt","target","value","paginatedData","useMemo","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","Header","id","accessor","row","i","disableFilters","disableSortBy","width","filteredColumns","filter","col","measureTextWidth","text","font","canvas","document","createElement","context","getContext","measureText","fetchITEquipments","response","get","headers","Authorization","localStorage","getItem","data","Array","isArray","equipments","map","createdAt","updatedAt","rest","setDefaultValues","console","log","Object","keys","maxWidths","reduce","acc","header","headerWidth","replace","maxLength","max","toString","cols","Filter","SelectColumnFilter","error","alert","message","defaultValue","defaultNumber","updatedData","defaultDateFields","notNullFields","key","undefined","includes","filterData","item","requiredFields","every","field","column","filterValue","setFilter","preFilteredRows","options","optionsSet","Set","forEach","add","values","option","label","handleChange","selectedOptions","onChange","isMulti","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","onClick","push","filtered","disabled","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ITEquipmentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\r\n  const history = useHistory();\r\n\r\n  ////\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(itEquipments.length / rowsPerPage));\r\n  }, [itEquipments.length, rowsPerPage]);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page\r\n  };\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return itEquipments.slice(startIndex, endIndex);\r\n  }, [itEquipments, currentPage, rowsPerPage]);\r\n\r\n  const columnsWithRowNumber = React.useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [rowNumberColumn, ...filteredColumns];\r\n  }, [columns, currentPage, rowsPerPage]);\r\n  ////\r\n\r\n  // Define measureTextWidth function\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchITEquipments = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n  \r\n        if (response.data && Array.isArray(response.data.equipments)) {\r\n          const data = response.data.equipments.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n          console.log('Fetched data from server:', data.length);\r\n          setITEquipments(data);\r\n          setOriginalData(data);\r\n  \r\n          const headers = Object.keys(data[0] || {});\r\n          const maxWidths = headers.reduce((acc, header) => {\r\n            const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n            const maxLength = Math.max(\r\n              headerWidth,\r\n              ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n            );\r\n            acc[header] = maxLength;\r\n            return acc;\r\n          }, {});\r\n  \r\n          const cols = [\r\n            {\r\n              Header: '#',\r\n              accessor: (row, i) => i + 1,\r\n              disableFilters: true,\r\n              disableSortBy: true,\r\n              width: 50,\r\n            },\r\n            ...headers.map((header) => ({\r\n              Header: header.replace(/_/g, ' '),\r\n              accessor: header,\r\n              Filter: SelectColumnFilter,\r\n              width: maxWidths[header] + 20,\r\n            })),\r\n          ];\r\n  \r\n          setColumns(cols);\r\n        } else {\r\n          console.error('Unexpected response data format:', response.data);\r\n          alert('Error fetching IT Equipments: Unexpected response format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching IT Equipments:', error);\r\n        alert('Error fetching IT Equipments: ' + error.message);\r\n      }\r\n    };\r\n  \r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\r\n    const updatedData = { ...data };\r\n    const defaultDateFields = ['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'];\r\n    const notNullFields = ['numero_facture', 'prix_achat', 'numero_appel_offre'];\r\n  \r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null || updatedData[key] === undefined) {\r\n        if (defaultDateFields.includes(key)) {\r\n          updatedData[key] = null;\r\n        } else if (notNullFields.includes(key)) {\r\n          if (key === 'prix_achat') {\r\n            updatedData[key] = defaultNumber;\r\n          } else {\r\n            updatedData[key] = defaultValue;\r\n          }\r\n        } else {\r\n          updatedData[key] = defaultValue;\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };  \r\n  \r\n  const filterData = (data) => {\r\n    return data.filter(item => {\r\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\r\n      return requiredFields.every(field => item[field] && item[field] !== '------');\r\n    });\r\n  };\r\n\r\n  const SelectColumnFilter = ({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) => {\r\n    const options = React.useMemo(() => {\r\n      const optionsSet = new Set();\r\n      preFilteredRows.forEach(row => {\r\n        optionsSet.add(row.values[id]);\r\n      });\r\n      return [...optionsSet].map(option => ({ value: option, label: option }));\r\n    }, [id, preFilteredRows]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? ' ðŸ”½'\r\n                            : ' ðŸ”¼'\r\n                          : ''}\r\n                      </span>\r\n                      <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <button\r\n        className=\"itequipment-view-toggle-button\"\r\n        onClick={() => {\r\n          if (viewType === 'general') {\r\n            setViewType('filtered');\r\n            const filtered = filterData(originalData);\r\n            console.log('Filtered data to display:', filtered); // Additional debug logging\r\n            setITEquipments(filtered);\r\n          } else {\r\n            setViewType('general');\r\n            setITEquipments(originalData); // Restore the original data\r\n          }\r\n        }}\r\n      >\r\n        {viewType === 'general' ? 'Show Filtered Equipments' : 'Show General IT Equipments'}\r\n      </button>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={paginatedData}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'PrÃ©cÃ©dent'}</button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments))}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}