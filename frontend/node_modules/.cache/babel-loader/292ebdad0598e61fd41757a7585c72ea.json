{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s2 = $RefreshSig$();\n// src/components/Dashboard/ExcelEditor.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport * as XLSX from 'xlsx';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [sheets, setSheets] = useState([]);\n  const [fileName, setFileName] = useState('');\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    setFileName(file.name);\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await axios.post('/api/excel/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setSheets(response.data.sheets);\n  };\n  const handleCellChange = (sheetIndex, rowIndex, colKey, value) => {\n    const updatedSheets = [...sheets];\n    updatedSheets[sheetIndex].data[rowIndex][colKey] = value;\n    setSheets(updatedSheets);\n  };\n  const downloadExcel = async () => {\n    const response = await axios.post('/api/excel/generate', {\n      sheets\n    }, {\n      responseType: 'arraybuffer'\n    });\n    const blob = new Blob([response.data], {\n      type: response.headers['content-type']\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'modified_' + fileName;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s();\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data\n    }, useFilters, useSortBy);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: cell.value,\n                onChange: e => handleCellChange(0, row.index, cell.column.id, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  const DefaultColumnFilter = ({\n    column: {\n      filterValue,\n      preFilteredRows,\n      setFilter\n    }\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      value: filterValue || '',\n      onChange: e => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      },\n      placeholder: `Search...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), sheets.map((sheet, sheetIndex) => {\n      const columns = Object.keys(sheet.data[0]).map(key => ({\n        Header: key,\n        accessor: key,\n        Filter: DefaultColumnFilter\n      }));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: sheet.sheetName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: sheet.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, sheet.sheetName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadExcel,\n      children: \"Download Modified Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(ExcelEditor, \"3dl797bwPhNlaMfYetEm31+uNLM=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","axios","XLSX","useTable","useSortBy","useFilters","jsxDEV","_jsxDEV","ExcelEditor","_s2","_s","$RefreshSig$","sheets","setSheets","fileName","setFileName","handleFileUpload","e","file","target","files","name","formData","FormData","append","response","post","headers","data","handleCellChange","sheetIndex","rowIndex","colKey","value","updatedSheets","downloadExcel","responseType","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","Table","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","_jsxFileName","lineNumber","columnNumber","canFilter","row","getRowProps","cells","cell","getCellProps","onChange","index","id","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","undefined","placeholder","sheet","Object","keys","key","Header","accessor","Filter","sheetName","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["// src/components/Dashboard/ExcelEditor.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport * as XLSX from 'xlsx';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\n\r\nconst ExcelEditor = () => {\r\n  const [sheets, setSheets] = useState([]);\r\n  const [fileName, setFileName] = useState('');\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    setFileName(file.name);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const response = await axios.post('/api/excel/upload', formData, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    });\r\n\r\n    setSheets(response.data.sheets);\r\n  };\r\n\r\n  const handleCellChange = (sheetIndex, rowIndex, colKey, value) => {\r\n    const updatedSheets = [...sheets];\r\n    updatedSheets[sheetIndex].data[rowIndex][colKey] = value;\r\n    setSheets(updatedSheets);\r\n  };\r\n\r\n  const downloadExcel = async () => {\r\n    const response = await axios.post('/api/excel/generate', { sheets }, { responseType: 'arraybuffer' });\r\n    const blob = new Blob([response.data], { type: response.headers['content-type'] });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'modified_' + fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' ðŸ”½'\r\n                        : ' ðŸ”¼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => (\r\n                  <td {...cell.getCellProps()}>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={cell.value}\r\n                      onChange={(e) => handleCellChange(0, row.index, cell.column.id, e.target.value)}\r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  const DefaultColumnFilter = ({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n  }) => {\r\n    return (\r\n      <input\r\n        value={filterValue || ''}\r\n        onChange={e => {\r\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n        }}\r\n        placeholder={`Search...`}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileUpload} />\r\n      {sheets.map((sheet, sheetIndex) => {\r\n        const columns = Object.keys(sheet.data[0]).map((key) => ({\r\n          Header: key,\r\n          accessor: key,\r\n          Filter: DefaultColumnFilter,\r\n        }));\r\n\r\n        return (\r\n          <div key={sheet.sheetName}>\r\n            <h3>{sheet.sheetName}</h3>\r\n            <Table columns={columns} data={sheet.data} />\r\n          </div>\r\n        );\r\n      })}\r\n      <button onClick={downloadExcel}>Download Modified Excel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}