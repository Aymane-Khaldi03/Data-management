{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\pages\\\\TelecomPacks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelecomPacks = () => {\n  _s();\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const firstSheetName = workbook.SheetNames[0];\n      const worksheet = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], {\n        header: 1\n      });\n      const header = worksheet[0];\n      const rows = worksheet.slice(1).map(row => {\n        const rowData = {};\n        header.forEach((col, i) => {\n          rowData[col] = row[i];\n        });\n        return rowData;\n      });\n      setColumns(header.map(col => ({\n        Header: col,\n        accessor: col\n      })));\n      setData(rows);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Telecom Packs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            style: {\n              border: '1px solid black',\n              padding: '8px'\n            },\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              style: {\n                border: '1px solid black',\n                padding: '8px'\n              },\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TelecomPacks, \"mDNgEvOsaStFPLZgINwD6cVta5w=\", false, function () {\n  return [useTable];\n});\n_c = TelecomPacks;\nexport default TelecomPacks;\nvar _c;\n$RefreshReg$(_c, \"TelecomPacks\");","map":{"version":3,"names":["React","useState","XLSX","useTable","jsxDEV","_jsxDEV","TelecomPacks","_s","columns","setColumns","data","setData","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","Uint8Array","result","workbook","read","type","firstSheetName","SheetNames","worksheet","utils","sheet_to_json","Sheets","header","rows","slice","map","row","rowData","forEach","col","i","Header","accessor","readAsArrayBuffer","getTableProps","getTableBodyProps","headerGroups","prepareRow","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","marginBottom","width","borderCollapse","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","border","render","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/pages/TelecomPacks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport { useTable } from 'react-table';\r\n\r\nconst TelecomPacks = () => {\r\n  const [columns, setColumns] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const data = new Uint8Array(e.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n\r\n      const firstSheetName = workbook.SheetNames[0];\r\n      const worksheet = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName], { header: 1 });\r\n\r\n      const header = worksheet[0];\r\n      const rows = worksheet.slice(1).map((row) => {\r\n        const rowData = {};\r\n        header.forEach((col, i) => {\r\n          rowData[col] = row[i];\r\n        });\r\n        return rowData;\r\n      });\r\n\r\n      setColumns(header.map((col) => ({ Header: col, accessor: col })));\r\n      setData(rows);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data });\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Telecom Packs</h2>\r\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} style={{ marginBottom: '20px' }} />\r\n      <table {...getTableProps()} style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()} style={{ border: '1px solid black', padding: '8px' }}>\r\n                  {column.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => (\r\n                  <td {...cell.getCellProps()} style={{ border: '1px solid black', padding: '8px' }}>\r\n                    {cell.render('Cell')}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPacks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}