{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ITEquipmentView.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa';\nimport './ITEquipmentView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEquipmentView = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [itEquipments, setITEquipments] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general');\n  const [filters, setFilters] = useState({});\n  const [sortBy, setSortBy] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const history = useHistory();\n  useEffect(() => {\n    fetchITEquipments();\n  }, []);\n  useEffect(() => {\n    setCurrentPage(1); // Reset to the first page whenever filters or sort change\n  }, [filters, sortBy]);\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\n    const updatedData = {\n      ...data\n    };\n    for (let key in updatedData) {\n      if (updatedData[key] === '' || updatedData[key] === null) {\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\n          updatedData[key] = null;\n        } else if (key === 'prix_achat') {\n          updatedData[key] = defaultNumber;\n        } else {\n          updatedData[key] = defaultValue;\n        }\n      }\n    }\n    return updatedData;\n  };\n  const fetchITEquipments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data && Array.isArray(response.data.equipments)) {\n        const data = response.data.equipments.map(({\n          createdAt,\n          updatedAt,\n          id,\n          ...rest\n        }) => setDefaultValues(rest));\n        setITEquipments(data);\n        setOriginalData(data);\n        const headers = Object.keys(data[0] || {});\n        const cols = [{\n          Header: '#',\n          accessor: (row, i) => i + 1,\n          disableFilters: true,\n          disableSortBy: true,\n          width: 50\n        }, ...headers.map(header => ({\n          Header: header.replace(/_/g, ' '),\n          accessor: header,\n          Filter: props => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n            ...props,\n            originalData: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 30\n          }, this)\n        }))];\n        setColumns(cols);\n      } else {\n        toast.error('Error fetching IT equipments');\n      }\n    } catch (error) {\n      toast.error('Error fetching IT equipments: ' + error.message);\n    }\n  };\n  const applyFilters = (data, filters) => {\n    let filteredData = data;\n    Object.keys(filters).forEach(id => {\n      if (filters[id] && filters[id].length > 0) {\n        filteredData = filteredData.filter(row => {\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\n          return filters[id].some(val => rowValue.includes(val.toString().toLowerCase()));\n        });\n      }\n    });\n    return filteredData;\n  };\n  const applySorting = (data, sortBy) => {\n    if (!sortBy.length) return data;\n    const sortByField = sortBy[0];\n    return data.sort((a, b) => {\n      const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\n      const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\n      if (aValue < bValue) {\n        return sortByField.desc ? 1 : -1;\n      }\n      if (aValue > bValue) {\n        return sortByField.desc ? -1 : 1;\n      }\n      return 0;\n    });\n  };\n  const filteredAndSortedData = useMemo(() => {\n    let data = applyFilters(originalData, filters);\n    data = applySorting(data, sortBy);\n    return data;\n  }, [originalData, filters, sortBy]);\n  const totalPages = useMemo(() => {\n    return Math.ceil(filteredAndSortedData.length / rowsPerPage);\n  }, [filteredAndSortedData, rowsPerPage]);\n  const currentRows = useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return filteredAndSortedData.slice(startIndex, endIndex);\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns.map(col => ({\n      ...col,\n      Filter: props => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n        ...props,\n        originalData: originalData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 26\n      }, this)\n    }))];\n  }, [columns, currentPage, rowsPerPage, originalData]);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page only\n  };\n  const handleDelete = (filterKey, value) => {\n    setFilters(prev => {\n      const updatedFilters = {\n        ...prev\n      };\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\n      if (updatedFilters[filterKey].length === 0) {\n        delete updatedFilters[filterKey];\n      }\n      return updatedFilters;\n    });\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"itequipment-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  const exportToExcel = data => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-back-button\",\n      onClick: () => history.push('/it-equipment'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itequipment-view-title\",\n      children: \"Afficher IT Equipments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-toggle-button\",\n      onClick: () => {\n        if (viewType === 'general') {\n          setViewType('filtered');\n          setITEquipments(filteredAndSortedData); // Display filtered data\n        } else {\n          setViewType('general');\n          setITEquipments(originalData); // Restore the original data\n        }\n      },\n      children: viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-selected-filters-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Filters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), Object.keys(filters).map(filterKey => filters[filterKey].map((filterValue, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"itequipment-view-filter-chip\",\n        children: [`${filterKey}: ${filterValue}`, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(filterKey, filterValue),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 48\n        }, this)]\n      }, `${filterKey}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: currentRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"itequipment-view-export-button\",\n        onClick: () => exportToExcel(viewType === 'general' ? itEquipments : filteredAndSortedData),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s2(ITEquipmentView, \"RiDIhXoxGd83KaseQrYPH6pc7G4=\", false, function () {\n  return [useHistory];\n});\n_c = ITEquipmentView;\nconst SelectColumnFilter = ({\n  column: {\n    filterValue = [],\n    setFilter,\n    id\n  },\n  originalData\n}) => {\n  _s3();\n  const [selectedOptions, setSelectedOptions] = useState(() => filterValue.map(val => ({\n    value: val,\n    label: val\n  })));\n  const options = useMemo(() => {\n    const optionsSet = new Set();\n    originalData.forEach(row => {\n      if (row[id] !== null && row[id] !== '------') {\n        optionsSet.add(row[id]);\n      }\n    });\n    return [...optionsSet].map(option => ({\n      value: option,\n      label: option\n    }));\n  }, [id, originalData]);\n  const handleChange = selected => {\n    const values = selected ? selected.map(option => option.value) : [];\n    setSelectedOptions(selected);\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\n  };\n  const handleDelete = (filterKey, value) => {\n    const updatedOptions = selectedOptions.filter(option => option.value !== value);\n    const values = updatedOptions.map(option => option.value);\n    setSelectedOptions(updatedOptions);\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOptions,\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"itequipment-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), selectedOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-selected-filters\",\n      children: selectedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"itequipment-view-filter-chip\",\n        children: [option.value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(id, option.value),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 30\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\n_s3(SelectColumnFilter, \"xXicgHQmvDuSs8Ws1n2AL6cZKNw=\");\n_c2 = SelectColumnFilter;\nexport default ITEquipmentView;\nvar _c, _c2;\n$RefreshReg$(_c, \"ITEquipmentView\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","ToastContainer","toast","FaSortUp","FaSortDown","FaSort","jsxDEV","_jsxDEV","ITEquipmentView","_s2","_s","$RefreshSig$","itEquipments","setITEquipments","originalData","setOriginalData","columns","setColumns","viewType","setViewType","filters","setFilters","sortBy","setSortBy","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","history","fetchITEquipments","setDefaultValues","data","defaultValue","defaultNumber","updatedData","key","includes","response","get","headers","Authorization","localStorage","getItem","Array","isArray","equipments","map","createdAt","updatedAt","id","rest","Object","keys","cols","Header","accessor","row","i","disableFilters","disableSortBy","width","header","replace","Filter","props","SelectColumnFilter","fileName","_jsxFileName","lineNumber","columnNumber","error","message","applyFilters","filteredData","forEach","length","filter","rowValue","toString","toLowerCase","some","val","applySorting","sortByField","sort","a","b","aValue","bValue","desc","filteredAndSortedData","totalPages","Math","ceil","currentRows","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","filteredColumns","col","handlePageNumberClick","pageNumber","handleRowsPerPageChange","event","parseInt","target","value","handleDelete","filterKey","prev","updatedFilters","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","onClick","push","filterValue","index","disabled","onChange","_c","setFilter","_s3","selectedOptions","setSelectedOptions","label","options","optionsSet","Set","add","option","handleChange","selected","values","undefined","updatedOptions","isMulti","placeholder","_c2","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ITEquipmentView.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa';\r\n\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general');\r\n  const [filters, setFilters] = useState({});\r\n  const [sortBy, setSortBy] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1); // Reset to the first page whenever filters or sort change\r\n  }, [filters, sortBy]);\r\n\r\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\r\n    const updatedData = { ...data };\r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          updatedData[key] = null;\r\n        } else if (key === 'prix_achat') {\r\n          updatedData[key] = defaultNumber;\r\n        } else {\r\n          updatedData[key] = defaultValue;\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };\r\n\r\n  const fetchITEquipments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.data && Array.isArray(response.data.equipments)) {\r\n        const data = response.data.equipments.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n        setITEquipments(data);\r\n        setOriginalData(data);\r\n\r\n        const headers = Object.keys(data[0] || {});\r\n        const cols = [\r\n          {\r\n            Header: '#',\r\n            accessor: (row, i) => i + 1,\r\n            disableFilters: true,\r\n            disableSortBy: true,\r\n            width: 50,\r\n          },\r\n          ...headers.map((header) => ({\r\n            Header: header.replace(/_/g, ' '),\r\n            accessor: header,\r\n            Filter: props => <SelectColumnFilter {...props} originalData={data} />,\r\n          })),\r\n        ];\r\n\r\n        setColumns(cols);\r\n      } else {\r\n        toast.error('Error fetching IT equipments');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error fetching IT equipments: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const applyFilters = (data, filters) => {\r\n    let filteredData = data;\r\n\r\n    Object.keys(filters).forEach(id => {\r\n      if (filters[id] && filters[id].length > 0) {\r\n        filteredData = filteredData.filter(row => {\r\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\r\n          return filters[id].some(val => rowValue.includes(val.toString().toLowerCase()));\r\n        });\r\n      }\r\n    });\r\n\r\n    return filteredData;\r\n  };\r\n\r\n  const applySorting = (data, sortBy) => {\r\n    if (!sortBy.length) return data;\r\n\r\n    const sortByField = sortBy[0];\r\n    return data.sort((a, b) => {\r\n      const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\r\n      const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\r\n      if (aValue < bValue) {\r\n        return sortByField.desc ? 1 : -1;\r\n      }\r\n      if (aValue > bValue) {\r\n        return sortByField.desc ? -1 : 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  const filteredAndSortedData = useMemo(() => {\r\n    let data = applyFilters(originalData, filters);\r\n    data = applySorting(data, sortBy);\r\n    return data;\r\n  }, [originalData, filters, sortBy]);\r\n\r\n  const totalPages = useMemo(() => {\r\n    return Math.ceil(filteredAndSortedData.length / rowsPerPage);\r\n  }, [filteredAndSortedData, rowsPerPage]);\r\n\r\n  const currentRows = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredAndSortedData.slice(startIndex, endIndex);\r\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\r\n\r\n  const columnsWithRowNumber = useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [\r\n      rowNumberColumn,\r\n      ...filteredColumns.map(col => ({\r\n        ...col,\r\n        Filter: props => <SelectColumnFilter {...props} originalData={originalData} />,\r\n      }))\r\n    ];\r\n  }, [columns, currentPage, rowsPerPage, originalData]);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page only\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    setFilters(prev => {\r\n      const updatedFilters = { ...prev };\r\n      updatedFilters[filterKey] = updatedFilters[filterKey].filter(val => val !== value);\r\n      if (updatedFilters[filterKey].length === 0) {\r\n        delete updatedFilters[filterKey];\r\n      }\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <ToastContainer />\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <button\r\n        className=\"itequipment-view-toggle-button\"\r\n        onClick={() => {\r\n          if (viewType === 'general') {\r\n            setViewType('filtered');\r\n            setITEquipments(filteredAndSortedData); // Display filtered data\r\n          } else {\r\n            setViewType('general');\r\n            setITEquipments(originalData); // Restore the original data\r\n          }\r\n        }}\r\n      >\r\n        {viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'}\r\n      </button>\r\n      <div className=\"itequipment-view-selected-filters-container\">\r\n        <h3>Selected Filters:</h3>\r\n        {Object.keys(filters).map((filterKey) => (\r\n          filters[filterKey].map((filterValue, index) => (\r\n            <span key={`${filterKey}-${index}`} className=\"itequipment-view-filter-chip\">\r\n              {`${filterKey}: ${filterValue}`} <button onClick={() => handleDelete(filterKey, filterValue)}>x</button>\r\n            </span>\r\n          ))\r\n        ))}\r\n      </div>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={currentRows}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? itEquipments : filteredAndSortedData)}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({\r\n  column: { filterValue = [], setFilter, id },\r\n  originalData\r\n}) => {\r\n  const [selectedOptions, setSelectedOptions] = useState(() => \r\n    filterValue.map(val => ({ value: val, label: val }))\r\n  );\r\n\r\n  const options = useMemo(() => {\r\n    const optionsSet = new Set();\r\n    originalData.forEach(row => {\r\n      if (row[id] !== null && row[id] !== '------') {\r\n        optionsSet.add(row[id]);\r\n      }\r\n    });\r\n    return [...optionsSet].map(option => ({ value: option, label: option }));\r\n  }, [id, originalData]);\r\n\r\n  const handleChange = (selected) => {\r\n    const values = selected ? selected.map(option => option.value) : [];\r\n    setSelectedOptions(selected);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n  };\r\n\r\n  const handleDelete = (filterKey, value) => {\r\n    const updatedOptions = selectedOptions.filter(option => option.value !== value);\r\n    const values = updatedOptions.map(option => option.value);\r\n    setSelectedOptions(updatedOptions);\r\n    setFilter(values.length ? values : undefined); // Use undefined to clear the filter\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-filter-container\">\r\n      <Select\r\n        value={selectedOptions}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n      {selectedOptions.length > 0 && (\r\n        <div className=\"itequipment-view-selected-filters\">\r\n          {selectedOptions.map((option, index) => (\r\n            <span key={index} className=\"itequipment-view-filter-chip\">\r\n              {option.value} <button onClick={() => handleDelete(id, option.value)}>x</button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}