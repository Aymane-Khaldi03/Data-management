{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ITEquipmentView.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\n\nimport './ITEquipmentView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEquipmentView = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  useEffect(() => {\n    toast.configure();\n  }, []);\n  const [itEquipments, setITEquipments] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\n  const history = useHistory();\n\n  // Setting the current page/rows and total pages\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalPages, setTotalPages] = useState(1);\n  const [filters, setFilters] = useState({});\n  const [sortBy, setSortBy] = useState([]);\n  useEffect(() => {\n    setTotalPages(Math.ceil(itEquipments.length / rowsPerPage));\n  }, [itEquipments.length, rowsPerPage]);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page only\n  };\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\n    const updatedData = {\n      ...data\n    };\n    for (let key in updatedData) {\n      if (updatedData[key] === '' || updatedData[key] === null) {\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\n          updatedData[key] = null;\n        } else if (key === 'prix_achat') {\n          updatedData[key] = defaultNumber;\n        } else {\n          updatedData[key] = defaultValue;\n        }\n      }\n    }\n    return updatedData;\n  };\n  const measureTextWidth = (text, font = '12px Arial') => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = font;\n    return context.measureText(text).width;\n  };\n  const fetchITEquipments = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data && Array.isArray(response.data.equipments)) {\n        const data = response.data.equipments.map(({\n          createdAt,\n          updatedAt,\n          id,\n          ...rest\n        }) => setDefaultValues(rest));\n        console.log('Fetched data from server:', data.length);\n        setITEquipments(data);\n        setOriginalData(data);\n        const headers = Object.keys(data[0] || {});\n        const maxWidths = headers.reduce((acc, header) => {\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\n          const maxLength = Math.max(headerWidth, ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : '')));\n          acc[header] = maxLength;\n          return acc;\n        }, {});\n        const cols = [{\n          Header: '#',\n          accessor: (row, i) => i + 1,\n          disableFilters: true,\n          disableSortBy: true,\n          width: 50\n        }, ...headers.map(header => ({\n          Header: header.replace(/_/g, ' '),\n          accessor: header,\n          Filter: props => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n            ...props,\n            originalData: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 30\n          }, this),\n          // Pass originalData here\n          width: maxWidths[header] + 20\n        }))];\n        setColumns(cols);\n      } else {\n        toast.error('Erreur lors de la récupération des équipements informatiques : format de réponse inattendu');\n      }\n    } catch (error) {\n      toast.error('Erreur lors de la récupération des équipements informatiques : ' + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchITEquipments();\n  }, []);\n  const filteredAndSortedData = React.useMemo(() => {\n    let filteredData = originalData; // Use originalData for filtering\n\n    Object.keys(filters).forEach(id => {\n      if (filters[id] && filters[id].length > 0) {\n        filteredData = filteredData.filter(row => {\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\n          return filters[id].some(val => rowValue.includes(val.toString().toLowerCase()));\n        });\n      }\n    });\n    if (sortBy.length) {\n      const sortByField = sortBy[0];\n      filteredData = filteredData.sort((a, b) => {\n        const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\n        const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\n        if (aValue < bValue) {\n          return sortByField.desc ? 1 : -1;\n        }\n        if (aValue > bValue) {\n          return sortByField.desc ? -1 : 1;\n        }\n        return 0;\n      });\n    }\n    return filteredData;\n  }, [originalData, filters, sortBy]);\n  const currentRows = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return filteredAndSortedData.slice(startIndex, endIndex);\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = React.useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns.map(col => ({\n      ...col,\n      Filter: props => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n        ...props,\n        originalData: originalData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 26\n      }, this) // Pass originalData here\n    }))];\n  }, [columns, currentPage, rowsPerPage, originalData]);\n  const handleFilterClick = event => {\n    event.stopPropagation();\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"itequipment-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: handleFilterClick,\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  const SelectColumnFilter = ({\n    column: {\n      filterValue,\n      setFilter,\n      id\n    },\n    originalData\n  }) => {\n    _s2();\n    const options = React.useMemo(() => {\n      const optionsSet = new Set();\n      originalData.forEach(row => {\n        if (row[id] !== null && row[id] !== '------') {\n          optionsSet.add(row[id]);\n        }\n      });\n      return [...optionsSet].map(option => ({\n        value: option,\n        label: option\n      }));\n    }, [id, originalData]);\n    const handleChange = selectedOptions => {\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n    };\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: options.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filter by...',\n      className: \"itequipment-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n  const exportToExcel = data => {\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\n  };\n  const filterData = data => {\n    return data.filter(item => {\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\n      return requiredFields.every(field => item[field] && item[field] !== '------');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itequipment-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-back-button\",\n      onClick: () => history.push('/it-equipment'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itequipment-view-title\",\n      children: \"Afficher IT Equipments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"itequipment-view-toggle-button\",\n      onClick: () => {\n        if (viewType === 'general') {\n          setViewType('filtered');\n          const filtered = filterData(originalData);\n          console.log('Filtered data to display:', filtered); // Additional debug logging\n          setITEquipments(filtered);\n        } else {\n          setViewType('general');\n          setITEquipments(originalData); // Restore the original data\n        }\n      },\n      children: viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: currentRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itequipment-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"itequipment-view-export-button\",\n        onClick: () => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments)),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s3(ITEquipmentView, \"oo91mppxOEZhhytXiAmwiNc//QI=\", false, function () {\n  return [useHistory];\n});\n_c = ITEquipmentView;\nexport default ITEquipmentView;\nvar _c;\n$RefreshReg$(_c, \"ITEquipmentView\");","map":{"version":3,"names":["React","useState","useEffect","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","ToastContainer","toast","confirmAlert","FaSortUp","FaSortDown","FaSort","jsxDEV","_jsxDEV","ITEquipmentView","_s3","_s","$RefreshSig$","_s2","configure","itEquipments","setITEquipments","originalData","setOriginalData","columns","setColumns","viewType","setViewType","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalPages","setTotalPages","filters","setFilters","sortBy","setSortBy","Math","ceil","length","handlePageNumberClick","pageNumber","handleRowsPerPageChange","event","parseInt","target","value","setDefaultValues","data","defaultValue","defaultNumber","updatedData","key","includes","measureTextWidth","text","font","canvas","document","createElement","context","getContext","measureText","width","fetchITEquipments","response","get","headers","Authorization","localStorage","getItem","Array","isArray","equipments","map","createdAt","updatedAt","id","rest","console","log","Object","keys","maxWidths","reduce","acc","header","headerWidth","replace","maxLength","max","row","toString","cols","Header","accessor","i","disableFilters","disableSortBy","Filter","props","SelectColumnFilter","fileName","_jsxFileName","lineNumber","columnNumber","error","message","filteredAndSortedData","useMemo","filteredData","forEach","filter","rowValue","toLowerCase","some","val","sortByField","sort","a","b","aValue","bValue","desc","currentRows","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","filteredColumns","col","handleFilterClick","stopPropagation","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","onClick","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","filterValue","setFilter","options","optionsSet","Set","add","option","label","handleChange","selectedOptions","undefined","onChange","isMulti","placeholder","exportToExcel","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","filterData","item","requiredFields","every","field","push","filtered","disabled","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ITEquipmentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\r\n\r\nimport './ITEquipmentView.css';\r\n\r\nconst ITEquipmentView = () => {\r\n  useEffect(() => {\r\n    toast.configure();\r\n  }, []);\r\n\r\n  const [itEquipments, setITEquipments] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general'); // State to toggle between tables\r\n  const history = useHistory();\r\n\r\n  // Setting the current page/rows and total pages\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  const [filters, setFilters] = useState({});\r\n  const [sortBy, setSortBy] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(itEquipments.length / rowsPerPage));\r\n  }, [itEquipments.length, rowsPerPage]);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page only\r\n  };\r\n\r\n  const setDefaultValues = (data, defaultValue = '------', defaultNumber = 0) => {\r\n    const updatedData = { ...data };\r\n    for (let key in updatedData) {\r\n      if (updatedData[key] === '' || updatedData[key] === null) {\r\n        if (['date_installation', 'fin_garantie', 'date_achat', 'date_livraison', 'date_sortie'].includes(key)) {\r\n          updatedData[key] = null;\r\n        } else if (key === 'prix_achat') {\r\n          updatedData[key] = defaultNumber;\r\n        } else {\r\n          updatedData[key] = defaultValue;\r\n        }\r\n      }\r\n    }\r\n    return updatedData;\r\n  };\r\n\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n  const fetchITEquipments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/it-equipments', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.data && Array.isArray(response.data.equipments)) {\r\n        const data = response.data.equipments.map(({ createdAt, updatedAt, id, ...rest }) => setDefaultValues(rest));\r\n        console.log('Fetched data from server:', data.length);\r\n        setITEquipments(data);\r\n        setOriginalData(data);\r\n\r\n        const headers = Object.keys(data[0] || {});\r\n        const maxWidths = headers.reduce((acc, header) => {\r\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n          const maxLength = Math.max(\r\n            headerWidth,\r\n            ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n          );\r\n          acc[header] = maxLength;\r\n          return acc;\r\n        }, {});\r\n\r\n        const cols = [\r\n          {\r\n            Header: '#',\r\n            accessor: (row, i) => i + 1,\r\n            disableFilters: true,\r\n            disableSortBy: true,\r\n            width: 50,\r\n          },\r\n          ...headers.map((header) => ({\r\n            Header: header.replace(/_/g, ' '),\r\n            accessor: header,\r\n            Filter: props => <SelectColumnFilter {...props} originalData={data} />, // Pass originalData here\r\n            width: maxWidths[header] + 20,\r\n          })),\r\n        ];\r\n\r\n        setColumns(cols);\r\n      } else {\r\n        toast.error('Erreur lors de la récupération des équipements informatiques : format de réponse inattendu');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Erreur lors de la récupération des équipements informatiques : ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchITEquipments();\r\n  }, []);\r\n\r\n  const filteredAndSortedData = React.useMemo(() => {\r\n    let filteredData = originalData; // Use originalData for filtering\r\n\r\n    Object.keys(filters).forEach(id => {\r\n      if (filters[id] && filters[id].length > 0) {\r\n        filteredData = filteredData.filter(row => {\r\n          const rowValue = row[id] != null ? row[id].toString().toLowerCase() : '';\r\n          return filters[id].some(val => rowValue.includes(val.toString().toLowerCase()));\r\n        });\r\n      }\r\n    });\r\n\r\n    if (sortBy.length) {\r\n      const sortByField = sortBy[0];\r\n      filteredData = filteredData.sort((a, b) => {\r\n        const aValue = a[sortByField.id] != null ? a[sortByField.id].toString() : '';\r\n        const bValue = b[sortByField.id] != null ? b[sortByField.id].toString() : '';\r\n        if (aValue < bValue) {\r\n          return sortByField.desc ? 1 : -1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return sortByField.desc ? -1 : 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    return filteredData;\r\n  }, [originalData, filters, sortBy]);\r\n\r\n  const currentRows = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return filteredAndSortedData.slice(startIndex, endIndex);\r\n  }, [filteredAndSortedData, currentPage, rowsPerPage]);\r\n\r\n  const columnsWithRowNumber = React.useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [\r\n      rowNumberColumn,\r\n      ...filteredColumns.map(col => ({\r\n        ...col,\r\n        Filter: props => <SelectColumnFilter {...props} originalData={originalData} />, // Pass originalData here\r\n      }))\r\n    ];\r\n  }, [columns, currentPage, rowsPerPage, originalData]);\r\n\r\n  const handleFilterClick = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className=\"itequipment-view-table-container\">\r\n        <table {...getTableProps()} className=\"itequipment-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div onClick={handleFilterClick}>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'itequipment-view-row-even' : 'itequipment-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const SelectColumnFilter = ({\r\n    column: { filterValue, setFilter, id },\r\n    originalData\r\n  }) => {\r\n    const options = React.useMemo(() => {\r\n      const optionsSet = new Set();\r\n      originalData.forEach(row => {\r\n        if (row[id] !== null && row[id] !== '------') {\r\n          optionsSet.add(row[id]);\r\n        }\r\n      });\r\n      return [...optionsSet].map(option => ({ value: option, label: option }));\r\n    }, [id, originalData]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filter by...'}\r\n        className=\"itequipment-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"ITEquipments\");\r\n    XLSX.writeFile(wb, \"ITEquipments.xlsx\");\r\n  };\r\n\r\n  const filterData = (data) => {\r\n    return data.filter(item => {\r\n      const requiredFields = ['categorie', 'marque', 'model', 'statut', 'type_acquisition'];\r\n      return requiredFields.every(field => item[field] && item[field] !== '------');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"itequipment-view-container\">\r\n      <ToastContainer />\r\n      <button className=\"itequipment-view-back-button\" onClick={() => history.push('/it-equipment')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"itequipment-view-title\">Afficher IT Equipments</h1>\r\n      <button\r\n        className=\"itequipment-view-toggle-button\"\r\n        onClick={() => {\r\n          if (viewType === 'general') {\r\n            setViewType('filtered');\r\n            const filtered = filterData(originalData);\r\n            console.log('Filtered data to display:', filtered); // Additional debug logging\r\n            setITEquipments(filtered);\r\n          } else {\r\n            setViewType('general');\r\n            setITEquipments(originalData); // Restore the original data\r\n          }\r\n        }}\r\n      >\r\n        {viewType === 'general' ? 'Afficher les équipements filtrés' : 'Afficher les équipements informatiques généraux'}\r\n      </button>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={currentRows}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>\r\n          Page {currentPage} of {totalPages}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"itequipment-view-footer\">\r\n        <button\r\n          className=\"itequipment-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? itEquipments : filterData(itEquipments))}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ITEquipmentView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}