{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ExcelEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [table, setTable] = useState('');\n  const [schema, setSchema] = useState(null);\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        if (table) {\n          const response = await axios.get(`http://localhost:5000/api/schema/${table}`);\n          setSchema(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching schema:', error);\n        setSchema(null);\n      }\n    };\n    fetchSchema();\n  }, [table]);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    try {\n      if (!selectedFile || !table) {\n        alert('Please select a table and a file.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      console.log('File uploaded successfully:', response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('Error uploading file: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Excel File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"table\",\n        children: \"Select Table:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"table\",\n        value: table,\n        onChange: e => setTable(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a table\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"it_equipments\",\n          children: \"IT Equipments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telecom_pack\",\n          children: \"Telecom Pack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telephone_lines\",\n          children: \"Telephone Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: \"Select Excel file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), schema && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Schema for \", table]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(schema, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelEditor, \"yap4U/ZYWZUOzeT4a/blbmQcl/Y=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExcelEditor","_s","selectedFile","setSelectedFile","table","setTable","schema","setSchema","fetchSchema","response","get","data","error","console","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","post","headers","Authorization","localStorage","getItem","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","type","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ExcelEditor.css';\r\n\r\nconst ExcelEditor = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [table, setTable] = useState('');\r\n  const [schema, setSchema] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSchema = async () => {\r\n      try {\r\n        if (table) {\r\n          const response = await axios.get(`http://localhost:5000/api/schema/${table}`);\r\n          setSchema(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching schema:', error);\r\n        setSchema(null);\r\n      }\r\n    };\r\n    fetchSchema();\r\n  }, [table]);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !table) {\r\n        alert('Please select a table and a file.');\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('file', selectedFile);\r\n\r\n      const response = await axios.post(`http://localhost:5000/api/upload/${table}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      console.log('File uploaded successfully:', response.data);\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      alert('Error uploading file: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-editor\">\r\n      <h1>Excel File Upload</h1>\r\n      <div>\r\n        <label htmlFor=\"table\">Select Table:</label>\r\n        <select id=\"table\" value={table} onChange={(e) => setTable(e.target.value)}>\r\n          <option value=\"\">Select a table</option>\r\n          <option value=\"it_equipments\">IT Equipments</option>\r\n          <option value=\"telecom_pack\">Telecom Pack</option>\r\n          <option value=\"telephone_lines\">Telephone Lines</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"file\">Select Excel file</label>\r\n        <input type=\"file\" id=\"file\" onChange={handleFileChange} />\r\n      </div>\r\n      <button onClick={handleUpload}>Upload</button>\r\n      {schema && (\r\n        <div>\r\n          <h3>Schema for {table}</h3>\r\n          <pre>{JSON.stringify(schema, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}