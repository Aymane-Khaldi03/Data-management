{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelecomPackView.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport * as XLSX from 'xlsx';\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\nimport './TelecomPackView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TelecomPackView = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [telecomPacks, setTelecomPacks] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [filterOptions, setFilterOptions] = useState({});\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handlePageNumberClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setCurrentPage(1); // Reset to the first page\n  };\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return telecomPacks.slice(startIndex, endIndex);\n  }, [telecomPacks, currentPage, rowsPerPage]);\n  const columnsWithRowNumber = useMemo(() => {\n    const rowNumberColumn = {\n      Header: '#',\n      id: 'rowNumber',\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n      disableFilters: true,\n      disableSortBy: true,\n      width: 50\n    };\n    const filteredColumns = columns.filter(col => col.Header !== '#');\n    return [rowNumberColumn, ...filteredColumns];\n  }, [columns, currentPage, rowsPerPage]);\n  const measureTextWidth = (text, font = '12px Arial') => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = font;\n    return context.measureText(text).width;\n  };\n  const setDefaultValues = (data, defaultValue = '------') => {\n    return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n      if (value === '' || value === null) {\n        if (['dateAbonnement', 'dateReengagement', 'dateEtat'].includes(key)) {\n          return [key, null]; // Set date fields to null if empty\n        } else {\n          return [key, defaultValue]; // Set other fields to default value\n        }\n      }\n      return [key, value];\n    }));\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '------';\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0]; // Format date to YYYY-MM-DD\n  };\n  const fetchTelecomPacks = async (appliedFilters = {}) => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/telecom-packs', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        params: appliedFilters\n      });\n      const data = response.data.map(pack => {\n        const {\n          createdat,\n          updatedat,\n          id,\n          produit,\n          ...rest\n        } = pack; // Exclude createdAt, updatedAt, id, and produit here\n        const formattedPack = setDefaultValues(rest);\n        return {\n          ...formattedPack,\n          dateAbonnement: formatDate(formattedPack.dateAbonnement),\n          dateReengagement: formatDate(formattedPack.dateReengagement),\n          dateEtat: formatDate(formattedPack.dateEtat)\n        };\n      });\n      setTelecomPacks(data);\n      const headers = Object.keys(data[0] || {});\n      const filteredHeaders = headers.filter(header => !['createdat', 'updatedat', 'produit'].includes(header)); // Exclude createdAt, updatedAt, and produit here\n      const maxWidths = filteredHeaders.reduce((acc, header) => {\n        const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\n        const maxLength = Math.max(headerWidth, ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : '')));\n        acc[header] = maxLength;\n        return acc;\n      }, {});\n      const cols = [{\n        Header: '#',\n        accessor: (row, i) => i + 1,\n        disableFilters: true,\n        disableSortBy: true,\n        width: 50\n      }, ...filteredHeaders.map(header => ({\n        Header: header.replace(/_/g, ' '),\n        accessor: header,\n        Filter: SelectColumnFilter,\n        width: maxWidths[header] + 20\n      }))];\n      setColumns(cols);\n    } catch (error) {\n      console.error('Error fetching Telecom Packs:', error);\n      alert('Error fetching Telecom Packs: ' + error.message);\n    }\n  };\n  const fetchFilterOptions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/telecom-packs/filter-options', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setFilterOptions(response.data);\n    } catch (error) {\n      console.error('Error fetching filter options:', error);\n      alert('Error fetching filter options: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchTelecomPacks(filters);\n  }, [filters]);\n  useEffect(() => {\n    fetchFilterOptions();\n  }, []);\n  const handleFilterChange = (field, selectedOptions) => {\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [field]: values\n    }));\n  };\n  const SelectColumnFilter = ({\n    column: {\n      filterValue,\n      setFilter,\n      id\n    }\n  }) => {\n    _s();\n    const options = useMemo(() => {\n      return filterOptions[id] ? filterOptions[id].map(option => ({\n        value: option,\n        label: option\n      })) : [];\n    }, [id, filterOptions]);\n    const handleChange = selectedOptions => {\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n      handleFilterChange(id, selectedOptions); // Update the filters state\n    };\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: options.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: options,\n      isMulti: true,\n      placeholder: 'Filtrer par...',\n      className: \"telecompack-view-filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n  const exportToExcel = data => {\n    const filteredData = data.map(({\n      createdat,\n      updatedat,\n      id,\n      produit,\n      ...rest\n    }) => rest); // Exclude createdAt, updatedat, id, and produit here\n    const ws = XLSX.utils.json_to_sheet(filteredData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"TelecomPacks\");\n    XLSX.writeFile(wb, \"Parc_Telecom.xlsx\");\n  };\n  const Table = ({\n    columns,\n    data\n  }) => {\n    _s2();\n    const defaultColumn = {\n      minWidth: 30,\n      width: 150,\n      maxWidth: 400\n    };\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data,\n      defaultColumn\n    }, useFilters, useSortBy);\n    const handleFilterClick = event => {\n      event.stopPropagation();\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telecompack-view-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"telecompack-view-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: column.width\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FaSortDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSortUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(FaSort, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: handleFilterClick,\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map((row, rowIndex) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: rowIndex % 2 === 0 ? 'telecompack-view-row-even' : 'telecompack-view-row-odd',\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n    return [useTable];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telecompack-view-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telecompack-view-back-button\",\n      onClick: () => history.push('/telecom-packs'),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"telecompack-view-title\",\n      children: \"Afficher Telecom Packs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columnsWithRowNumber,\n      data: paginatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage - 1),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", Math.ceil(telecomPacks.length / rowsPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(currentPage + 1),\n        disabled: currentPage === Math.ceil(telecomPacks.length / rowsPerPage),\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageNumberClick(Math.ceil(telecomPacks.length / rowsPerPage)),\n        disabled: currentPage === Math.ceil(telecomPacks.length / rowsPerPage),\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: handleRowsPerPageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"telecompack-view-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"telecompack-view-export-button\",\n        onClick: () => exportToExcel(telecomPacks),\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s3(TelecomPackView, \"VjGa+9FlcavmKxHr607/hUukZgQ=\", false, function () {\n  return [useHistory];\n});\n_c = TelecomPackView;\nexport default TelecomPackView;\nvar _c;\n$RefreshReg$(_c, \"TelecomPackView\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useTable","useSortBy","useFilters","Select","useHistory","XLSX","FaSortUp","FaSortDown","FaSort","jsxDEV","_jsxDEV","TelecomPackView","_s3","_s","$RefreshSig$","_s2","telecomPacks","setTelecomPacks","columns","setColumns","filters","setFilters","filterOptions","setFilterOptions","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","handlePageNumberClick","pageNumber","handleRowsPerPageChange","event","parseInt","target","value","paginatedData","startIndex","endIndex","slice","columnsWithRowNumber","rowNumberColumn","Header","id","accessor","row","i","disableFilters","disableSortBy","width","filteredColumns","filter","col","measureTextWidth","text","font","canvas","document","createElement","context","getContext","measureText","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","includes","formatDate","dateString","date","Date","toISOString","split","fetchTelecomPacks","appliedFilters","response","get","headers","Authorization","localStorage","getItem","params","pack","createdat","updatedat","produit","rest","formattedPack","dateAbonnement","dateReengagement","dateEtat","keys","filteredHeaders","header","maxWidths","reduce","acc","headerWidth","replace","maxLength","Math","max","toString","cols","Filter","SelectColumnFilter","error","console","alert","message","fetchFilterOptions","handleFilterChange","field","selectedOptions","values","option","prevFilters","column","filterValue","setFilter","options","label","handleChange","undefined","onChange","isMulti","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","exportToExcel","filteredData","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","Table","defaultColumn","minWidth","maxWidth","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleFilterClick","stopPropagation","children","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","style","render","isSorted","isSortedDesc","onClick","canFilter","rowIndex","getRowProps","cells","cell","getCellProps","push","length","disabled","ceil","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelecomPackView.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport { FaSortUp, FaSortDown, FaSort } from 'react-icons/fa'; // Import icons\r\nimport './TelecomPackView.css';\r\n\r\nconst TelecomPackView = () => {\r\n  const [telecomPacks, setTelecomPacks] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [filters, setFilters] = useState({});\r\n  const [filterOptions, setFilterOptions] = useState({});\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handlePageNumberClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleRowsPerPageChange = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setCurrentPage(1); // Reset to the first page\r\n  };\r\n\r\n  const paginatedData = useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return telecomPacks.slice(startIndex, endIndex);\r\n  }, [telecomPacks, currentPage, rowsPerPage]);\r\n\r\n  const columnsWithRowNumber = useMemo(() => {\r\n    const rowNumberColumn = {\r\n      Header: '#',\r\n      id: 'rowNumber',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    };\r\n\r\n    const filteredColumns = columns.filter(col => col.Header !== '#');\r\n    return [rowNumberColumn, ...filteredColumns];\r\n  }, [columns, currentPage, rowsPerPage]);\r\n\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n  const setDefaultValues = (data, defaultValue = '------') => {\r\n    return Object.fromEntries(\r\n      Object.entries(data).map(([key, value]) => {\r\n        if (value === '' || value === null) {\r\n          if (['dateAbonnement', 'dateReengagement', 'dateEtat'].includes(key)) {\r\n            return [key, null];  // Set date fields to null if empty\r\n          } else {\r\n            return [key, defaultValue];  // Set other fields to default value\r\n          }\r\n        }\r\n        return [key, value];\r\n      })\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '------';\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0]; // Format date to YYYY-MM-DD\r\n  };\r\n\r\n  const fetchTelecomPacks = async (appliedFilters = {}) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/telecom-packs', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        params: appliedFilters,\r\n      });\r\n\r\n      const data = response.data.map(pack => {\r\n        const { createdat, updatedat, id, produit, ...rest } = pack; // Exclude createdAt, updatedAt, id, and produit here\r\n        const formattedPack = setDefaultValues(rest);\r\n        return {\r\n          ...formattedPack,\r\n          dateAbonnement: formatDate(formattedPack.dateAbonnement),\r\n          dateReengagement: formatDate(formattedPack.dateReengagement),\r\n          dateEtat: formatDate(formattedPack.dateEtat),\r\n        };\r\n      });\r\n\r\n      setTelecomPacks(data);\r\n\r\n      const headers = Object.keys(data[0] || {});\r\n      const filteredHeaders = headers.filter(header => !['createdat', 'updatedat', 'produit'].includes(header)); // Exclude createdAt, updatedAt, and produit here\r\n      const maxWidths = filteredHeaders.reduce((acc, header) => {\r\n        const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n        const maxLength = Math.max(\r\n          headerWidth,\r\n          ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n        );\r\n        acc[header] = maxLength;\r\n        return acc;\r\n      }, {});\r\n\r\n      const cols = [\r\n        {\r\n          Header: '#',\r\n          accessor: (row, i) => i + 1,\r\n          disableFilters: true,\r\n          disableSortBy: true,\r\n          width: 50,\r\n        },\r\n        ...filteredHeaders.map((header) => ({\r\n          Header: header.replace(/_/g, ' '),\r\n          accessor: header,\r\n          Filter: SelectColumnFilter,\r\n          width: maxWidths[header] + 20,\r\n        })),\r\n      ];\r\n\r\n      setColumns(cols);\r\n    } catch (error) {\r\n      console.error('Error fetching Telecom Packs:', error);\r\n      alert('Error fetching Telecom Packs: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const fetchFilterOptions = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/telecom-packs/filter-options', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setFilterOptions(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching filter options:', error);\r\n      alert('Error fetching filter options: ' + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTelecomPacks(filters);\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    fetchFilterOptions();\r\n  }, []);\r\n\r\n  const handleFilterChange = (field, selectedOptions) => {\r\n    const values = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    setFilters(prevFilters => ({ ...prevFilters, [field]: values }));\r\n  };\r\n\r\n  const SelectColumnFilter = ({ column: { filterValue, setFilter, id } }) => {\r\n    const options = useMemo(() => {\r\n      return filterOptions[id] ? filterOptions[id].map(option => ({ value: option, label: option })) : [];\r\n    }, [id, filterOptions]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n      handleFilterChange(id, selectedOptions); // Update the filters state\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filtrer par...'}\r\n        className=\"telecompack-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const filteredData = data.map(({ createdat, updatedat, id, produit, ...rest }) => rest); // Exclude createdAt, updatedat, id, and produit here\r\n    const ws = XLSX.utils.json_to_sheet(filteredData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"TelecomPacks\");\r\n    XLSX.writeFile(wb, \"Parc_Telecom.xlsx\");\r\n  };\r\n\r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    const handleFilterClick = (event) => {\r\n      event.stopPropagation();\r\n    };\r\n    return (\r\n      <div className=\"telecompack-view-table-container\">\r\n        <table {...getTableProps()} className=\"telecompack-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted ? (\r\n                          column.isSortedDesc ? (\r\n                            <FaSortDown />\r\n                          ) : (\r\n                            <FaSortUp />\r\n                          )\r\n                        ) : (\r\n                          <FaSort />\r\n                        )}\r\n                      </span>\r\n                      <div onClick={handleFilterClick}>\r\n                        {column.canFilter ? column.render('Filter') : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'telecompack-view-row-even' : 'telecompack-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"telecompack-view-container\">\r\n      <button className=\"telecompack-view-back-button\" onClick={() => history.push('/telecom-packs')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"telecompack-view-title\">Afficher Telecom Packs</h1>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columnsWithRowNumber}\r\n          data={paginatedData}\r\n        />\r\n      )}\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => handlePageNumberClick(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => handlePageNumberClick(currentPage - 1)} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>\r\n          Page {currentPage} of {Math.ceil(telecomPacks.length / rowsPerPage)}\r\n        </span>\r\n        <button onClick={() => handlePageNumberClick(currentPage + 1)} disabled={currentPage === Math.ceil(telecomPacks.length / rowsPerPage)}>{'Suivant'}</button>\r\n        <button onClick={() => handlePageNumberClick(Math.ceil(telecomPacks.length / rowsPerPage))} disabled={currentPage === Math.ceil(telecomPacks.length / rowsPerPage)}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={handleRowsPerPageChange}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"telecompack-view-footer\">\r\n        <button\r\n          className=\"telecompack-view-export-button\"\r\n          onClick={() => exportToExcel(telecomPacks)}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPackView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}