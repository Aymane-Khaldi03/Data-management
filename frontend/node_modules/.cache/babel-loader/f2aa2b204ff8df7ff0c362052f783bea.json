{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\TelephoneLine.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useTable, useSortBy, useFilters } from 'react-table';\nimport Select from 'react-select';\nimport './TelephoneLine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setDefaultValues = (data, defaultValue = '------') => {\n  return Object.fromEntries(Object.entries(data).map(([key, value]) => {\n    if (value === '' || value === null) {\n      return [key, defaultValue];\n    }\n    return [key, value];\n  }));\n};\nconst getCustomHeaderName = header => {\n  const customNames = {\n    numero_de_gsm: 'Numero de GSM',\n    full_name: 'Nom et Prénom',\n    code_entite: 'Code Entité',\n    direction: 'Direction',\n    fonction: 'Fonction',\n    operateur: 'Opérateur',\n    categorie: 'Catégorie',\n    poste_GSM: 'Poste GSM'\n  };\n  return customNames[header] || header.replace(/_/g, ' ');\n};\nconst TelephoneLine = () => {\n  _s();\n  const [telephoneLines, setTelephoneLines] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [options, setOptions] = useState({});\n  const [filters, setFilters] = useState({});\n  const [newLine, setNewLine] = useState({\n    numero_de_gsm: '',\n    full_name: '',\n    code_entite: '',\n    direction: '',\n    fonction: '',\n    operateur: '',\n    categorie: '',\n    poste_GSM: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentLine, setCurrentLine] = useState(null);\n  const history = useHistory();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const totalPages = Math.ceil(telephoneLines.length / rowsPerPage);\n  useEffect(() => {\n    const fetchTelephoneLines = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = response.data.map(line => setDefaultValues(line));\n        setTelephoneLines(data);\n        setOriginalData(data);\n      } catch (error) {\n        console.error('Error fetching Telephone Lines:', error.message);\n        alert('Failed to fetch telephone lines: ' + error.message);\n      }\n    };\n    const fetchDropdownOptions = async () => {\n      try {\n        const fields = ['code_entite', 'direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'];\n        const fetchedOptions = {};\n        for (const field of fields) {\n          const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          fetchedOptions[field] = response.data.map(value => ({\n            value,\n            label: value\n          }));\n        }\n        setOptions(fetchedOptions);\n      } catch (error) {\n        console.error('Error fetching dropdown options:', error.message);\n        alert('Failed to fetch dropdown options: ' + error.message);\n      }\n    };\n    fetchTelephoneLines();\n    fetchDropdownOptions();\n  }, []);\n  const applyFilters = (data, appliedFilters) => {\n    let filteredData = data;\n    Object.keys(appliedFilters).forEach(filterKey => {\n      if (appliedFilters[filterKey].length > 0) {\n        filteredData = filteredData.filter(item => {\n          if (filterKey === 'numero_de_gsm' || filterKey === 'full_name') {\n            return appliedFilters[filterKey].some(filter => item[filterKey].toLowerCase().includes(filter.toLowerCase()));\n          }\n          return appliedFilters[filterKey].includes(item[filterKey]);\n        });\n      }\n    });\n    setTelephoneLines(filteredData);\n    setCurrentPage(1);\n  };\n  const handleFilterChange = (field, selectedOptions) => {\n    let values;\n    if (field === 'numero_de_gsm' || field === 'full_name') {\n      values = selectedOptions ? [selectedOptions.value] : [];\n    } else {\n      values = selectedOptions ? selectedOptions.map(option => option.value) : [];\n    }\n    setFilters(prevFilters => {\n      const updatedFilters = {\n        ...prevFilters,\n        [field]: values\n      };\n      applyFilters(originalData, updatedFilters);\n      return updatedFilters;\n    });\n  };\n  const handleRemoveFilter = (field, value) => {\n    const updatedValues = filters[field].filter(item => item !== value);\n    const updatedFilters = {\n      ...filters,\n      [field]: updatedValues\n    };\n    setFilters(updatedFilters);\n    applyFilters(originalData, updatedFilters);\n  };\n  const handleAddLine = async () => {\n    if (!newLine.numero_de_gsm) {\n      alert('The \"numero_de_gsm\" field must be filled.');\n      return;\n    }\n    try {\n      const formattedLine = setDefaultValues(newLine);\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const addedLine = response.data;\n      setTelephoneLines([...telephoneLines, addedLine]);\n      setNewLine({\n        numero_de_gsm: '',\n        full_name: '',\n        code_entite: '',\n        direction: '',\n        fonction: '',\n        operateur: '',\n        categorie: '',\n        poste_GSM: ''\n      });\n    } catch (error) {\n      console.error('Error adding Telephone Line:', error.message);\n      alert('Failed to add telephone line: ' + error.message);\n    }\n  };\n  const handleDeleteLine = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setTelephoneLines(prevLines => prevLines.filter(line => line.id !== id));\n    } catch (error) {\n      console.error('Error deleting Telephone Line:', error.message);\n      alert('Failed to delete telephone line: ' + error.message);\n    }\n  };\n  const handleModifyLine = line => {\n    setIsEditing(true);\n    setCurrentLine(line);\n  };\n  const handleUpdateLine = async () => {\n    try {\n      const formattedLine = setDefaultValues(currentLine);\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const updatedLine = response.data;\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\n      setIsEditing(false);\n      setCurrentLine(null);\n    } catch (error) {\n      console.error('Error updating Telephone Line:', error.message);\n      alert('Failed to update telephone line: ' + error.message);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (isEditing) {\n      setCurrentLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    } else {\n      setNewLine(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: '#',\n    accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\n    disableFilters: true,\n    disableSortBy: true,\n    width: 50\n  }, {\n    Header: 'Actions',\n    accessor: 'actions',\n    disableFilters: true,\n    disableSortBy: true,\n    width: 120,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modify-button\",\n        onClick: () => handleModifyLine(row.original),\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => handleDeleteLine(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)\n  }, ...Object.keys(newLine).map(key => ({\n    Header: getCustomHeaderName(key),\n    accessor: key,\n    Filter: ({\n      column\n    }) => /*#__PURE__*/_jsxDEV(SelectColumnFilter, {\n      column: column,\n      options: key === 'numero_de_gsm' || key === 'full_name' ? [] : options[key] || [],\n      placeholder: `Filtrer par ${getCustomHeaderName(key)}`,\n      handleFilterChange: handleFilterChange,\n      handleRemoveSelectedValue: handleRemoveFilter,\n      isSearchable: key === 'numero_de_gsm' || key === 'full_name'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)\n  }))], [newLine, currentPage, rowsPerPage, options, filters]);\n  const paginatedData = React.useMemo(() => {\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    const endIndex = startIndex + rowsPerPage;\n    return telephoneLines.slice(startIndex, endIndex);\n  }, [telephoneLines, currentPage, rowsPerPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"telephone-line-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"telephone-line-modify-back-button\",\n      onClick: () => history.goBack(),\n      children: \"\\u21A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Line T\\xE9l\\xE9phonique Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"form-table telephone-line-form-table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(newLine).map((key, index) => index % 3 === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(newLine).slice(index, index + 3).map(innerKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"telephone-line-form-label\",\n                children: getCustomHeaderName(innerKey)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this), ['code_entite', 'direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                options: options[innerKey] || [],\n                onChange: handleChange,\n                placeholder: `Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: innerKey.startsWith('date') ? 'date' : 'text',\n                name: innerKey,\n                value: isEditing ? currentLine[innerKey] : newLine[innerKey],\n                onChange: handleChange,\n                className: \"input-field\",\n                placeholder: innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 25\n              }, this)]\n            }, innerKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: handleUpdateLine,\n        children: \"Update Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAddLine,\n        children: \"Add Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filtres S\\xE9lectionn\\xE9s:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(filters).map(key => filters[key].length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [getCustomHeaderName(key), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), \" \", filters[key].map(value => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"filter-badge\",\n            children: [value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFilter(key, value),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 19\n          }, this))]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: paginatedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.max(prev - 1, 1)),\n        disabled: currentPage === 1,\n        children: 'Précédent'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(prev => Math.min(prev + 1, totalPages)),\n        disabled: currentPage === totalPages,\n        children: 'Suivant'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(totalPages),\n        disabled: currentPage === totalPages,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rowsPerPage,\n        onChange: e => setRowsPerPage(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 10,\n          children: \"Show 10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 25,\n          children: \"Show 25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 50,\n          children: \"Show 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 100,\n          children: \"Show 100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(TelephoneLine, \"M0Sojn8gCtYxVtzEwNoNC98V7to=\", false, function () {\n  return [useHistory];\n});\n_c = TelephoneLine;\nconst SelectColumnFilter = ({\n  column: {\n    filterValue,\n    setFilter,\n    id\n  },\n  options = [],\n  placeholder,\n  handleFilterChange,\n  handleRemoveSelectedValue\n}) => {\n  const filterOptions = options.map(option => ({\n    value: option,\n    label: option\n  }));\n  const handleChange = selectedOptions => {\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\n    handleFilterChange(id, selectedOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      value: filterOptions.filter(option => filterValue && filterValue.includes(option.value)),\n      onChange: handleChange,\n      options: filterOptions,\n      isMulti: true,\n      placeholder: placeholder || 'Filter...',\n      className: \"filter-select\",\n      classNamePrefix: \"filter-select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-values\",\n      children: filterValue && filterValue.map(value => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filter-badge\",\n        children: [value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveSelectedValue(id, value),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SelectColumnFilter;\nconst Table = ({\n  columns,\n  data\n}) => {\n  _s2();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    className: \"data-table telephone-line-view-data-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' 🔽' : ' 🔼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, index) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          className: index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\",\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 5\n  }, this);\n};\n_s2(Table, \"BYNTWeoXdryq+6lvDEiS5kf/9Fc=\", false, function () {\n  return [useTable];\n});\n_c3 = Table;\nconst CustomDropdown = ({\n  name,\n  value,\n  options,\n  onChange,\n  placeholder\n}) => {\n  _s3();\n  const [isOpen, setIsOpen] = useState(false);\n  const handleSelect = option => {\n    onChange({\n      target: {\n        name,\n        value: option.value\n      }\n    });\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: name,\n      value: value,\n      onChange: onChange,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-arrow\",\n      onClick: () => setIsOpen(!isOpen),\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-option\",\n        onClick: () => handleSelect(option),\n        children: option.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 5\n  }, this);\n};\n_s3(CustomDropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c4 = CustomDropdown;\nexport default TelephoneLine;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TelephoneLine\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","useTable","useSortBy","useFilters","Select","jsxDEV","_jsxDEV","setDefaultValues","data","defaultValue","Object","fromEntries","entries","map","key","value","getCustomHeaderName","header","customNames","numero_de_gsm","full_name","code_entite","direction","fonction","operateur","categorie","poste_GSM","replace","TelephoneLine","_s","telephoneLines","setTelephoneLines","originalData","setOriginalData","options","setOptions","filters","setFilters","newLine","setNewLine","isEditing","setIsEditing","currentLine","setCurrentLine","history","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","totalPages","Math","ceil","length","fetchTelephoneLines","response","get","headers","Authorization","localStorage","getItem","line","error","console","message","alert","fetchDropdownOptions","fields","fetchedOptions","field","label","applyFilters","appliedFilters","filteredData","keys","forEach","filterKey","filter","item","some","toLowerCase","includes","handleFilterChange","selectedOptions","values","option","prevFilters","updatedFilters","handleRemoveFilter","updatedValues","handleAddLine","formattedLine","post","addedLine","handleDeleteLine","id","delete","prevLines","handleModifyLine","handleUpdateLine","put","updatedLine","handleChange","e","name","target","prevState","columns","useMemo","Header","accessor","row","i","disableFilters","disableSortBy","width","Cell","className","children","onClick","original","fileName","_jsxFileName","lineNumber","columnNumber","Filter","column","SelectColumnFilter","placeholder","handleRemoveSelectedValue","isSearchable","paginatedData","startIndex","endIndex","slice","goBack","index","innerKey","CustomDropdown","onChange","type","startsWith","Table","disabled","prev","max","min","Number","_c","filterValue","setFilter","filterOptions","undefined","isMulti","classNamePrefix","_c2","_s2","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","_c3","_s3","isOpen","setIsOpen","handleSelect","_c4","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/TelephoneLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport './TelephoneLine.css';\r\n\r\nconst setDefaultValues = (data, defaultValue = '------') => {\r\n  return Object.fromEntries(\r\n    Object.entries(data).map(([key, value]) => {\r\n      if (value === '' || value === null) {\r\n        return [key, defaultValue];\r\n      }\r\n      return [key, value];\r\n    })\r\n  );\r\n};\r\n\r\nconst getCustomHeaderName = (header) => {\r\n  const customNames = {\r\n    numero_de_gsm: 'Numero de GSM',\r\n    full_name: 'Nom et Prénom',\r\n    code_entite: 'Code Entité',\r\n    direction: 'Direction',\r\n    fonction: 'Fonction',\r\n    operateur: 'Opérateur',\r\n    categorie: 'Catégorie',\r\n    poste_GSM: 'Poste GSM',\r\n  };\r\n  return customNames[header] || header.replace(/_/g, ' ');\r\n};\r\n\r\nconst TelephoneLine = () => {\r\n  const [telephoneLines, setTelephoneLines] = useState([]);\r\n  const [originalData, setOriginalData] = useState([]);\r\n  const [options, setOptions] = useState({});\r\n  const [filters, setFilters] = useState({});\r\n  const [newLine, setNewLine] = useState({\r\n    numero_de_gsm: '',\r\n    full_name: '',\r\n    code_entite: '',\r\n    direction: '',\r\n    fonction: '',\r\n    operateur: '',\r\n    categorie: '',\r\n    poste_GSM: '',\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentLine, setCurrentLine] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const totalPages = Math.ceil(telephoneLines.length / rowsPerPage);\r\n\r\n  useEffect(() => {\r\n    const fetchTelephoneLines = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telephone-lines', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        const data = response.data.map(line => setDefaultValues(line));\r\n        setTelephoneLines(data);\r\n        setOriginalData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching Telephone Lines:', error.message);\r\n        alert('Failed to fetch telephone lines: ' + error.message);\r\n      }\r\n    };\r\n\r\n    const fetchDropdownOptions = async () => {\r\n      try {\r\n        const fields = ['code_entite', 'direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'];\r\n        const fetchedOptions = {};\r\n        for (const field of fields) {\r\n          const response = await axios.get(`http://localhost:5000/api/telephone-lines/dropdown/${field}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n          });\r\n          fetchedOptions[field] = response.data.map(value => ({ value, label: value }));\r\n        }\r\n        setOptions(fetchedOptions);\r\n      } catch (error) {\r\n        console.error('Error fetching dropdown options:', error.message);\r\n        alert('Failed to fetch dropdown options: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchTelephoneLines();\r\n    fetchDropdownOptions();\r\n  }, []);\r\n\r\n  const applyFilters = (data, appliedFilters) => {\r\n    let filteredData = data;\r\n\r\n    Object.keys(appliedFilters).forEach(filterKey => {\r\n      if (appliedFilters[filterKey].length > 0) {\r\n        filteredData = filteredData.filter(item => {\r\n          if (filterKey === 'numero_de_gsm' || filterKey === 'full_name') {\r\n            return appliedFilters[filterKey].some(filter => \r\n              item[filterKey].toLowerCase().includes(filter.toLowerCase())\r\n            );\r\n          }\r\n          return appliedFilters[filterKey].includes(item[filterKey]);\r\n        });\r\n      }\r\n    });\r\n\r\n    setTelephoneLines(filteredData);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleFilterChange = (field, selectedOptions) => {\r\n    let values;\r\n    if (field === 'numero_de_gsm' || field === 'full_name') {\r\n      values = selectedOptions ? [selectedOptions.value] : [];\r\n    } else {\r\n      values = selectedOptions ? selectedOptions.map(option => option.value) : [];\r\n    }\r\n    \r\n    setFilters(prevFilters => {\r\n      const updatedFilters = {\r\n        ...prevFilters,\r\n        [field]: values\r\n      };\r\n      applyFilters(originalData, updatedFilters);\r\n      return updatedFilters;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFilter = (field, value) => {\r\n    const updatedValues = filters[field].filter(item => item !== value);\r\n    const updatedFilters = { ...filters, [field]: updatedValues };\r\n    setFilters(updatedFilters);\r\n    applyFilters(originalData, updatedFilters);\r\n  };\r\n\r\n  const handleAddLine = async () => {\r\n    if (!newLine.numero_de_gsm) {\r\n      alert('The \"numero_de_gsm\" field must be filled.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formattedLine = setDefaultValues(newLine);\r\n      const response = await axios.post('http://localhost:5000/api/telephone-lines', formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const addedLine = response.data;\r\n      setTelephoneLines([...telephoneLines, addedLine]);\r\n      setNewLine({\r\n        numero_de_gsm: '',\r\n        full_name: '',\r\n        code_entite: '',\r\n        direction: '',\r\n        fonction: '',\r\n        operateur: '',\r\n        categorie: '',\r\n        poste_GSM: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding Telephone Line:', error.message);\r\n      alert('Failed to add telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteLine = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/telephone-lines/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      setTelephoneLines((prevLines) => prevLines.filter(line => line.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting Telephone Line:', error.message);\r\n      alert('Failed to delete telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleModifyLine = (line) => {\r\n    setIsEditing(true);\r\n    setCurrentLine(line);\r\n  };\r\n\r\n  const handleUpdateLine = async () => {\r\n    try {\r\n      const formattedLine = setDefaultValues(currentLine);\r\n      const response = await axios.put(`http://localhost:5000/api/telephone-lines/${currentLine.id}`, formattedLine, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n      const updatedLine = response.data;\r\n      setTelephoneLines(telephoneLines.map(line => line.id === updatedLine.id ? updatedLine : line));\r\n      setIsEditing(false);\r\n      setCurrentLine(null);\r\n    } catch (error) {\r\n      console.error('Error updating Telephone Line:', error.message);\r\n      alert('Failed to update telephone line: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (isEditing) {\r\n      setCurrentLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    } else {\r\n      setNewLine(prevState => ({\r\n        ...prevState,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const columns = React.useMemo(() => [\r\n    {\r\n      Header: '#',\r\n      accessor: (row, i) => (currentPage - 1) * rowsPerPage + i + 1,\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 50,\r\n    },\r\n    {\r\n      Header: 'Actions',\r\n      accessor: 'actions',\r\n      disableFilters: true,\r\n      disableSortBy: true,\r\n      width: 120,\r\n      Cell: ({ row }) => (\r\n        <div className=\"actions-column\">\r\n          <button className=\"modify-button\" onClick={() => handleModifyLine(row.original)}>Modify</button>\r\n          <button className=\"delete-button\" onClick={() => handleDeleteLine(row.original.id)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n    ...Object.keys(newLine).map((key) => ({\r\n      Header: getCustomHeaderName(key),\r\n      accessor: key,\r\n      Filter: ({ column }) => (\r\n        <SelectColumnFilter\r\n          column={column}\r\n          options={key === 'numero_de_gsm' || key === 'full_name' ? [] : options[key] || []}\r\n          placeholder={`Filtrer par ${getCustomHeaderName(key)}`}\r\n          handleFilterChange={handleFilterChange}\r\n          handleRemoveSelectedValue={handleRemoveFilter}\r\n          isSearchable={key === 'numero_de_gsm' || key === 'full_name'}\r\n        />\r\n      ),\r\n    })),\r\n  ], [newLine, currentPage, rowsPerPage, options, filters]);\r\n\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    const endIndex = startIndex + rowsPerPage;\r\n    return telephoneLines.slice(startIndex, endIndex);\r\n  }, [telephoneLines, currentPage, rowsPerPage]);\r\n\r\n  return (\r\n    <div className=\"telephone-line-manager\">\r\n      <button className=\"telephone-line-modify-back-button\" onClick={() => history.goBack()}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1>Line Téléphonique Manager</h1>\r\n      <div className=\"add-line\">\r\n        <table className=\"form-table telephone-line-form-table\">\r\n          <tbody>\r\n            {Object.keys(newLine).map((key, index) => (\r\n              index % 3 === 0 && (\r\n                <tr key={index}>\r\n                  {Object.keys(newLine).slice(index, index + 3).map(innerKey => (\r\n                    <td key={innerKey}>\r\n                      <label className=\"telephone-line-form-label\">{getCustomHeaderName(innerKey)}</label>\r\n                      {['code_entite', 'direction', 'fonction', 'operateur', 'categorie', 'poste_GSM'].includes(innerKey) ? (\r\n                        <CustomDropdown\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          options={options[innerKey] || []}\r\n                          onChange={handleChange}\r\n                          placeholder={`Entrer/Selectionner ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      ) : (\r\n                        <input\r\n                          type={innerKey.startsWith('date') ? 'date' : 'text'}\r\n                          name={innerKey}\r\n                          value={isEditing ? currentLine[innerKey] : newLine[innerKey]}\r\n                          onChange={handleChange}\r\n                          className=\"input-field\"\r\n                          placeholder={innerKey === 'numero_de_gsm' ? 'eg: 212XXXXXXXXX' : `Entrer ${innerKey.replace(/_/g, ' ')}`}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              )\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        {isEditing ? (\r\n          <button className=\"update-button\" onClick={handleUpdateLine}>Update Line</button>\r\n        ) : (\r\n          <button className=\"add-button\" onClick={handleAddLine}>Add Line</button>\r\n        )}\r\n      </div>\r\n      <div className=\"selected-filters\">\r\n        <h3>Filtres Sélectionnés:</h3>\r\n        <div>\r\n          {Object.keys(filters).map((key) => (\r\n            filters[key].length > 0 && (\r\n              <div key={key}>\r\n                <strong>{getCustomHeaderName(key)}:</strong> {filters[key].map((value) => (\r\n                  <span key={value} className=\"filter-badge\">\r\n                    {value} <button onClick={() => handleRemoveFilter(key, value)}>x</button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"table-container\">\r\n        <Table columns={columns} data={paginatedData} />\r\n      </div>\r\n      <div className=\"pagination-controls\">\r\n        <button onClick={() => setCurrentPage(1)} disabled={currentPage === 1}>{'<<'}</button>\r\n        <button onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))} disabled={currentPage === 1}>{'Précédent'}</button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))} disabled={currentPage === totalPages}>{'Suivant'}</button>\r\n        <button onClick={() => setCurrentPage(totalPages)} disabled={currentPage === totalPages}>{'>>'}</button>\r\n        <select value={rowsPerPage} onChange={(e) => setRowsPerPage(Number(e.target.value))}>\r\n          <option value={10}>Show 10</option>\r\n          <option value={25}>Show 25</option>\r\n          <option value={50}>Show 50</option>\r\n          <option value={100}>Show 100</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectColumnFilter = ({ column: { filterValue, setFilter, id }, options = [], placeholder, handleFilterChange, handleRemoveSelectedValue }) => {\r\n  const filterOptions = options.map(option => ({ value: option, label: option }));\r\n\r\n  const handleChange = (selectedOptions) => {\r\n    setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    handleFilterChange(id, selectedOptions);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        value={filterOptions.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={filterOptions}\r\n        isMulti\r\n        placeholder={placeholder || 'Filter...'}\r\n        className=\"filter-select\"\r\n        classNamePrefix=\"filter-select\"\r\n      />\r\n      <div className=\"selected-values\">\r\n        {filterValue && filterValue.map(value => (\r\n          <span key={value} className=\"filter-badge\">\r\n            {value} <button onClick={() => handleRemoveSelectedValue(id, value)}>x</button>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useSortBy\r\n  );\r\n\r\n  return (\r\n    <table {...getTableProps()} className=\"data-table telephone-line-view-data-table\">\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                <div>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </div>\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, index) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()} className={index % 2 === 0 ? \"telephone-line-view-row-even\" : \"telephone-line-view-row-odd\"}>\r\n              {row.cells.map(cell => (\r\n                <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              ))}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst CustomDropdown = ({ name, value, options, onChange, placeholder }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleSelect = (option) => {\r\n    onChange({ target: { name, value: option.value } });\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown-container\">\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n      />\r\n      <div className=\"dropdown-arrow\" onClick={() => setIsOpen(!isOpen)}>\r\n        ▼\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"dropdown-menu\">\r\n          {options.map((option, index) => (\r\n            <div key={index} className=\"dropdown-option\" onClick={() => handleSelect(option)}>\r\n              {option.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelephoneLine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}