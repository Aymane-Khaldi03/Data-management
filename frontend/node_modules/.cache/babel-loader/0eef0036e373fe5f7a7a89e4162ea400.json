{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ExcelEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null); // Initialize selectedFile state\n  const [table, setTable] = useState('it_equipments'); // Initialize table state with a default value\n  const [message, setMessage] = useState('');\n  const [schema, setSchema] = useState([]); // Initialize schema state\n\n  useEffect(() => {\n    const fetchSchema = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/schema/${table}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch schema');\n        }\n        const data = await response.json();\n        setSchema(data);\n      } catch (error) {\n        console.error(error);\n        setMessage('Failed to fetch schema');\n      }\n    };\n    fetchSchema();\n  }, [table]);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch(`http://localhost:5000/api/upload/${table}`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload data');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      console.error(error);\n      setMessage('Failed to upload data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"excel-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Excel File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Table:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: table,\n        onChange: e => setTable(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"it_equipments\",\n          children: \"IT Equipments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telecom_pack\",\n          children: \"Telecom Pack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"telephone_lines\",\n          children: \"Telephone Lines\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Excel file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Schema for \", table]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), schema.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: schema.map((field, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: field\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No schema available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelEditor, \"G2qNe1QP6XdflZH/dqvCcjvGfp4=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExcelEditor","_s","selectedFile","setSelectedFile","table","setTable","message","setMessage","schema","setSchema","fetchSchema","response","fetch","ok","Error","data","json","error","console","handleFileChange","e","target","files","handleUpload","formData","FormData","append","method","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","type","onClick","length","map","field","index","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ExcelEditor.css';\r\n\r\nconst ExcelEditor = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null); // Initialize selectedFile state\r\n  const [table, setTable] = useState('it_equipments'); // Initialize table state with a default value\r\n  const [message, setMessage] = useState('');\r\n  const [schema, setSchema] = useState([]); // Initialize schema state\r\n\r\n  useEffect(() => {\r\n    const fetchSchema = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/schema/${table}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch schema');\r\n        }\r\n        const data = await response.json();\r\n        setSchema(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setMessage('Failed to fetch schema');\r\n      }\r\n    };\r\n\r\n    fetchSchema();\r\n  }, [table]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/upload/${table}`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload data');\r\n      }\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('Failed to upload data');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-editor\">\r\n      <h2>Excel File Upload</h2>\r\n      {message && <p>{message}</p>}\r\n      <div>\r\n        <label>Select Table:</label>\r\n        <select value={table} onChange={(e) => setTable(e.target.value)}>\r\n          <option value=\"it_equipments\">IT Equipments</option>\r\n          <option value=\"telecom_pack\">Telecom Pack</option>\r\n          <option value=\"telephone_lines\">Telephone Lines</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>Select Excel file</label>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n      </div>\r\n      <button onClick={handleUpload}>Upload</button>\r\n      <div>\r\n        <h3>Schema for {table}</h3>\r\n        {schema.length > 0 ? (\r\n          <ul>\r\n            {schema.map((field, index) => (\r\n              <li key={index}>{field}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No schema available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}