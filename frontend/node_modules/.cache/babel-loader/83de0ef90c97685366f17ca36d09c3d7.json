{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khald\\\\OneDrive\\\\Desktop\\\\Project_gestion_initial\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\ExcelEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as XLSX from 'xlsx';\nimport axios from 'axios';\nimport styles from './ExcelEditor.css'; // Ensure the correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelEditor = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [schema, setSchema] = useState([]);\n  useEffect(() => {\n    // Fetch the schema from the backend to display the table columns\n    const fetchSchema = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/schema');\n        setSchema(response.data);\n      } catch (error) {\n        console.error('Error fetching schema:', error);\n        setMessage('Failed to fetch schema');\n      }\n    };\n    fetchSchema();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage('Please select a file to upload');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = async event => {\n      const data = new Uint8Array(event.target.result);\n      const workbook = XLSX.read(data, {\n        type: 'array'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const json = XLSX.utils.sheet_to_json(worksheet);\n      try {\n        await axios.post('http://localhost:5000/api/upload', json);\n        setMessage('File uploaded successfully');\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setMessage('Failed to upload file');\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.excelEditor,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.header,\n      children: \"Excel File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: styles.label,\n        children: \"Select Excel file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: handleFileChange,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: suploadButyles.tton,\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), schema.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.schemaInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.schemaHeader,\n        children: \"Database Schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.schemaTable,\n        children: /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: schema.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: column\n            }, column, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.schemaNote,\n        children: \"Please ensure your Excel file matches the above schema.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelEditor, \"6OHlzDZMp0wP9TgeEB9fIum93sA=\");\n_c = ExcelEditor;\nexport default ExcelEditor;\nvar _c;\n$RefreshReg$(_c, \"ExcelEditor\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","axios","styles","jsxDEV","_jsxDEV","ExcelEditor","_s","file","setFile","message","setMessage","schema","setSchema","fetchSchema","response","get","data","error","console","handleFileChange","e","target","files","handleUpload","reader","FileReader","onload","event","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","post","readAsArrayBuffer","className","excelEditor","children","header","fileName","_jsxFileName","lineNumber","columnNumber","formGroup","htmlFor","label","id","onChange","input","suploadButyles","tton","onClick","length","schemaInfo","schemaHeader","schemaTable","map","column","schemaNote","_c","$RefreshReg$"],"sources":["C:/Users/khald/OneDrive/Desktop/Project_gestion_initial/frontend/src/components/Dashboard/ExcelEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport axios from 'axios';\r\nimport styles from './ExcelEditor.css'; // Ensure the correct import\r\n\r\nconst ExcelEditor = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [schema, setSchema] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the schema from the backend to display the table columns\r\n    const fetchSchema = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/schema');\r\n        setSchema(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching schema:', error);\r\n        setMessage('Failed to fetch schema');\r\n      }\r\n    };\r\n\r\n    fetchSchema();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) {\r\n      setMessage('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = async (event) => {\r\n      const data = new Uint8Array(event.target.result);\r\n      const workbook = XLSX.read(data, { type: 'array' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const worksheet = workbook.Sheets[sheetName];\r\n      const json = XLSX.utils.sheet_to_json(worksheet);\r\n\r\n      try {\r\n        await axios.post('http://localhost:5000/api/upload', json);\r\n        setMessage('File uploaded successfully');\r\n      } catch (error) {\r\n        console.error('Error uploading file:', error);\r\n        setMessage('Failed to upload file');\r\n      }\r\n    };\r\n\r\n    reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.excelEditor}>\r\n      <h2 className={styles.header}>Excel File Upload</h2>\r\n      <div className={styles.formGroup}>\r\n        <label htmlFor=\"file\" className={styles.label}>Select Excel file</label>\r\n        <input type=\"file\" id=\"file\" onChange={handleFileChange} className={styles.input} />\r\n      </div>\r\n      <button className={suploadButyles.tton} onClick={handleUpload}>\r\n        Upload\r\n      </button>\r\n      {message && <p className={styles.message}>{message}</p>}\r\n      {schema.length > 0 && (\r\n        <div className={styles.schemaInfo}>\r\n          <h3 className={styles.schemaHeader}>Database Schema</h3>\r\n          <table className={styles.schemaTable}>\r\n            <thead>\r\n              <tr>\r\n                {schema.map((column) => (\r\n                  <th key={column}>{column}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n          <p className={styles.schemaNote}>Please ensure your Excel file matches the above schema.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}