[{"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\index.js":"1","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\App.js":"2","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\ConsultantDashboard.js":"3","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Home.js":"4","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\AdminDashboard.js":"5","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Dashboard.js":"6","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\hooks\\useAuth.js":"7","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Login.js":"8","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Signup.js":"9","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Navbar.js":"10","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Sidebar.js":"11","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ExcelEditor.js":"12","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipment.js":"13","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentLanding.js":"14","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentView.js":"15","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPack.js":"16","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackLanding.js":"17","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackView.js":"18","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLine.js":"19","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineLanding.js":"20","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineView.js":"21"},{"size":259,"mtime":1717579923617,"results":"22","hashOfConfig":"23"},{"size":3317,"mtime":1720424221006,"results":"24","hashOfConfig":"23"},{"size":1292,"mtime":1719914870782,"results":"25","hashOfConfig":"23"},{"size":719,"mtime":1717667400577,"results":"26","hashOfConfig":"23"},{"size":11995,"mtime":1720529546801,"results":"27","hashOfConfig":"23"},{"size":1261,"mtime":1717595088658,"results":"28","hashOfConfig":"23"},{"size":2287,"mtime":1717678338440,"results":"29","hashOfConfig":"23"},{"size":4779,"mtime":1717680029396,"results":"30","hashOfConfig":"23"},{"size":4672,"mtime":1717680046431,"results":"31","hashOfConfig":"23"},{"size":1282,"mtime":1717680395145,"results":"32","hashOfConfig":"23"},{"size":1696,"mtime":1720010551109,"results":"33","hashOfConfig":"23"},{"size":10295,"mtime":1720530272610,"results":"34","hashOfConfig":"23"},{"size":26825,"mtime":1720533405683,"results":"35","hashOfConfig":"23"},{"size":803,"mtime":1719560974709,"results":"36","hashOfConfig":"23"},{"size":8219,"mtime":1720080395135,"results":"37","hashOfConfig":"23"},{"size":20796,"mtime":1720533934451,"results":"38","hashOfConfig":"23"},{"size":859,"mtime":1719565350013,"results":"39","hashOfConfig":"23"},{"size":8037,"mtime":1720523179036,"results":"40","hashOfConfig":"23"},{"size":13779,"mtime":1720533861242,"results":"41","hashOfConfig":"23"},{"size":895,"mtime":1720430582223,"results":"42","hashOfConfig":"23"},{"size":7230,"mtime":1720431628972,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"10eak4g",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\index.js",[],["91","92"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\App.js",["93","94"],"import React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect, useLocation, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Login from './components/Auth/Login';\nimport Signup from './components/Auth/Signup';\nimport Dashboard from './pages/Dashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport ConsultantDashboard from './pages/ConsultantDashboard';\nimport Navbar from './components/Shared/Navbar';\nimport Sidebar from './components/Shared/Sidebar';\nimport { AuthProvider, useAuth } from './hooks/useAuth';\nimport ExcelEditor from './components/Dashboard/ExcelEditor';\n//\nimport ITEquipmentLanding from './components/Dashboard/ITEquipmentLanding';\nimport ITEquipmentView from './components/Dashboard/ITEquipmentView';\nimport ITEquipment from './components/Dashboard/ITEquipment';\n//\nimport TelecomPack from './components/Dashboard/TelecomPack';\nimport TelecomPackLanding from './components/Dashboard/TelecomPackLanding';\nimport TelecomPackView from './components/Dashboard/TelecomPackView';\n\nimport './App.css';\nimport TelephoneLine from './components/Dashboard/TelephoneLine';\nimport TelephoneLineLanding from './components/Dashboard/TelephoneLineLanding';\nimport TelephoneLineView from './components/Dashboard/TelephoneLineView';\n\nconst AppContent = () => {\n  const { user } = useAuth();\n  const location = useLocation();\n\n  // Determine if the current path is the homepage, signup page, or login page\n  const showSidebar = !['/', '/signup', '/login'].includes(location.pathname);\n  const isAuthenticated = !!user; // Check if the user is authenticated\n\n  const getDashboardComponent = () => {\n    if (!isAuthenticated) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    switch (user.role) {\n      case 'admin':\n        return <AdminDashboard />;\n      case 'consultant':\n        return <ConsultantDashboard />;\n      default:\n        return <Dashboard />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className={`main-content ${showSidebar ? 'with-sidebar' : ''}`}>\n        {showSidebar && <Sidebar />}\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/dashboard\" exact render={getDashboardComponent} />\n          \n          <Route path=\"/it-equipment\" exact component={ITEquipmentLanding} />\n          <Route path=\"/it-equipment-manager\" component={ITEquipment} />\n          <Route path=\"/it-equipment-view\" component={ITEquipmentView} />\n\n          <Route path=\"/telecom-packs\" exact component={TelecomPackLanding} />\n          <Route path=\"/telecom-pack-manager\" component={TelecomPack} />\n          <Route path=\"/telecom-pack-view\" component={TelecomPackView} />\n\n          <Route path=\"/telephone-lines\" exact component={TelephoneLineLanding} />\n          <Route path=\"/telephone-line-manager\" component={TelephoneLine} />\n          <Route path=\"/telephone-line-view\" component={TelephoneLineView} />\n\n          <Route path=\"/edit-excel\" component={ExcelEditor} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => (\n  <AuthProvider>\n    <Router>\n      <AppContent />\n    </Router>\n  </AuthProvider>\n);\n\nexport default App;\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\ConsultantDashboard.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\AdminDashboard.js",["95","96"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Dashboard.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\hooks\\useAuth.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Login.js",["97","98"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport loginpageimage from '../../assets/loginpageimage.jpg'; // Import the image\n\nconst Login = () => {\n  const { login } = useAuth();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const user = await login(email, password);\n      setMessage('Login successful! Redirecting to dashboard...');\n      \n      // Redirect based on role\n      setTimeout(() => {\n        switch (user.role) {\n          case 'admin':\n            history.push('/admin-dashboard');\n            break;\n          case 'consultant':\n            history.push('/consultant-dashboard');\n            break;\n          default:\n            history.push('/dashboard');\n            break;\n        }\n      }, 2000);\n    } catch (error) {\n      setMessage('Login failed: ' + error.message);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.background}></div>\n      <h2 style={styles.h2}>Login</h2>\n      {message && <p style={styles.message}>{message}</p>}\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <div style={styles.div}>\n          <label style={styles.label}>Email</label>\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required style={styles.input} />\n        </div>\n        <div style={styles.div}>\n          <label style={styles.label}>Password</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required style={styles.input} />\n        </div>\n        <button \n          type=\"submit\" \n          style={isHovering ? { ...styles.button, ...styles.buttonHover } : styles.button}\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n        >\n          Login\n        </button>\n        <div style={styles.additionalOptions}>\n          <label>\n            <input type=\"checkbox\" /> Remember me\n          </label>\n          <a href=\"/forgot-password\" style={styles.link}>Forgot password?</a>\n        </div>\n        <footer style={styles.footer}>\n          Not a member? <a href=\"/signup\" style={styles.link}>Signup Now</a>\n        </footer>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    textAlign: 'center',\n    overflow: 'hidden',\n    textAlign: 'center',\n    marginTop: '-10px',\n    marginLeft: '-10px',\n    marginRight: '-10px',\n    marginBottom: '-10px',\n    flex: 1\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: `url(${loginpageimage}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    filter: 'blur(4px)',\n    zIndex: -1,\n  },\n  h2: {\n    color: '#333',\n    marginBottom: '20px',\n    fontWeight: 'bold',\n    fontSize: '50px',\n  },\n  form: {\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '70px 50px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.1)',\n    textAlign: 'left',\n    width: '100%',\n    maxWidth: '450px',\n    zIndex: 1,\n    position: 'relative',\n  },\n  div: {\n    marginBottom: '30px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555',\n    marginBottom: '30px',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '5px',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    marginBottom: '20px',\n    marginTop: '-60px',\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#ef6108', // Orange color\n    color: 'white',\n    fontSize: '16px',\n    cursor: 'pointer',\n    marginTop: '10px',\n  },\n  buttonHover: {\n    backgroundColor: 'black', // Darker color on hover\n  },\n  additionalOptions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '10px',\n  },\n  link: {\n    color: '#ef6108',\n    textDecoration: 'none',\n    fontSize: '14px',\n  },\n  footer: {\n    marginTop: '20px',\n    fontSize: '14px',\n    color: '#777',\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: '20px', // Adjust as necessary\n    width: '100%',\n    textAlign: 'center',\n    alignItems: 'center',\n  },\n  message: {\n    color: 'red',\n    fontStyle: 'italic',\n  }\n};\n\nexport default Login;\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Signup.js",["99","100","101"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport signupBackgroundImage from '../../assets/loginpageimage.jpg'; // Import the image\n\nconst Signup = () => {\n  const { signup } = useAuth();\n  const history = useHistory();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password.length < 6) {\n      setMessage('Password must be at least 6 characters long');\n      return;\n    }\n    try {\n      await signup(fullName, email, password);\n      setMessage('Signup successful! Redirecting to login...');\n      setTimeout(() => {\n        history.push('/login');\n      }, 2000);\n    } catch (error) {\n      const errorMessage = error.response && error.response.data ? error.response.data.msg : error.message;\n      setMessage('Signup failed: ' + errorMessage);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.background}></div>\n      <h2 style={styles.h2}>Signup</h2>\n      {message && <p style={styles.message}>{message}</p>}\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <div style={styles.div}>\n          <label style={styles.label}>Full Name</label>\n          <input type=\"text\" value={fullName} onChange={(e) => setFullName(e.target.value)} required style={styles.input} />\n        </div>\n        <div style={styles.div}>\n          <label style={styles.label}>Email</label>\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required style={styles.input} />\n        </div>\n        <div style={styles.div}>\n          <label style={styles.label}>Password</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required style={styles.input} />\n        </div>\n        <button \n          type=\"submit\" \n          style={isHovering ? { ...styles.button, ...styles.buttonHover } : styles.button}\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n        >\n          Signup\n        </button>\n        <footer style={styles.footer}>\n          Already a member? <a href=\"/login\" style={styles.link}>Login Now</a>\n        </footer>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    textAlign: 'center',\n    overflow: 'hidden',\n    textAlign: 'center',\n    marginTop: '-10px',\n    marginLeft: '-10px',\n    marginRight: '-10px',\n    marginBottom: '-10px',\n    flex: 1\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: `url(${signupBackgroundImage}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    filter: 'blur(4px)',\n    zIndex: -1,\n  },\n  h2: {\n    color: '#333',\n    marginBottom: '20px',\n    fontWeight: 'bold',\n    fontSize: '50px',\n  },\n  form: {\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '50px 50px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.1)',\n    textAlign: 'left',\n    width: '100%',\n    maxWidth: '450px',\n    zIndex: 1,\n    position: 'relative',\n  },\n  div: {\n    marginBottom: '30px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555',\n    marginBottom: '25px',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '5px',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    marginBottom: '20px',\n    marginTop: '-10px',\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#ef6108', // Orange color\n    color: 'white',\n    fontSize: '16px',\n    cursor: 'pointer',\n    marginTop: '1px',\n    marginTop: '-10px',\n  },\n  buttonHover: {\n    backgroundColor: 'black', // Darker color on hover\n  },\n  link: {\n    color: '#ef6108',\n    textDecoration: 'none',\n    fontSize: '14px',\n  },\n  footer: {\n    marginTop: '10px',\n    fontSize: '14px',\n    color: '#777',\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: '1px', // Adjust as necessary\n    width: 'calc(100% - 100px)', // Ensure the footer is within the form\n    textAlign: 'center',\n  },\n  message: {\n    color: 'red',\n    fontStyle: 'italic',\n  }\n};\n\nexport default Signup;\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Navbar.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Sidebar.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ExcelEditor.js",["102","103","104"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipment.js",["105","106","107","108","109","110"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentLanding.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentView.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPack.js",["111","112"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackLanding.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackView.js",["113"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useTable, useSortBy, useFilters } from 'react-table';\r\nimport Select from 'react-select';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as XLSX from 'xlsx';\r\nimport './TelecomPackView.css';\r\n\r\nconst TelecomPackView = () => {\r\n  const [telecomPacks, setTelecomPacks] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [viewType, setViewType] = useState('general');\r\n  const history = useHistory();\r\n\r\n  const measureTextWidth = (text, font = '12px Arial') => {\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    context.font = font;\r\n    return context.measureText(text).width;\r\n  };\r\n\r\n  const setDefaultValues = (data, defaultValue = '------') => {\r\n    return Object.fromEntries(\r\n      Object.entries(data).map(([key, value]) => {\r\n        if (value === '' || value === null) {\r\n          if (['dateAbonnement', 'dateReengagement', 'dateEtat'].includes(key)) {\r\n            return [key, null];  // Set date fields to null if empty\r\n          } else {\r\n            return [key, defaultValue];  // Set other fields to default value\r\n          }\r\n        }\r\n        return [key, value];\r\n      })\r\n    );\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '------';\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split('T')[0]; // Format date to YYYY-MM-DD\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTelecomPacks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/telecom-packs', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n    \r\n        const data = response.data.map(pack => {\r\n          const { createdat, updatedat, id, produit, ...rest } = pack; // Exclude createdAt, updatedAt, id, and produit here\r\n          const formattedPack = setDefaultValues(rest);\r\n          return {\r\n            ...formattedPack,\r\n            dateAbonnement: formatDate(formattedPack.dateAbonnement),\r\n            dateReengagement: formatDate(formattedPack.dateReengagement),\r\n            dateEtat: formatDate(formattedPack.dateEtat),\r\n          };\r\n        });\r\n    \r\n        setTelecomPacks(data);\r\n    \r\n        const headers = Object.keys(data[0] || {});\r\n        const filteredHeaders = headers.filter(header => !['createdat', 'updatedat', 'produit'].includes(header)); // Exclude createdAt, updatedAt, and produit here\r\n        const maxWidths = filteredHeaders.reduce((acc, header) => {\r\n          const headerWidth = measureTextWidth(header.replace(/_/g, ' '));\r\n          const maxLength = Math.max(\r\n            headerWidth,\r\n            ...data.map(row => measureTextWidth(row[header] ? row[header].toString() : ''))\r\n          );\r\n          acc[header] = maxLength;\r\n          return acc;\r\n        }, {});\r\n    \r\n        const cols = [\r\n          {\r\n            Header: '#',\r\n            accessor: (row, i) => i + 1,\r\n            disableFilters: true,\r\n            disableSortBy: true,\r\n            width: 50,\r\n          },\r\n          ...filteredHeaders.map((header) => ({\r\n            Header: header.replace(/_/g, ' '),\r\n            accessor: header,\r\n            Filter: SelectColumnFilter,\r\n            width: maxWidths[header] + 20,\r\n          })),\r\n        ];\r\n    \r\n        setColumns(cols);\r\n      } catch (error) {\r\n        console.error('Error fetching Telecom Packs:', error);\r\n        alert('Error fetching Telecom Packs: ' + error.message);\r\n      }\r\n    };    \r\n    fetchTelecomPacks();\r\n  }, []);           \r\n\r\n  const SelectColumnFilter = ({\r\n    column: { filterValue, setFilter, preFilteredRows, id },\r\n  }) => {\r\n    const options = React.useMemo(() => {\r\n      const optionsSet = new Set();\r\n      preFilteredRows.forEach(row => {\r\n        optionsSet.add(row.values[id]);\r\n      });\r\n      return [...optionsSet].map(option => ({ value: option, label: option }));\r\n    }, [id, preFilteredRows]);\r\n\r\n    const handleChange = (selectedOptions) => {\r\n      setFilter(selectedOptions ? selectedOptions.map(option => option.value) : undefined);\r\n    };\r\n\r\n    return (\r\n      <Select\r\n        value={options.filter(option => filterValue && filterValue.includes(option.value))}\r\n        onChange={handleChange}\r\n        options={options}\r\n        isMulti\r\n        placeholder={'Filtrer par...'}\r\n        className=\"telecompack-view-filter-select\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const filterData = (data) => {\r\n    const filteredData = data.filter(item =>\r\n      item.entite && item.entite !== '------' &&\r\n      item.operateur && item.operateur !== '------' &&\r\n      item.produit2 && item.produit2 !== '------' &&\r\n      item.etatAbonnement && item.etatAbonnement !== '------'\r\n    );\r\n    return filteredData;\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const filteredData = data.map(({ createdat, updatedat, id, produit, ...rest }) => rest); // Exclude createdAt, updatedAt, id, and produit here\r\n    const ws = XLSX.utils.json_to_sheet(filteredData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"TelecomPacks\");\r\n    XLSX.writeFile(wb, \"Parc_Telecom.xlsx\");\r\n  };\r\n  \r\n  const Table = ({ columns, data }) => {\r\n    const defaultColumn = {\r\n      minWidth: 30,\r\n      width: 150,\r\n      maxWidth: 400,\r\n    };\r\n\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n        defaultColumn,\r\n      },\r\n      useFilters,\r\n      useSortBy\r\n    );\r\n\r\n    return (\r\n      <div className=\"telecompack-view-table-container\">\r\n        <table {...getTableProps()} className=\"telecompack-view-data-table\">\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <div style={{ width: column.width }}>\r\n                      {column.render('Header')}\r\n                      <span>\r\n                        {column.isSorted\r\n                          ? column.isSortedDesc\r\n                            ? ' 🔽'\r\n                            : ' 🔼'\r\n                          : ''}\r\n                      </span>\r\n                      <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, rowIndex) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} className={rowIndex % 2 === 0 ? 'telecompack-view-row-even' : 'telecompack-view-row-odd'}>\r\n                  {row.cells.map(cell => (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"telecompack-view-container\">\r\n      <button className=\"telecompack-view-back-button\" onClick={() => history.push('/telecom-packs')}>\r\n        &#x21a9;\r\n      </button>\r\n      <h1 className=\"telecompack-view-title\">Afficher Telecom Packs</h1>\r\n      {columns.length > 0 && (\r\n        <Table\r\n          columns={columns}\r\n          data={viewType === 'general' ? telecomPacks : filterData(telecomPacks)}\r\n        />\r\n      )}\r\n      <div className=\"telecompack-view-footer\">\r\n        <button\r\n          className=\"telecompack-view-export-button\"\r\n          onClick={() => exportToExcel(viewType === 'general' ? telecomPacks : filterData(telecomPacks))}\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TelecomPackView;\r\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLine.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineLanding.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineView.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"122","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"123","line":7,"column":11,"nodeType":"120","messageId":"121","endLine":7,"endColumn":15},{"ruleId":"118","severity":1,"message":"124","line":14,"column":9,"nodeType":"120","messageId":"121","endLine":14,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":85,"column":5,"nodeType":"127","messageId":"128","endLine":85,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":128,"column":5,"nodeType":"127","messageId":"128","endLine":128,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":77,"column":5,"nodeType":"127","messageId":"128","endLine":77,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":120,"column":5,"nodeType":"127","messageId":"128","endLine":120,"endColumn":17},{"ruleId":"125","severity":1,"message":"130","line":142,"column":5,"nodeType":"127","messageId":"128","endLine":142,"endColumn":14},{"ruleId":"118","severity":1,"message":"119","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"131","line":68,"column":9,"nodeType":"120","messageId":"121","endLine":68,"endColumn":25},{"ruleId":"118","severity":1,"message":"132","line":179,"column":7,"nodeType":"120","messageId":"121","endLine":179,"endColumn":11},{"ruleId":"118","severity":1,"message":"133","line":68,"column":18,"nodeType":"120","messageId":"121","endLine":68,"endColumn":27},{"ruleId":"118","severity":1,"message":"134","line":69,"column":10,"nodeType":"120","messageId":"121","endLine":69,"endColumn":25},{"ruleId":"118","severity":1,"message":"135","line":69,"column":27,"nodeType":"120","messageId":"121","endLine":69,"endColumn":45},{"ruleId":"118","severity":1,"message":"136","line":226,"column":9,"nodeType":"120","messageId":"121","endLine":226,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":285,"column":6,"nodeType":"139","endLine":285,"endColumn":63,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":331,"column":6,"nodeType":"139","endLine":331,"endColumn":72,"suggestions":"142"},{"ruleId":"137","severity":1,"message":"143","line":150,"column":6,"nodeType":"139","endLine":150,"endColumn":19,"suggestions":"144"},{"ruleId":"137","severity":1,"message":"145","line":362,"column":6,"nodeType":"139","endLine":362,"endColumn":29,"suggestions":"146"},{"ruleId":"118","severity":1,"message":"147","line":12,"column":20,"nodeType":"120","messageId":"121","endLine":12,"endColumn":31},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'user' is assigned a value but never used.","'handleNavigation' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","unexpected","Duplicate key 'marginBottom'.","Duplicate key 'marginTop'.","'handleCellChange' is assigned a value but never used.","'rows' is assigned a value but never used.","'setSortBy' is assigned a value but never used.","'allITEquipments' is assigned a value but never used.","'setAllITEquipments' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useMemo has unnecessary dependencies: 'currentPage' and 'rowsPerPage'. Either exclude them or remove the dependency array.","ArrayExpression",["150"],"React Hook React.useMemo has an unnecessary dependency: 'selectedFilters'. Either exclude it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["152"],"React Hook React.useMemo has a missing dependency: 'handleDeletePack'. Either include it or remove the dependency array.",["153"],"'setViewType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [itEquipments, filters, sortBy]",{"range":"162","text":"163"},"Update the dependencies array to be: [newEquipment, currentPage, rowsPerPage, options]",{"range":"164","text":"165"},"Update the dependencies array to be: [currentPage, pageSize]",{"range":"166","text":"167"},"Update the dependencies array to be: [currentPage, handleDeletePack, pageSize]",{"range":"168","text":"169"},[8898,8955],"[itEquipments, filters, sortBy]",[10625,10691],"[newEquipment, currentPage, rowsPerPage, options]",[4638,4651],"[currentPage, pageSize]",[10752,10775],"[currentPage, handleDeletePack, pageSize]"]