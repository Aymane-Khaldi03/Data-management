[{"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\index.js":"1","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\App.js":"2","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\ConsultantDashboard.js":"3","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Home.js":"4","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\AdminDashboard.js":"5","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Dashboard.js":"6","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\hooks\\useAuth.js":"7","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Login.js":"8","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Signup.js":"9","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Navbar.js":"10","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Sidebar.js":"11","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ExcelEditor.js":"12","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipment.js":"13","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentLanding.js":"14","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentView.js":"15","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPack.js":"16","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackLanding.js":"17","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackView.js":"18","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLine.js":"19","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineLanding.js":"20","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineView.js":"21"},{"size":259,"mtime":1717579923617,"results":"22","hashOfConfig":"23"},{"size":3169,"mtime":1720695723037,"results":"24","hashOfConfig":"23"},{"size":1292,"mtime":1719914870782,"results":"25","hashOfConfig":"23"},{"size":719,"mtime":1717667400577,"results":"26","hashOfConfig":"23"},{"size":12189,"mtime":1720684734546,"results":"27","hashOfConfig":"23"},{"size":1261,"mtime":1717595088658,"results":"28","hashOfConfig":"23"},{"size":2747,"mtime":1720686815210,"results":"29","hashOfConfig":"23"},{"size":4771,"mtime":1720685480864,"results":"30","hashOfConfig":"23"},{"size":4670,"mtime":1720685500892,"results":"31","hashOfConfig":"23"},{"size":1282,"mtime":1717680395145,"results":"32","hashOfConfig":"23"},{"size":1871,"mtime":1720686835633,"results":"33","hashOfConfig":"23"},{"size":5086,"mtime":1720798141384,"results":"34","hashOfConfig":"23"},{"size":26836,"mtime":1720793997029,"results":"35","hashOfConfig":"23"},{"size":803,"mtime":1720686551207,"results":"36","hashOfConfig":"23"},{"size":10411,"mtime":1720795715116,"results":"37","hashOfConfig":"23"},{"size":21240,"mtime":1720795288387,"results":"38","hashOfConfig":"23"},{"size":859,"mtime":1720686544740,"results":"39","hashOfConfig":"23"},{"size":10005,"mtime":1720795108417,"results":"40","hashOfConfig":"23"},{"size":13779,"mtime":1720533861242,"results":"41","hashOfConfig":"23"},{"size":895,"mtime":1720686535891,"results":"42","hashOfConfig":"23"},{"size":9428,"mtime":1720795460558,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"10eak4g",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\index.js",[],["90","91"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\App.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\ConsultantDashboard.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\AdminDashboard.js",["92","93"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n  const [userHistory, setUserHistory] = useState([]);\r\n  const [modificationHistory, setModificationHistory] = useState([]);\r\n  const [telecomModificationHistory, setTelecomModificationHistory] = useState([]);\r\n  const [telephoneLineModificationHistory, setTelephoneLineModificationHistory] = useState([]);\r\n\r\n  const handleNavigation = (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserHistory();\r\n    fetchModificationHistory();\r\n    fetchTelecomModificationHistory();\r\n    fetchTelephoneLineModificationHistory(); // Add this line\r\n  }, []);\r\n\r\n  const fetchTelephoneLineModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telephone-lines/admin/telephone-line-modifications', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Fetched Telephone Line Modifications:', data);\r\n        setTelephoneLineModificationHistory(data);\r\n      } else {\r\n        console.error('Failed to fetch telephone line modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching telephone line modification history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users/admin/user-history', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Fetched User History:', data);\r\n        setUserHistory(data);\r\n      } else {\r\n        console.error('Failed to fetch user history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/admin/it-equipment-modifications', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const filteredData = data.filter(mod => mod.field !== 'createdAt' && mod.field !== 'updatedAt');\r\n        setModificationHistory(filteredData);\r\n      } else {\r\n        console.error('Failed to fetch modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching modification history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTelecomModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telecom-packs/admin/telecom-pack-modifications', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Fetched Telecom Modifications:', data);\r\n        setTelecomModificationHistory(data);\r\n      } else {\r\n        console.error('Failed to fetch telecom modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching telecom modification history:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleResetModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/admin/it-equipment-modifications', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        setModificationHistory([]); // Clear the modification history in the state\r\n        console.log('Modification history reset successfully');\r\n      } else {\r\n        console.error('Failed to reset modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting modification history:', error);\r\n    }\r\n  };\r\n  const handleResetTelecomModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telecom-packs/admin/telecom-pack-modifications', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setTelecomModificationHistory([]);\r\n        console.log('Telecom Pack modification history reset successfully');\r\n      } else {\r\n        console.error('Failed to reset Telecom Pack modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting Telecom Pack modification history:', error);\r\n    }\r\n  };\r\n  \r\n  const handleResetTelephoneLineModificationHistory = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/telephone-lines/admin/telephone-line-modifications', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setTelephoneLineModificationHistory([]);\r\n        console.log('Telephone Line modification history reset successfully');\r\n      } else {\r\n        console.error('Failed to reset Telephone Line modification history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting Telephone Line modification history:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"admin-dashboard-content\">\r\n        <h1 className=\"admin-dashboard-title\">Admin Dashboard</h1>\r\n\r\n        <div className=\"admin-user-history-section\">\r\n          <h2>Historique de connexion utilisateur</h2>\r\n          {userHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Email</th>\r\n                    <th>Nom et Prénom</th>\r\n                    <th>Dernière connexion</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {userHistory.map((user, index) => (\r\n                    <tr key={index}>\r\n                      <td>{user.email}</td>\r\n                      <td>{user.fullName}</td>\r\n                      <td>{formatDate(user.lastLogin)}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de connexion utilisateur disponible.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"admin-modification-history-section\">\r\n          <h2>Historique des modifications de Matériel informatique</h2>\r\n          <button onClick={handleResetModificationHistory} className=\"reset-button\">Réinitialiser</button>\r\n          {modificationHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Utilisateur</th>\r\n                    <th>Email</th>\r\n                    <th>Temps de Modification</th>\r\n                    <th>Champ</th>\r\n                    <th>Ancienne Valeur</th>\r\n                    <th>Nouvelle valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {modificationHistory.map((modification, index) => (\r\n                    <tr key={index}>\r\n                      <td>{modification.User.fullName}</td>\r\n                      <td>{modification.User.email}</td>\r\n                      <td>{formatDate(modification.modifiedAt)}</td>\r\n                      <td>{modification.field}</td>\r\n                      <td>{modification.oldValue}</td>\r\n                      <td>{modification.newValue}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de modification de Matériel Informatique disponible.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"admin-modification-history-section\">\r\n          <h2>Historique des modifications du Parc Télécom</h2>\r\n          <button onClick={handleResetTelecomModificationHistory} className=\"reset-button\">Réinitialiser</button>\r\n          {telecomModificationHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Utilisateur</th>\r\n                    <th>Email</th>\r\n                    <th>Temps de Modification</th>\r\n                    <th>Champ</th>\r\n                    <th>Ancienne Valeur</th>\r\n                    <th>Nouvelle valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {telecomModificationHistory.map((modification, index) => (\r\n                    <tr key={index}>\r\n                      <td>{modification.User.fullName}</td>\r\n                      <td>{modification.User.email}</td>\r\n                      <td>{formatDate(modification.modifiedAt)}</td>\r\n                      <td>{modification.field}</td>\r\n                      <td>{modification.oldValue ? modification.oldValue : 'N/A'}</td>\r\n                      <td>{modification.newValue ? modification.newValue : 'N/A'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de modification du Parc Télécom disponible.</p>\r\n          )}\r\n        </div>\r\n        <div className=\"admin-modification-history-section\">\r\n          <h2>Historique des modifications des Lignes Téléphoniques</h2>\r\n          <button onClick={handleResetTelephoneLineModificationHistory} className=\"reset-button\">Réinitialiser</button>\r\n          {telephoneLineModificationHistory.length > 0 ? (\r\n            <div className=\"admin-table-container\">\r\n              <table className=\"admin-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Utilisateur</th>\r\n                    <th>Email</th>\r\n                    <th>Temps de Modification</th>\r\n                    <th>Champ</th>\r\n                    <th>Ancienne Valeur</th>\r\n                    <th>Nouvelle valeur</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {telephoneLineModificationHistory.map((modification, index) => (\r\n                    <tr key={index}>\r\n                      <td>{modification.User.fullName}</td>\r\n                      <td>{modification.User.email}</td>\r\n                      <td>{formatDate(modification.modifiedAt)}</td>\r\n                      <td>{modification.field}</td>\r\n                      <td>{modification.oldValue ? modification.oldValue : 'N/A'}</td>\r\n                      <td>{modification.newValue ? modification.newValue : 'N/A'}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <p>Aucun historique de modification de Ligne Téléphonique disponible.</p>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\pages\\Dashboard.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\hooks\\useAuth.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Login.js",["94","95"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport loginpageimage from '../../assets/loginpageimage.jpg'; // Import the image\n\nconst Login = () => {\n  const { login } = useAuth();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const user = await login(email, password);\n      setMessage('Login successful! Redirecting to dashboard...');\n\n      // Redirect based on role\n      setTimeout(() => {\n        switch (user.role) {\n          case 'admin':\n            history.push('/admin-dashboard');\n            break;\n          case 'consultant':\n            history.push('/consultant-dashboard');\n            break;\n          default:\n            history.push('/dashboard');\n            break;\n        }\n      }, 2000);\n    } catch (error) {\n      setMessage('Login failed: ' + error.message);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.background}></div>\n      <h2 style={styles.h2}>Login</h2>\n      {message && <p style={styles.message}>{message}</p>}\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <div style={styles.div}>\n          <label style={styles.label}>Email</label>\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required style={styles.input} />\n        </div>\n        <div style={styles.div}>\n          <label style={styles.label}>Password</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required style={styles.input} />\n        </div>\n        <button\n          type=\"submit\"\n          style={isHovering ? { ...styles.button, ...styles.buttonHover } : styles.button}\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n        >\n          Login\n        </button>\n        <div style={styles.additionalOptions}>\n          <label>\n            <input type=\"checkbox\" /> Remember me\n          </label>\n          <a href=\"/forgot-password\" style={styles.link}>Forgot password?</a>\n        </div>\n        <footer style={styles.footer}>\n          Not a member? <a href=\"/signup\" style={styles.link}>Signup Now</a>\n        </footer>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    textAlign: 'center',\n    overflow: 'hidden',\n    textAlign: 'center',\n    marginTop: '-10px',\n    marginLeft: '-10px',\n    marginRight: '-10px',\n    marginBottom: '-10px',\n    flex: 1\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: `url(${loginpageimage}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    filter: 'blur(4px)',\n    zIndex: -1,\n  },\n  h2: {\n    color: '#333',\n    marginBottom: '20px',\n    fontWeight: 'bold',\n    fontSize: '50px',\n  },\n  form: {\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '70px 50px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.1)',\n    textAlign: 'left',\n    width: '100%',\n    maxWidth: '450px',\n    zIndex: 1,\n    position: 'relative',\n  },\n  div: {\n    marginBottom: '30px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555',\n    marginBottom: '30px',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '5px',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    marginBottom: '20px',\n    marginTop: '-60px',\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#ef6108', // Orange color\n    color: 'white',\n    fontSize: '16px',\n    cursor: 'pointer',\n    marginTop: '10px',\n  },\n  buttonHover: {\n    backgroundColor: 'black', // Darker color on hover\n  },\n  additionalOptions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '10px',\n  },\n  link: {\n    color: '#ef6108',\n    textDecoration: 'none',\n    fontSize: '14px',\n  },\n  footer: {\n    marginTop: '20px',\n    fontSize: '14px',\n    color: '#777',\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: '20px', // Adjust as necessary\n    width: '100%',\n    textAlign: 'center',\n    alignItems: 'center',\n  },\n  message: {\n    color: 'red',\n    fontStyle: 'italic',\n  }\n};\n\nexport default Login;\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Auth\\Signup.js",["96","97","98"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport signupBackgroundImage from '../../assets/loginpageimage.jpg'; // Import the image\n\nconst Signup = () => {\n  const { signup } = useAuth();\n  const history = useHistory();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password.length < 6) {\n      setMessage('Password must be at least 6 characters long');\n      return;\n    }\n    try {\n      await signup(fullName, email, password);\n      setMessage('Signup successful! Redirecting to login...');\n      setTimeout(() => {\n        history.push('/login');\n      }, 2000);\n    } catch (error) {\n      const errorMessage = error.response && error.response.data ? error.response.data.msg : error.message;\n      setMessage('Signup failed: ' + errorMessage);\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.background}></div>\n      <h2 style={styles.h2}>Signup</h2>\n      {message && <p style={styles.message}>{message}</p>}\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <div style={styles.div}>\n          <label style={styles.label}>Full Name</label>\n          <input type=\"text\" value={fullName} onChange={(e) => setFullName(e.target.value)} required style={styles.input} />\n        </div>\n        <div style={styles.div}>\n          <label style={styles.label}>Email</label>\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required style={styles.input} />\n        </div>\n        <div style={styles.div}>\n          <label style={styles.label}>Password</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required style={styles.input} />\n        </div>\n        <button\n          type=\"submit\"\n          style={isHovering ? { ...styles.button, ...styles.buttonHover } : styles.button}\n          onMouseEnter={() => setIsHovering(true)}\n          onMouseLeave={() => setIsHovering(false)}\n        >\n          Signup\n        </button>\n        <footer style={styles.footer}>\n          Already a member? <a href=\"/login\" style={styles.link}>Login Now</a>\n        </footer>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    textAlign: 'center',\n    overflow: 'hidden',\n    textAlign: 'center',\n    marginTop: '-10px',\n    marginLeft: '-10px',\n    marginRight: '-10px',\n    marginBottom: '-10px',\n    flex: 1\n  },\n  background: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: `url(${signupBackgroundImage}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    filter: 'blur(4px)',\n    zIndex: -1,\n  },\n  h2: {\n    color: '#333',\n    marginBottom: '20px',\n    fontWeight: 'bold',\n    fontSize: '50px',\n  },\n  form: {\n    background: 'rgba(255, 255, 255, 0.9)',\n    padding: '50px 50px',\n    borderRadius: '10px',\n    boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.1)',\n    textAlign: 'left',\n    width: '100%',\n    maxWidth: '450px',\n    zIndex: 1,\n    position: 'relative',\n  },\n  div: {\n    marginBottom: '30px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555',\n    marginBottom: '25px',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '5px',\n    fontSize: '16px',\n    boxSizing: 'border-box',\n    marginBottom: '20px',\n    marginTop: '-10px',\n  },\n  button: {\n    width: '100%',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    backgroundColor: '#ef6108', // Orange color\n    color: 'white',\n    fontSize: '16px',\n    cursor: 'pointer',\n    marginTop: '1px',\n    marginTop: '-10px',\n  },\n  buttonHover: {\n    backgroundColor: 'black', // Darker color on hover\n  },\n  link: {\n    color: '#ef6108',\n    textDecoration: 'none',\n    fontSize: '14px',\n  },\n  footer: {\n    marginTop: '10px',\n    fontSize: '14px',\n    color: '#777',\n    fontWeight: 'bold',\n    position: 'absolute',\n    bottom: '1px', // Adjust as necessary\n    width: 'calc(100% - 100px)', // Ensure the footer is within the form\n    textAlign: 'center',\n  },\n  message: {\n    color: 'red',\n    fontStyle: 'italic',\n  }\n};\n\nexport default Signup;\n","C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Navbar.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Shared\\Sidebar.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ExcelEditor.js",["99"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipment.js",["100","101","102","103","104","105"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentLanding.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\ITEquipmentView.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPack.js",["106","107"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackLanding.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelecomPackView.js",["108"],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLine.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineLanding.js",[],"C:\\Users\\khald\\OneDrive\\Desktop\\Project_gestion_initial\\frontend\\src\\components\\Dashboard\\TelephoneLineView.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":11,"nodeType":"115","messageId":"116","endLine":7,"endColumn":15},{"ruleId":"113","severity":1,"message":"117","line":14,"column":9,"nodeType":"115","messageId":"116","endLine":14,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":85,"column":5,"nodeType":"120","messageId":"121","endLine":85,"endColumn":14},{"ruleId":"118","severity":1,"message":"122","line":128,"column":5,"nodeType":"120","messageId":"121","endLine":128,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":77,"column":5,"nodeType":"120","messageId":"121","endLine":77,"endColumn":14},{"ruleId":"118","severity":1,"message":"122","line":120,"column":5,"nodeType":"120","messageId":"121","endLine":120,"endColumn":17},{"ruleId":"118","severity":1,"message":"123","line":142,"column":5,"nodeType":"120","messageId":"121","endLine":142,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":89,"column":6,"nodeType":"126","endLine":89,"endColumn":28,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"128","line":68,"column":18,"nodeType":"115","messageId":"116","endLine":68,"endColumn":27},{"ruleId":"113","severity":1,"message":"129","line":69,"column":10,"nodeType":"115","messageId":"116","endLine":69,"endColumn":25},{"ruleId":"113","severity":1,"message":"130","line":69,"column":27,"nodeType":"115","messageId":"116","endLine":69,"endColumn":45},{"ruleId":"113","severity":1,"message":"131","line":226,"column":9,"nodeType":"115","messageId":"116","endLine":226,"endColumn":25},{"ruleId":"124","severity":1,"message":"132","line":285,"column":6,"nodeType":"126","endLine":285,"endColumn":63,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"134","line":331,"column":6,"nodeType":"126","endLine":331,"endColumn":72,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":148,"column":6,"nodeType":"126","endLine":148,"endColumn":19,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"138","line":372,"column":6,"nodeType":"126","endLine":372,"endColumn":29,"suggestions":"139"},{"ruleId":"113","severity":1,"message":"140","line":12,"column":20,"nodeType":"115","messageId":"116","endLine":12,"endColumn":31},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'handleNavigation' is assigned a value but never used.","no-dupe-keys","Duplicate key 'textAlign'.","ObjectExpression","unexpected","Duplicate key 'marginBottom'.","Duplicate key 'marginTop'.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countMatchingColumns' and 'filterColumns'. Either include them or remove the dependency array.","ArrayExpression",["143"],"'setSortBy' is assigned a value but never used.","'allITEquipments' is assigned a value but never used.","'setAllITEquipments' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","React Hook React.useMemo has unnecessary dependencies: 'currentPage' and 'rowsPerPage'. Either exclude them or remove the dependency array.",["144"],"React Hook React.useMemo has an unnecessary dependency: 'selectedFilters'. Either exclude it or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["146"],"React Hook React.useMemo has a missing dependency: 'handleDeletePack'. Either include it or remove the dependency array.",["147"],"'setViewType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [selectedFile, schema, filterColumns, countMatchingColumns]",{"range":"158","text":"159"},"Update the dependencies array to be: [itEquipments, filters, sortBy]",{"range":"160","text":"161"},"Update the dependencies array to be: [newEquipment, currentPage, rowsPerPage, options]",{"range":"162","text":"163"},"Update the dependencies array to be: [currentPage, pageSize]",{"range":"164","text":"165"},"Update the dependencies array to be: [currentPage, handleDeletePack, pageSize]",{"range":"166","text":"167"},[2990,3012],"[selectedFile, schema, filterColumns, countMatchingColumns]",[8898,8955],"[itEquipments, filters, sortBy]",[10625,10691],"[newEquipment, currentPage, rowsPerPage, options]",[4552,4565],"[currentPage, pageSize]",[11198,11221],"[currentPage, handleDeletePack, pageSize]"]